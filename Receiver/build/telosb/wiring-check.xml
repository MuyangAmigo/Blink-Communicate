<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:ReceiverAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10ccaeb00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10c83f9a0"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10c83f9a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10ca0b590"/></to>
    </wire>
    <wire loc="11:ReceiverAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10ccad120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca30a10"/></to>
    </wire>
    <wire loc="12:ReceiverAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10cce29f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10dc25c30"/></to>
    </wire>
    <wire loc="65:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10dc25c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10e4d98b0"/></to>
    </wire>
    <wire loc="13:ReceiverAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10ccf94e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10dc248b0"/></to>
    </wire>
    <wire loc="66:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10dc248b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10e4d8590"/></to>
    </wire>
    <wire loc="14:ReceiverAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10cd095a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10dc25020"/></to>
    </wire>
    <wire loc="64:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10dc25020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10e4dab60"/></to>
    </wire>
    <wire loc="15:ReceiverAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x10cd29160"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10cd3f440"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10cd3f440"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10cd73020"/></to>
    </wire>
    <wire loc="16:ReceiverAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10cd24790"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10dc1f910"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10dc1f910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10cd3c800"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10db01dd0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10da55b50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10da0f750"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10da2b080"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d8b7110"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d7e4620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d6b4c60"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10ced87d0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e2c4140"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d1fd020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10ce40510"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10ca0bc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10c3c23a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10c3c23a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10c81a420"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x10ca236c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c859020"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10c859020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c856280"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10ca23dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10c856990"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x10c857640"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10c857640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c873580"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x10c8550c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c84f3f0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x10c8557a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10ca532e0"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10c873580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c8977e0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x10c888ae0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x10c896020"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x10c73e510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x10c895360"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x10c8d25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c9a16d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x10c8e0020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c99ab30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x10c8c9700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c984160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x10c8eda20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c9a4cb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x10c8d0aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c985480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x10c8f3020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c9a4020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x10c8eaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c9d5cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x10c8da5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c9c2220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x10c8d3b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c94c9d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x10c8efa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c9b32f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x10c8f53e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c9b4610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x10c8df5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c991220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x10c8e8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c99f7a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x10c8eca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c9c02f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x10c8debe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c9ae6d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x10c8cf890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c9a0ac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x10c8c3060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c938540"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x10c8f3da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c9c1610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x10c8b90c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c986020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x10c8d9a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c9ba6d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x10c8e3690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c98ca90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x10c8eea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c9ac7a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x10c8cbcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c98dde0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x10c8f41f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c9adac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x10c8eba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c9b87a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x10c8db0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c9a6b30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x10c8f2b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c9b9ac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x10c8f0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10c998cb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x10c8f1a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c9d5020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x10c8f6570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10c998020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x10c8f7020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10c9d7b30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10c936450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c937d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10c936aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x10c9d0a90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10c935120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x10c9cc260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c98b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c938540"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c989020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c937d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c983020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c938540"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9817a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c937d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c99e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c938540"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c99dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c937d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10c92e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10c92e940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x10c9cc9f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10c92d020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x10c9cb240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c997b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9952f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c9b2160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9b17a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c9ab610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9aac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c9a3b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9c52f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c9bf160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9be7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c9b7610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9b6c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c9d4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10c9d22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c819320"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x10c815990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10c422760"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10ca532e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10ca30410"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10ca2d060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x10ca31ae0"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10ca31ae0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10cc7b020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10ca2c340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x10ca56ce0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10ca56ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10cc95b90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10ca27660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x10ca54020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10ca54020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10cc90710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10cc982f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10cabc9a0"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10cabc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbe3d10"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10cc94de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x10caba9a0"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x10caba9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbde740"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10cc8f930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x10cab89a0"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x10cab89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbd9100"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10ca63810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb4f740"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10ca74810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb73100"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x10cac8ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb8e100"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x10caf3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc0b740"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x10cac6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb8ad10"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x10ca96810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb69740"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x10caa99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbba460"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x10cad49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbe8100"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x10cae8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb80100"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x10cad7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbfb740"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x10caebcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc05100"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10ca83810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb41740"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x10cae5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb7cd10"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x10ca7e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb61d10"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x10ca90810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb85740"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x10caa39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbac100"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x10cab69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbd4d10"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x10cace9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc05100"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10ca67810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb2e100"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10ca78810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb53d80"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x10ca8a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cba2740"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x10cacacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb8e100"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x10caf9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbed740"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x10caedcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc05100"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x10caddcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbbb100"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x10ca86810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb98e60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x10cac09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbc0740"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x10cab09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbf2d10"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x10caf7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbe8100"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x10cae3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbc9100"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x10ca61810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb4a100"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10ca98810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb6fd10"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x10cab49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbfb740"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x10ca94810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb8e100"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x10caa79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbb6e00"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x10cad29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc10d10"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x10cadfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbc0740"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10ca69870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb0cd10"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10ca7c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb5c740"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x10ca8e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb80100"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x10caa19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cba8d10"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x10cadbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cba2740"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x10cad5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbf6100"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x10caf1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc05100"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x10ca9c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbc9100"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x10cad9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb9d100"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10ca65810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb2ad10"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10ca76810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb78740"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x10ca88810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb9d100"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x10cae1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbc5d10"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x10caf5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc10d10"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x10caab9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb939f0"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10cabe9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbbb100"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x10caae9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbed740"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10ca85810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb46d10"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x10cab29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbf6100"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10ca81810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb3b100"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x10ca92810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb8ad10"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x10caa59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbb1740"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x10cad09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc0b740"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10ca4d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb33740"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10ca7a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb57100"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x10ca8c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb7cd10"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x10ca9f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbce740"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x10cac2ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb85740"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x10cafbcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbf2d10"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x10cac4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb85740"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x10ca9a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbc5d10"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x10caefcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cc0b740"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x10cae9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cbd4d10"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x10cacc9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10cb69740"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10cd73020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10cd89d80"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10cd3d4d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10cd72050"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10cd72050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10db2ee80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10cd3b430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10cd70df0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10cd70df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10db2adb0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10cd3ba40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10cd6ea80"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10cd6ea80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10db28a80"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10cd2acd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10d877550"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10d877550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10d868a80"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x10cd4c170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x10cd60e70"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x10cd60e70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x10cd9a080"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10cd3c800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10cd70210"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10cd70210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10db2a1d0"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd319f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd6cb20"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd6cb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd9b020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10cd3a780"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10cd6f470"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10cd6f470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10db29430"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10cd59dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10d873660"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10d873660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10d864af0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10cd89d80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10daf5b80"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x10cd60020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10db268b0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x10cd8a020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x10db27ce0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10cd65c20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10cd9c020"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10cd9c020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x10cd9a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x10daf5080"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd9b020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10d81b6e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x10cd810d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x10cd9ab70"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x10cd9ab70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x10dae0020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10cd61da0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10cd9b9d0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10cd9b9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10d878a70"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x10db1d0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10cd7a210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10db24860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x10cda7990"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x10cda7990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x10da8ec90"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10db23690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x10cd9f840"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x10cd9f840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x10da8da50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10db1f4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10d613b20"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10db23ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10d86ed10"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10db22b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d869640"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10db21610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x10ce13dc0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10ce13dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x10ce3f970"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x10db1e1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10cd94330"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x10cd94330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10cd8f7e0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10db1dd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10daf5b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x10daf1d90"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10d878a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10d868020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x10dae0020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x10dade400"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x10da8ec90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x10da84a20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x10daf5080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x10daed2d0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x10cd75500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10da8e5e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10da8e5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x10da84370"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10d81b6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10d86ac50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10cd7a210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10da91be0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10da91be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10da867b0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x10cd9e6f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10da908e0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10da908e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x10da854d0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x10cd75bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x10da8c170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x10da8c170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x10da81020"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x10da8da50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x10da83840"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x10daf1d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10cd96390"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10cd96390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10cd93e70"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10da8b6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10da14220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10da14220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10da12a10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10da13020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10dae3340"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10dae3340"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x10dae0d70"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10dae0d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10daf9ce0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10daf9ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x10daf2860"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10daf2860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10cd96e80"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10cd96e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10cd90990"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10da8b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10daf6980"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10daf6980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x10daf1690"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10daf1690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10da5ca90"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10da5ca90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10da58e20"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10da59950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10cd95b40"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10cd95b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10d7e97c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10d7e97c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10d7e2020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10cd8e640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ce23950"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10ce23950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ce40b80"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x10cdbab50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x10ce1ebf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x10ce1ebf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x10ce3d740"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x10cdb6760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10d6c26c0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x10cdb6760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10d7ec5c0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x10d7ec5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10d7e4ca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x10d6c26c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10d6b3320"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x10cdaf2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x10d6bf020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x10d6bf020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10d6b3bc0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x10cdb8060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10d6bfcb0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x10d6bfcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10d6b1970"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10cdab330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10cdd8920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10cdac420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10da31a20"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10da31a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10da2aa20"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x10cddb110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10da33aa0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10da33aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10d2011d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10cdacbf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x10cdceb70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x10cdcfba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x10cdd0c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x10ce100c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x10ce3cb40"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x10ce30d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x10ced5220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x10ced5220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x10cecfd20"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x10ce2d060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x10cfde060"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x10cfde060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10d00d020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x10ce2c380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x10cfdb9c0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x10cfdb9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10cffe1d0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x10ce2b6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x10cfd8020"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x10cfd8020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10cff4b70"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x10ce5f0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x10d01bd60"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x10d01bd60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x10d13c020"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10ce491d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d59fe20"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d59fe20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d1b4600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10ce482b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x10d59c7b0"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10d59c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10ce489c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x10d59bae0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10d59bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10ce4aa40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x10d59dad0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10d59dad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10ce4a120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x10d599160"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10d599160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10ce4fb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x10d591870"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10d591870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10ce563d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x10d58f880"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10d58f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10ce56c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x10d58e0a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10d58e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10ce515f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x10d596e50"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10d596e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10ce4d020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x10d595670"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10d595670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10ce5a520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x10d5d6500"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10d5d6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10ce52a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x10d5d7ce0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10d5d7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10ce4d8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x10d592e50"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10d592e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10ce4c1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x10d595e50"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10d595e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10ce4ca70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x10d593e50"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10d593e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x10ce47d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d5c4a80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d5c4a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d1b4600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x10ce47020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d5eb9e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d5eb9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d1b4600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10ce57810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10d613b20"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10ce38020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10d612d20"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10d612d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10d64c310"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x10ce71820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x10ce73940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10ced87d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10cecf490"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10cecf490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e117060"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x10cecfd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e1178b0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10e117060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e110020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10e1178b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e10aa90"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10e110020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e189a30"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10e103210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e110870"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10e110870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e188340"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10e106e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10cf43020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10cf43020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10cfb50f0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e1844c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10e18e570"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e18e570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e183a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e18dc10"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e18dc10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e182da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10e18b020"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e18b020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x10c8e0020"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x10c8f6570"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x10c8debe0"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x10c8f41f0"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x10c8db0c0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x10c8f3020"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x10c8da5a0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x10c8f3da0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x10c8d9a50"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x10c8f2b80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x10c8f7020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x10c8f1a20"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10cfb2540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10cf74020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10cf74020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10cf6f0a0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10cf602c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x10cfdd380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10d008b70"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x10cfdc6b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10d003710"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x10ced6e30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10cfd6440"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x10cfdacd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10cffad60"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10cfd5610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x10ca63810"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10d00b2f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x10caa99a0"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10d007de0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x10ca65810"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10d002930"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x10ca69870"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10cffd480"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x10caa19a0"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10cff8020"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x10caab9a0"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10cff3de0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x10caa39a0"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x10d01b150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10d013a20"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x10d01aa20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x10d16f100"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10d0425d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x10c8df5a0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x10d0418f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x10c8efa20"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x10d0407a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x10caab9a0"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x10d13cb20"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x10d06f8a0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10d06f8a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x10d05a020"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x10d16fc00"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x10d0338f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10d0338f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x10d05e060"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10d064a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x10d08e020"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10d06c8a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x10d057020"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x10d06a8a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x10d055020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10d0378a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x10d05c020"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10d0668a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x10d052020"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x10d06e8a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x10d059020"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10d063a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x10d08d020"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10d0698a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x10d054020"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10d0328a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x10d05b020"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10d065a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x10d051060"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10d06d8a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x10d058020"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10d06b8a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x10d056020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10d0388a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x10d05d020"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10d0688a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x10d053020"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10d59c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10d590880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x10d5880a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10d58f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10d5d1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10d5d3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10d59b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x10d5d9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d5d4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x10d58a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10d58b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10d59ea90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1b3350"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1b3350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1ab660"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10d599e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x10d598490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d5d8c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x10d598be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d5d4ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x10d5d90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x10d593670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x10d5da0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x10d588880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x10d5da880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10d5d2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10d5d3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x10d58b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x10d5870a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x10d5d6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10d58e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10d5d1ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10d59d480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x10d596670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10d592670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x10d5890a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x10d589880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10d5900a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x10d5972f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x10d596020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10d5997b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d5d7500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10d5d2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x10d58a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x10d587880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10d59ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10d58c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x10d597940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10d58c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x10d5d80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10d5d09b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1a9890"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1a8ba0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1a7a30"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d1b4600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d1aa510"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1a58b0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x10d199b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10d206770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10d206770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10d2011d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10d1a4060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d229c40"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d229c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10e235c30"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x10d1a1c20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x10d2288f0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x10d2288f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x10e2310c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10d1992e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x10d573020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10d573020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x10e2302b0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d1a2a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x10d195bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10d2011d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10d1fdb70"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10e2302b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x10d291510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x10e2310c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x10d295dd0"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10e235c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d29aa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10e2338f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10e2282c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10e2282c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10d4038a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x10d295dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x10d2f0440"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x10e2316d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x10d292480"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x10d292480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x10d2f0a50"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10d28f600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10e230a50"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10e21a760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10d2955e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x10d290370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x10e229640"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10e229640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d4045c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x10d28a6a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10e223c10"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10e223c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10d408a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10d2955e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10d2f1c40"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10d291510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x10d337700"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d29aa20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d2f2e80"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10d336e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10d28f600"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x10d336060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x10d290370"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x10d331de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x10d28a6a0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x10d335490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x10d329860"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x10d329860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x10d31d020"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d3305a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x10d32fc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10d31f8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x10d317750"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10d3223b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10d319dc0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x10d37d700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x10cacacc0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x10d37b670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x10cac6cc0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x10d379670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x10cac4cc0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x10d377670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x10cae5cc0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x10d375670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x10cae8cc0"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x10d3385b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x10d495430"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10e222440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x10d4059a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x10e222a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x10d4a1870"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x10d4a1870"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x10d495430"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x10e2272b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x10d329860"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10e228a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10d401130"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10d401130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10d4a8060"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10d400020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10e21a760"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10d4038a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10d4aabf0"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10d4aabf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10e2c0850"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x10d408a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10d3fe5c0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d4045c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d4abe60"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d4abe60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10e2c2970"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x10d4059a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x10d43a020"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10d4a8060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10e2bfc30"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10d4a8930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10d400020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10d4394b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10d4a8060"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x10d43a690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10d3223b0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x10d43ae70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10d31f8a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10d4a9400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10e2bf020"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10e2be590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10d4a8930"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x10e2bed50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x10e2c4750"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x10e2bb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x10d4de250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x10d31d020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x10d4dad40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x10cacacc0"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x10d4d7cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x10cac4cc0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10d5b7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10d5c1da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10d5bab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10d5b4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x10d601e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10d5b4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10d5f42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10d5f72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10d5bf120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x10d5fd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d5f82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10d5b9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10d5b8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x10d602670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10d5b1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10d5b3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10d5c3760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1b3350"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10d5beaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x10d5bd120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d5fba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x10d5bd870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d5f8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10d5bfdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x10d5fee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x10d5b8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10d5b9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10d5c1750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x10d5ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x10d600670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x10d5fe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10d5f6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10d5f7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x10d604670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x10d600e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x10d5f9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10d5b2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10d5f4ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10d5c1100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x10d5ba370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10d5b7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x10d602e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10d5b3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x10d601670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10d5b5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10d5c0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10d5b5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x10d5bb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x10d5bbcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10d5f92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10d5faad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10d5be450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d5fa2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10d5f62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x10d604e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x10d5ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10d5c0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10d5bf770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10d5b2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x10d5bb670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10d5b1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x10d5fde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10d5f37a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10d5dec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10d5e9da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10d5e2b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10d5dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x10d629e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10d5dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10d61c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10d61e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10d5e7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x10d624670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d61f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10d5e0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10d5dfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x10d62a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10d62ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10d5db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10d5ea760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1b3350"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10d5e5aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x10d5e4120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d623a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x10d5e4870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d61fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10d5e7dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x10d625e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x10d5df480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10d5e0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10d5e9750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x10d626e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x10d628670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x10d625670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10d61dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10d61ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x10d62b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x10d628e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x10d621ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10d62d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10d61cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10d5e9100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x10d5e2370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10d5de480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x10d62ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10d5dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x10d629670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10d5dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10d5e8450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10d5dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x10d5e3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x10d5e3cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10d6212f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10d622ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10d5e5450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d6222f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10d61d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x10d62be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x10d626670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10d5e8aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10d5e7770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10d62de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x10d5e3670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10d62c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x10d624e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10d61b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x10d649880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x10d63d020"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x10d63d020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x10d638140"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x10d634bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x10d63cc50"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x10d63cc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x10d675150"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x10d637530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10d6d9a10"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x10d679540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x10d67a590"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x10d67a590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10d6d79e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x10d670910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x10d677c90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x10d677c90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x10d6a3a90"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x10d6759f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x10d679540"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10d693020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x10d68d530"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x10d68d530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d68ae50"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10d686020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10c8c3060"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10d6d6c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x10ca78810"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x10d6bb990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x10d6b0900"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x10d6bd150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x10d7090f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x10d709ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x10ced5220"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x10d6fd500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x10ced6e30"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x10d6f7820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x10cfde060"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x10d6f5b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x10cfdacd0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x10d6fe880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x10d01b150"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10d6f3020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d765c30"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d765c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d1b4600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10d6f3d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10d7648f0"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10d7648f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1b3350"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10d6f06d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x10d7be2f0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10d7be2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10d6f0de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x10d7bdcc0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10d7bdcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10d6ef530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x10d7bc370"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10d7bc370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10d6efc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x10d7bad00"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10d7bad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10d6f1e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x10d7b4c60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10d7b4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10d6f2780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x10d79c7a0"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10d79c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d6f1550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d7a02f0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d7a02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10d6ee3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x10d7b5480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10d7b5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10d6ed5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x10d7b2e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10d7b2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10d6ec020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x10d7b1670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10d7b1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x10d6eee80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x10d7b87b0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x10d7b87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10d6eb9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x10d79ead0"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10d79ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10d6ec890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x10d79f2f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10d79f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10d6eb130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x10d79fad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10d79fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x10d6e5d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x10d7ecdf0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x10d7ecdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x10d7e3550"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10d706d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d704bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x10d703950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10d877550"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10d6f8be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10d86f480"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10d86f480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10d8608b0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d6e96c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10d7b3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10d7bd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10d7b7c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x10d7aae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10d7b1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10d79d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x10d7a5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10d7b5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x10d7ab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10d7ade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10d7b0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x10d7b9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d7a4a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x10d7b9ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d7a0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10d7ba060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x10d7a6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x10d7b4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10d7be940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x10d7a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x10d7a9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x10d7a6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x10d7ac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x10d7a9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x10d7a2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10d7ae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10d79dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x10d7b7490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10d7b3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x10d7abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10d7b0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x10d7aa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10d7b2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10d7bd670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x10d7b8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x10d7b8e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10d7a22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10d7a3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10d7ba6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d7a32f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10d79e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x10d7ace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x10d7a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10d7bc9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10d7aee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10d7ad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x10d7a5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x10d7e7020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x10d7e27c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d7cd150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x10d7e1020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x10cfde060"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x10d7e0380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x10cfdd380"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x10d7df6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x10cfdc6b0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x10d7dea50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x10d01aa20"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10d7dd6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d9b3d00"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10d9b3d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10d1b4600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10d7dc530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x10d9f4ad0"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10d9f4ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10d7dbad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x10d9ad6b0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10d9ad6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x10d7db3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x10d9ac370"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x10d9ac370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10d7da330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d7d91e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x10d7d7d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10d877550"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10d7d9b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x10ce13dc0"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10d7d23e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x10d9a5e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10d9a5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10d7d2cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x10d9a4670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10d9a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x10d7d3b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x10d9ab160"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x10d9ab160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10d7cf6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x10d9f42f0"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10d9f42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10d7d1590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x10d9f62f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10d9f62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10d7d1e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x10d9f6ad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10d9f6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d7ce020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d9f7ad0"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d9f7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10d7ce8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x10d9b1300"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10d9b1300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x10d7c29d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10d8be7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10cf43020"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x10d85a820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10d8c64e0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x10d85cb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10d8a8b80"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10d8a8b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10d9722b0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10d8b67d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d981150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10d8b7110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d8d92a0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10d8d92a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e3f09d0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10d97b640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d90d830"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10d908cd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10d8d9af0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10d8d9af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e3e95f0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10d971690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d8f5080"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10d8f5080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d8f0cd0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10e3f09d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e3d4360"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10e3e3d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e3ef260"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10e3ef260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e3d4bf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10e3e69b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d8f5080"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e3d0dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10e3d9020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e3d9020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e3ce440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e3d8760"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e3d8760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e3cd760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10e3d7a80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e3d7a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10d8ec0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10cf74020"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x10d964020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x10d976a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10d9cb8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10d9c22c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10d9c22c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10d8b67d0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10d9a6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10d9b0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10d9a9c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x10d99ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10d9a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10d9ae370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x10d9fc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d9f72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10d9a8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10d9a7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x10d99e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10d9a0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10d9a2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10d9b2970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1b3350"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10d9add00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d9fba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x10d9acac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10d9ad060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x10d9fde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x10d9a7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10d9a8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10d9b1950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x10d99ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x10d99b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x10d9fd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10d9f5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x10d99f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x10d99be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x10d9f8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10d9a1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x10d9a9490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10d9a6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x10d99ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10d9a2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x10d99c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10d9a5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10d9b0670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x10d9abe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10d9f82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10d9faad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d9fa2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10d9f52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x10d99fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x10d99a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10d9b0cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10d9ae9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10d9a1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x10d9ab7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10d9a0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x10d9fce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10d9f27a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x10da2f920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x10da2b940"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10d9cd990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10da2b080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10da0fe60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x10da13020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10da0dae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10da10690"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10da10690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10d2011d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10da0c8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10da31a20"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10da0b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x10da59200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x10da55550"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10da543f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x10da59950"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10da54a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10da81d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x10da8b6b0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10da80b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x10da8b020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10da7f2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10da7e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x10da7eb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x10db00410"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x10dab9db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x10daf4800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10daef580"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10daef580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10d2011d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10dadb1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd9b020"/></to>
    </wire>
    <wire loc="63:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10e4dab60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10e4cd640"/></to>
    </wire>
    <wire loc="64:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10e4d98b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10cd3ba40"/></to>
    </wire>
    <wire loc="65:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10e4d8590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10cd3a780"/></to>
    </wire>
    <wire loc="67:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10dc22020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10e4d7c10"/></to>
    </wire>
    <wire loc="66:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10e4d7c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd319f0"/></to>
    </wire>
    <wire loc="60:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10e4cc2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10dbae930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10e4cb020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10cd3a780"/></to>
    </wire>
    <wire loc="53:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10dbae930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10dc3b4b0"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10dc39400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10cd3d4d0"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10dc38060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10cd3a780"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10dc37720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10cd3ba40"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x10dc36480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x10dc36c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10dc18020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10cd3ba40"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10dc18c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10cd3a780"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ReceiverC" loc="3:ReceiverC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReceiverAppC.AMSenderC" loc="47(ReceiverAppC.AMSenderC):../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceiverAppC.AMSenderC.SenderC" loc="47(ReceiverAppC.AMSenderC.SenderC):../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceiverAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(ReceiverAppC.AMSenderC.SenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ReceiverAppC.AMReceiverC" loc="43(ReceiverAppC.AMReceiverC):../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10c905890" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10c905c30" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10c904020" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10c9043a0" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10c904720" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10c904a90" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10c904e20" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x10c902200" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x10c9025d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x10c92ce70" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x10c94b270" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x10cb0b190" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x10cb0b540" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x10cb0b8f0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x10cb0bca0" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x10cb09060" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10cf3c9c0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10cf3c9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10cf6e120" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10cf6e120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10cf97a50" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10cf97a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10cf93290" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10cf93290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10cf93680" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10cf93680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10cf93e60" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10cf93e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10cf91260" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x10cf91a60" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x10cf91a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10cf44a20" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10cf44a20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10cfab290" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10cfab290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10cfab680" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10cfab680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10cfabe60" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10cfabe60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10cfaa260" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x10d433020" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x10d4270d0" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x10d4597e0" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d6a1020" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d6a1020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10d6a17b0" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d6a17b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d8c9a50" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d8c9a50"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d931160" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d931160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d962730" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d962730"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10d962a60" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x10dbd3650" loc="47:../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x10dbc9360" loc="47:../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x10dbc20d0" loc="43:../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x10dba9c80" loc="45:../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x10dc1e330" loc="43:../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x10c840020" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10c840020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c8403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10c83f9a0" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10c83f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10c83fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c859020" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c859020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c8593a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x10c8550c0" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x10c8550c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c855440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c856280" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c856280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c856600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x10c856990" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10c856990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c856d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x10c8557a0" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x10c8557a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c855b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c84f3f0" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c84f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c84f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x10c857640" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10c857640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c8579c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10c888ae0" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10c888ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10c870980"/>
        <function-ref name="initTimerB" scoped="" ref="0x10c870020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10c8701b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x10c870340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10c888e60"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10c8704d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10c870660"/>
        <function-ref name="initClocks" scoped="" ref="0x10c8707f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c873580" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c873580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c873900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10c896020" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10c896020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10c895020"/>
        <function-ref name="initTimerB" scoped="" ref="0x10c896530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10c8966c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x10c896850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10c8963a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10c8969e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10c896b70"/>
        <function-ref name="initClocks" scoped="" ref="0x10c896d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x10c895360" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10c895360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10c8956e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c8977e0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c8977e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c897b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x10c8d25a0" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x10c8d25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8d2920"/>
        <function-ref name="getControl" scoped="" ref="0x10c8d2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8d2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8d2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8d1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8d11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8d1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8d14d0"/>
        <function-ref name="setControl" scoped="" ref="0x10c8d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x10c8e0020" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x10c8e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8e03a0"/>
        <function-ref name="getControl" scoped="" ref="0x10c8e0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8e06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8e0850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8e09e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8e0b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8e0d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8df020"/>
        <function-ref name="setControl" scoped="" ref="0x10c8df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x10c8c9700" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x10c8c9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8c9a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8c9c10"/>
        <function-ref name="captured" scoped="" ref="0x10c8c9da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8e8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8e81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x10c8eda20" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x10c8eda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8edda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8ec020"/>
        <function-ref name="captured" scoped="" ref="0x10c8ec1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8ec340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8ec4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x10c8d0aa0" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x10c8d0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8d0e20"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8cf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8cf1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8cf340"/>
        <function-ref name="fired" scoped="" ref="0x10c8cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x10c8f3020" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x10c8f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8f3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8f36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8f3850"/>
        <function-ref name="fired" scoped="" ref="0x10c8f39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x10c8eaa20" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x10c8eaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8eada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8e9020"/>
        <function-ref name="captured" scoped="" ref="0x10c8e91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8e9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8e94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x10c8da5a0" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x10c8da5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8da920"/>
        <function-ref name="getControl" scoped="" ref="0x10c8daab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8dac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8dadd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8d9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8d91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8d9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8d94d0"/>
        <function-ref name="setControl" scoped="" ref="0x10c8d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x10c8d3b10" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x10c8d3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8ba020"/>
        <function-ref name="getControl" scoped="" ref="0x10c8ba1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8ba340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8ba4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8ba660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8ba7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8ba980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8bab10"/>
        <function-ref name="setControl" scoped="" ref="0x10c8baca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x10c8efa20" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x10c8efa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8efda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8ee020"/>
        <function-ref name="captured" scoped="" ref="0x10c8ee1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8ee340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8ee4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x10c8f53e0" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x10c8f53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f5760"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8f58f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8f5a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8f5c10"/>
        <function-ref name="fired" scoped="" ref="0x10c8f5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x10c8df5a0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x10c8df5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8dfa20"/>
        <function-ref name="getControl" scoped="" ref="0x10c8dfbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8dfd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8de020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8de1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8de340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8de4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8de660"/>
        <function-ref name="setControl" scoped="" ref="0x10c8de7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x10c8e8700" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x10c8e8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8e8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8e8c10"/>
        <function-ref name="captured" scoped="" ref="0x10c8e8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8e2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8e21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x10c8eca20" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x10c8eca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8ecda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8eb020"/>
        <function-ref name="captured" scoped="" ref="0x10c8eb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8eb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8eb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x10c8debe0" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x10c8debe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8dd020"/>
        <function-ref name="getControl" scoped="" ref="0x10c8dd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8dd340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8dd4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8dd660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8dd7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8dd980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8ddb10"/>
        <function-ref name="setControl" scoped="" ref="0x10c8ddca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x10c8cf890" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x10c8cf890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8cfc10"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8cfda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8ca020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8ca1b0"/>
        <function-ref name="fired" scoped="" ref="0x10c8ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x10c8c3060" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x10c8c3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c8c33e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c8c3570"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8c3700"/>
        <function-ref name="get" scoped="" ref="0x10c8c3890"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8c3a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8c3bb0"/>
        <function-ref name="getMode" scoped="" ref="0x10c8c3d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8c2020"/>
        <function-ref name="overflow" scoped="" ref="0x10c8c21b0"/>
        <function-ref name="setMode" scoped="" ref="0x10c8c2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c8c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x10c8f3da0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x10c8f3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f2180"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8f2310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8f24a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8f2630"/>
        <function-ref name="fired" scoped="" ref="0x10c8f27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x10c8b90c0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x10c8b90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8b9440"/>
        <function-ref name="getControl" scoped="" ref="0x10c8b95d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8b9760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8b98f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8b9a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8b9c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8b9da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8d2020"/>
        <function-ref name="setControl" scoped="" ref="0x10c8d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x10c8d9a50" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x10c8d9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8d9dd0"/>
        <function-ref name="getControl" scoped="" ref="0x10c8f8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8f81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8f8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8f84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8f8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8f87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8f8980"/>
        <function-ref name="setControl" scoped="" ref="0x10c8f8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x10c8e3690" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x10c8e3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8e3a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8e3ba0"/>
        <function-ref name="captured" scoped="" ref="0x10c8e3d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8c9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8c91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x10c8eea20" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x10c8eea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8eeda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8ed020"/>
        <function-ref name="captured" scoped="" ref="0x10c8ed1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8ed340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8ed4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x10c8cbcf0" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x10c8cbcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8d00a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8d0230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8d03c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8d0550"/>
        <function-ref name="fired" scoped="" ref="0x10c8d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x10c8f41f0" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x10c8f41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f4570"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8f4700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8f4890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8f4a20"/>
        <function-ref name="fired" scoped="" ref="0x10c8f4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x10c8eba20" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x10c8eba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8ebda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8ea020"/>
        <function-ref name="captured" scoped="" ref="0x10c8ea1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8ea340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8ea4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x10c8db0c0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x10c8db0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8db440"/>
        <function-ref name="getControl" scoped="" ref="0x10c8db5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8db760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8db8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8dba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8dbc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8dbda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8da020"/>
        <function-ref name="setControl" scoped="" ref="0x10c8da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x10c8e26c0" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x10c8e26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c8e2a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c8e2bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8e2d60"/>
        <function-ref name="get" scoped="" ref="0x10c8e1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8e11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8e1340"/>
        <function-ref name="getMode" scoped="" ref="0x10c8e14d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8e1660"/>
        <function-ref name="overflow" scoped="" ref="0x10c8e17f0"/>
        <function-ref name="setMode" scoped="" ref="0x10c8e1980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c8e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x10c8f2b80" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x10c8f2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f1020"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8f11b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8f1340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8f14d0"/>
        <function-ref name="fired" scoped="" ref="0x10c8f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x10c8f0a20" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x10c8f0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c8ef020"/>
        <function-ref name="captured" scoped="" ref="0x10c8ef1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c8ef340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c8ef4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c8ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x10c8f1a20" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x10c8f1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f0020"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8f01b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8f0340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8f04d0"/>
        <function-ref name="fired" scoped="" ref="0x10c8f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x10c8f6570" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x10c8f6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c8f68f0"/>
        <function-ref name="setEvent" scoped="" ref="0x10c8f6a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c8f6c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c8f6da0"/>
        <function-ref name="fired" scoped="" ref="0x10c8f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x10c8f7020" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x10c8f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c8f73a0"/>
        <function-ref name="getControl" scoped="" ref="0x10c8f7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c8f76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c8f7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c8f79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c8f7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c8f7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c8f6020"/>
        <function-ref name="setControl" scoped="" ref="0x10c8f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10c936aa0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10c936aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c936e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10c936450" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10c936450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9367d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10c935120" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10c935120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9354a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10c937d80" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c937d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c936180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10c938540" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c938540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9388c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c938a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c938be0"/>
        <function-ref name="get" scoped="" ref="0x10c938d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c937020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9371b0"/>
        <function-ref name="getMode" scoped="" ref="0x10c937340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9374d0"/>
        <function-ref name="overflow" scoped="" ref="0x10c937660"/>
        <function-ref name="setMode" scoped="" ref="0x10c9377f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c937980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10c92e940" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10c92e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c92ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10c92e2f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10c92e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c92e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10c92d020" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10c92d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c92d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10c92fbf0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c92fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c92e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10c9303e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c9303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c930760"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9308f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c930a80"/>
        <function-ref name="get" scoped="" ref="0x10c930c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c930da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c92f020"/>
        <function-ref name="getMode" scoped="" ref="0x10c92f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c92f340"/>
        <function-ref name="overflow" scoped="" ref="0x10c92f4d0"/>
        <function-ref name="setMode" scoped="" ref="0x10c92f660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c92f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c98ca90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c98ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c98ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c98b020"/>
        <function-ref name="captured" scoped="" ref="0x10c98b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c98b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c98b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c98b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c94c9d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c94c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c94cd50"/>
        <function-ref name="getControl" scoped="" ref="0x10c98d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c98d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c98d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c98d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c98d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c98d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c98d980"/>
        <function-ref name="setControl" scoped="" ref="0x10c98db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c989020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c989020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c98dde0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c98dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c98c180"/>
        <function-ref name="setEvent" scoped="" ref="0x10c98c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c98c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c98c630"/>
        <function-ref name="fired" scoped="" ref="0x10c98c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c98b930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c98b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c98bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c98be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c98a020"/>
        <function-ref name="get" scoped="" ref="0x10c98a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c98a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c98a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x10c98a660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c98a7f0"/>
        <function-ref name="overflow" scoped="" ref="0x10c98a980"/>
        <function-ref name="setMode" scoped="" ref="0x10c98ab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c98aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c984160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c984160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9844e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c984670"/>
        <function-ref name="captured" scoped="" ref="0x10c984800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c984990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c984b20"/>
        <function-ref name="setEdge" scoped="" ref="0x10c984cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c986020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c986020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9863a0"/>
        <function-ref name="getControl" scoped="" ref="0x10c986530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9866c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c986850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c9869e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c986b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c986d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c985020"/>
        <function-ref name="setControl" scoped="" ref="0x10c9851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9817a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9817a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c981b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c985480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c985480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c985800"/>
        <function-ref name="setEvent" scoped="" ref="0x10c985990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c985b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c985cb0"/>
        <function-ref name="fired" scoped="" ref="0x10c985e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c983020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9833a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c983530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9836c0"/>
        <function-ref name="get" scoped="" ref="0x10c983850"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9839e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c983b70"/>
        <function-ref name="getMode" scoped="" ref="0x10c983d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c981020"/>
        <function-ref name="overflow" scoped="" ref="0x10c9811b0"/>
        <function-ref name="setMode" scoped="" ref="0x10c981340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c9814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c99f7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c99f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c99fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c99fcb0"/>
        <function-ref name="captured" scoped="" ref="0x10c99fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c99e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c99e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c99e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c9a16d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c9a16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9a1a50"/>
        <function-ref name="getControl" scoped="" ref="0x10c9a1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9a1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c9a0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c9a01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9a0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c9a04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c9a0660"/>
        <function-ref name="setControl" scoped="" ref="0x10c9a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c99dc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c99dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c99c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c9a0ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c9a0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9a0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x10c99f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c99f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c99f340"/>
        <function-ref name="fired" scoped="" ref="0x10c99f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c99e610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c99e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c99e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c99eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c99ecb0"/>
        <function-ref name="get" scoped="" ref="0x10c99ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c99d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c99d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10c99d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c99d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10c99d660"/>
        <function-ref name="setMode" scoped="" ref="0x10c99d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c99d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c998cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c998cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9970a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c997230"/>
        <function-ref name="captured" scoped="" ref="0x10c9973c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c997550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9976e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c997870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c99ab30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c99ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c999020"/>
        <function-ref name="getControl" scoped="" ref="0x10c9991b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c999340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c9994d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c999660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9997f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c999980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c999b10"/>
        <function-ref name="setControl" scoped="" ref="0x10c999ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9952f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c995670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c998020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c998020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9983a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10c998530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c9986c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c998850"/>
        <function-ref name="fired" scoped="" ref="0x10c9989e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c997b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c997b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c996020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9961b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c996340"/>
        <function-ref name="get" scoped="" ref="0x10c9964d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c996660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9967f0"/>
        <function-ref name="getMode" scoped="" ref="0x10c996980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c996b10"/>
        <function-ref name="overflow" scoped="" ref="0x10c996ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10c996e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c995020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c9b32f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c9b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9b3670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c9b3800"/>
        <function-ref name="captured" scoped="" ref="0x10c9b3990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9b3b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9b3cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c9b3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c991220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c991220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9915a0"/>
        <function-ref name="getControl" scoped="" ref="0x10c991730"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9918c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c991a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c991be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c991d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c9b4020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c9b41b0"/>
        <function-ref name="setControl" scoped="" ref="0x10c9b4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9b17a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9b17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9b1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c9b4610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c9b4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9b4990"/>
        <function-ref name="setEvent" scoped="" ref="0x10c9b4b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c9b4cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c9b4e40"/>
        <function-ref name="fired" scoped="" ref="0x10c9b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c9b2160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c9b2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9b24e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9b2670"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9b2800"/>
        <function-ref name="get" scoped="" ref="0x10c9b2990"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9b2b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9b2cb0"/>
        <function-ref name="getMode" scoped="" ref="0x10c9b2e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9b1020"/>
        <function-ref name="overflow" scoped="" ref="0x10c9b11b0"/>
        <function-ref name="setMode" scoped="" ref="0x10c9b1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c9b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c9ac7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c9ac7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9acb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c9accb0"/>
        <function-ref name="captured" scoped="" ref="0x10c9ace40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9ab020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9ab1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c9ab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c9ae6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c9ae6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9aea50"/>
        <function-ref name="getControl" scoped="" ref="0x10c9aebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9aed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c9ad020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c9ad1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9ad340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c9ad4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c9ad660"/>
        <function-ref name="setControl" scoped="" ref="0x10c9ad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9aac50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9aac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c9adac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c9adac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9ade40"/>
        <function-ref name="setEvent" scoped="" ref="0x10c9ac020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c9ac1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c9ac340"/>
        <function-ref name="fired" scoped="" ref="0x10c9ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c9ab610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c9ab610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9ab990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9abb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9abcb0"/>
        <function-ref name="get" scoped="" ref="0x10c9abe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9aa020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9aa1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10c9aa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9aa4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10c9aa660"/>
        <function-ref name="setMode" scoped="" ref="0x10c9aa7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c9aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c9a4cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c9a4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9a30a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c9a3230"/>
        <function-ref name="captured" scoped="" ref="0x10c9a33c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9a3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9a36e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c9a3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c9a6b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c9a6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9a5020"/>
        <function-ref name="getControl" scoped="" ref="0x10c9a51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9a5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c9a54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c9a5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9a57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c9a5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c9a5b10"/>
        <function-ref name="setControl" scoped="" ref="0x10c9a5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9c52f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9c5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c9a4020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c9a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9a43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10c9a4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c9a46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c9a4850"/>
        <function-ref name="fired" scoped="" ref="0x10c9a49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c9a3b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c9a3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9c6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9c61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9c6340"/>
        <function-ref name="get" scoped="" ref="0x10c9c64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9c6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9c67f0"/>
        <function-ref name="getMode" scoped="" ref="0x10c9c6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9c6b10"/>
        <function-ref name="overflow" scoped="" ref="0x10c9c6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10c9c6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c9c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c9c02f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c9c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9c0670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c9c0800"/>
        <function-ref name="captured" scoped="" ref="0x10c9c0990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9c0b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9c0cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c9c0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c9c2220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c9c2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9c25a0"/>
        <function-ref name="getControl" scoped="" ref="0x10c9c2730"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9c28c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c9c2a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c9c2be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9c2d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c9c1020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c9c11b0"/>
        <function-ref name="setControl" scoped="" ref="0x10c9c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9be7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9be7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9beb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c9c1610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c9c1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9c1990"/>
        <function-ref name="setEvent" scoped="" ref="0x10c9c1b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c9c1cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c9c1e40"/>
        <function-ref name="fired" scoped="" ref="0x10c9c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c9bf160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c9bf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9bf4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9bf670"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9bf800"/>
        <function-ref name="get" scoped="" ref="0x10c9bf990"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9bfb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9bfcb0"/>
        <function-ref name="getMode" scoped="" ref="0x10c9bfe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9be020"/>
        <function-ref name="overflow" scoped="" ref="0x10c9be1b0"/>
        <function-ref name="setMode" scoped="" ref="0x10c9be340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c9be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c9b87a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c9b87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9b8b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c9b8cb0"/>
        <function-ref name="captured" scoped="" ref="0x10c9b8e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9b7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9b71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c9b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c9ba6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c9ba6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9baa50"/>
        <function-ref name="getControl" scoped="" ref="0x10c9babe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9bad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c9b9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c9b91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9b9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c9b94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c9b9660"/>
        <function-ref name="setControl" scoped="" ref="0x10c9b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9b6c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c9b9ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c9b9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9b9e40"/>
        <function-ref name="setEvent" scoped="" ref="0x10c9b8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c9b81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c9b8340"/>
        <function-ref name="fired" scoped="" ref="0x10c9b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c9b7610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c9b7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9b7990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9b7b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9b7cb0"/>
        <function-ref name="get" scoped="" ref="0x10c9b7e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9b6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9b61b0"/>
        <function-ref name="getMode" scoped="" ref="0x10c9b6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9b64d0"/>
        <function-ref name="overflow" scoped="" ref="0x10c9b6660"/>
        <function-ref name="setMode" scoped="" ref="0x10c9b67f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c9b6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10c9d5cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10c9d5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9d40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10c9d4230"/>
        <function-ref name="captured" scoped="" ref="0x10c9d43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9d4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9d46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10c9d4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10c9d7b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10c9d7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c9d6020"/>
        <function-ref name="getControl" scoped="" ref="0x10c9d61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9d6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c9d64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c9d6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9d67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c9d6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c9d6b10"/>
        <function-ref name="setControl" scoped="" ref="0x10c9d6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10c9d22f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10c9d22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9d2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10c9d5020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10c9d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c9d53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10c9d5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c9d56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c9d5850"/>
        <function-ref name="fired" scoped="" ref="0x10c9d59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10c9d4b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c9d4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c9d3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c9d31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c9d3340"/>
        <function-ref name="get" scoped="" ref="0x10c9d34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c9d3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c9d37f0"/>
        <function-ref name="getMode" scoped="" ref="0x10c9d3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c9d3b10"/>
        <function-ref name="overflow" scoped="" ref="0x10c9d3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10c9d3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c9d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x10c9cb240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x10c9cb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9cb5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x10c9d0a90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x10c9d0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9d0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x10c9cc260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x10c9cc260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9cc5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x10c9cc9f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x10c9cc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10c9ccd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x10c73e510" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10c73e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10c73e890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10c422760" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10c422760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10c422ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x10c4c7cc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x10c4c7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x10c55c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x10c871b40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10c871b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10ca0ab10"/>
        <function-ref name="initTimerB" scoped="" ref="0x10ca0a1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10ca0a340"/>
        <function-ref name="initTimerA" scoped="" ref="0x10ca0a4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10ca0a020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10ca0a660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10ca0a7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x10ca0a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10ca23dc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10ca23dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10ca22180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10ca0b590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10ca0b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10ca0b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x10ca236c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x10ca236c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10ca23a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x10ca0bc00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10ca0bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10ca23020"/>
        <function-ref name="taskLoop" scoped="" ref="0x10ca231b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10ca23340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10c34e1d0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10c34e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10c34e550"/>
        <function-ref name="runTask" scoped="" ref="0x10c34e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10c3c23a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10c3c23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c3c2720"/>
        <function-ref name="taskLoop" scoped="" ref="0x10c3c28b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10c3c2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10c819320" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10c819320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10c8196a0"/>
        <function-ref name="runTask" scoped="" ref="0x10c819830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x10c815990" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10c815990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10c815d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10c81a420" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10c81a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c81a7a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10c81a930"/>
        <function-ref name="runNextTask" scoped="" ref="0x10c81aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10ca320d0" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10ca320d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10ca32450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10ca325e0"/>
        <function-ref name="led1On" scoped="" ref="0x10ca32770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10ca32900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10ca32a90"/>
        <function-ref name="get" scoped="" ref="0x10ca32c20"/>
        <function-ref name="led1Off" scoped="" ref="0x10ca32db0"/>
        <function-ref name="led2Off" scoped="" ref="0x10ca174d0"/>
        <function-ref name="set" scoped="" ref="0x10ca17020"/>
        <function-ref name="led0On" scoped="" ref="0x10ca171b0"/>
        <function-ref name="led2On" scoped="" ref="0x10ca17340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x10ca2d060" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10ca2d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca2d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x10ca2d570"/>
        <function-ref name="toggle" scoped="" ref="0x10ca2d700"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca2d890"/>
        <function-ref name="get" scoped="" ref="0x10ca2da20"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca2dbb0"/>
        <function-ref name="set" scoped="" ref="0x10ca2dd40"/>
        <function-ref name="clr" scoped="" ref="0x10ca2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10ca30410" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10ca30410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10ca30790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x10ca2c340" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10ca2c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca2c6c0"/>
        <function-ref name="isInput" scoped="" ref="0x10ca2c850"/>
        <function-ref name="toggle" scoped="" ref="0x10ca2c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca2cb70"/>
        <function-ref name="get" scoped="" ref="0x10ca2cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca27020"/>
        <function-ref name="set" scoped="" ref="0x10ca271b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10ca30a10" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10ca30a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10ca30d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10ca2f020"/>
        <function-ref name="led1On" scoped="" ref="0x10ca2f1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10ca2f340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10ca2f4d0"/>
        <function-ref name="get" scoped="" ref="0x10ca2f660"/>
        <function-ref name="led1Off" scoped="" ref="0x10ca2f7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x10ca2fe30"/>
        <function-ref name="set" scoped="" ref="0x10ca2f980"/>
        <function-ref name="led0On" scoped="" ref="0x10ca2fb10"/>
        <function-ref name="led2On" scoped="" ref="0x10ca2fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x10ca27660" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10ca27660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca279e0"/>
        <function-ref name="isInput" scoped="" ref="0x10ca27b70"/>
        <function-ref name="toggle" scoped="" ref="0x10ca27d00"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca4c020"/>
        <function-ref name="get" scoped="" ref="0x10ca4c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca4c340"/>
        <function-ref name="set" scoped="" ref="0x10ca4c4d0"/>
        <function-ref name="clr" scoped="" ref="0x10ca4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x10ca31ae0" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10ca31ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca31e60"/>
        <function-ref name="isInput" scoped="" ref="0x10ca56020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca56340"/>
        <function-ref name="get" scoped="" ref="0x10ca564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca56660"/>
        <function-ref name="set" scoped="" ref="0x10ca567f0"/>
        <function-ref name="clr" scoped="" ref="0x10ca56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x10ca56ce0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10ca56ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca550a0"/>
        <function-ref name="isInput" scoped="" ref="0x10ca55230"/>
        <function-ref name="toggle" scoped="" ref="0x10ca553c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca55550"/>
        <function-ref name="get" scoped="" ref="0x10ca556e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca55870"/>
        <function-ref name="set" scoped="" ref="0x10ca55a00"/>
        <function-ref name="clr" scoped="" ref="0x10ca55b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x10ca532e0" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10ca532e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10ca53660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x10ca54020" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10ca54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca543a0"/>
        <function-ref name="isInput" scoped="" ref="0x10ca54530"/>
        <function-ref name="toggle" scoped="" ref="0x10ca546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca54850"/>
        <function-ref name="get" scoped="" ref="0x10ca549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca54b70"/>
        <function-ref name="set" scoped="" ref="0x10ca54d00"/>
        <function-ref name="clr" scoped="" ref="0x10ca53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10ca63810" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10ca63810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca63b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca63d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca62020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca62340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca62660"/>
        <function-ref name="get" scoped="" ref="0x10ca627f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca62980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca62b10"/>
        <function-ref name="set" scoped="" ref="0x10ca62ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca62e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca61020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca612b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca61440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10ca74810" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10ca74810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca74b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca74d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca73020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca73340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca73660"/>
        <function-ref name="get" scoped="" ref="0x10ca737f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca73980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca73b10"/>
        <function-ref name="set" scoped="" ref="0x10ca73ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca73e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca98020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca982b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca98440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x10cac8ca0" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x10cac8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cac70a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cac7230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cac73c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cac7550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cac76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cac7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cac7a00"/>
        <function-ref name="get" scoped="" ref="0x10cac7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cac7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cac6020"/>
        <function-ref name="set" scoped="" ref="0x10cac61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cac6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cac64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cac6760"/>
        <function-ref name="clr" scoped="" ref="0x10cac68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x10caf3cb0" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x10caf3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caf20a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caf2230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caf23c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caf2550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caf26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caf2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caf2a00"/>
        <function-ref name="get" scoped="" ref="0x10caf2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caf2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caf1020"/>
        <function-ref name="set" scoped="" ref="0x10caf11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caf1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caf14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caf1760"/>
        <function-ref name="clr" scoped="" ref="0x10caf18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x10cac6cc0" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x10cac6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cac50a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cac5230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cac53c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cac5550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cac56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cac5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cac5a00"/>
        <function-ref name="get" scoped="" ref="0x10cac5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cac5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cac4020"/>
        <function-ref name="set" scoped="" ref="0x10cac41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cac4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cac44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cac4760"/>
        <function-ref name="clr" scoped="" ref="0x10cac48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x10ca96810" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x10ca96810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca96b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca96d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca95020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca95340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca95660"/>
        <function-ref name="get" scoped="" ref="0x10ca957f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca95980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca95b10"/>
        <function-ref name="set" scoped="" ref="0x10ca95ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca95e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca94020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca942b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca94440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x10caa99a0" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x10caa99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caa9d20"/>
        <function-ref name="isInput" scoped="" ref="0x10caa8020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caa81b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caa8340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caa84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caa8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caa87f0"/>
        <function-ref name="get" scoped="" ref="0x10caa8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caa8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caa8ca0"/>
        <function-ref name="set" scoped="" ref="0x10caa8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caa7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caa71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caa7440"/>
        <function-ref name="clr" scoped="" ref="0x10caa75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10cabc9a0" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10cabc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cabcd20"/>
        <function-ref name="isInput" scoped="" ref="0x10cabb020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cabb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cabb340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cabb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cabb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cabb7f0"/>
        <function-ref name="get" scoped="" ref="0x10cabb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cabbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cabbca0"/>
        <function-ref name="set" scoped="" ref="0x10cabbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caba020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caba1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caba440"/>
        <function-ref name="clr" scoped="" ref="0x10caba5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x10cad49a0" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x10cad49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cad4d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cad3020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cad31b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cad3340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cad34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cad3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cad37f0"/>
        <function-ref name="get" scoped="" ref="0x10cad3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cad3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cad3ca0"/>
        <function-ref name="set" scoped="" ref="0x10cad3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cad2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cad21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cad2440"/>
        <function-ref name="clr" scoped="" ref="0x10cad25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x10cae8cc0" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x10cae8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cae60a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cae6230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cae63c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cae6550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cae66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cae6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cae6a00"/>
        <function-ref name="get" scoped="" ref="0x10cae6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cae6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cae5020"/>
        <function-ref name="set" scoped="" ref="0x10cae51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cae5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cae54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cae5760"/>
        <function-ref name="clr" scoped="" ref="0x10cae58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x10cad7cb0" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x10cad7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cad60a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cad6230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cad63c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cad6550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cad66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cad6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cad6a00"/>
        <function-ref name="get" scoped="" ref="0x10cad6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cad6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cad5020"/>
        <function-ref name="set" scoped="" ref="0x10cad51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cad5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cad54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cad5760"/>
        <function-ref name="clr" scoped="" ref="0x10cad58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x10caebcc0" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x10caebcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caea230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caea3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caea550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caea6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caea870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caeaa00"/>
        <function-ref name="get" scoped="" ref="0x10caeab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caead20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cae9020"/>
        <function-ref name="set" scoped="" ref="0x10cae91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cae9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cae94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cae9760"/>
        <function-ref name="clr" scoped="" ref="0x10cae98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10ca83810" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10ca83810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca83b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca83d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca82020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca82340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca82660"/>
        <function-ref name="get" scoped="" ref="0x10ca827f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca82980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca82b10"/>
        <function-ref name="set" scoped="" ref="0x10ca82ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca82e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca81020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca812b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca81440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x10cae5cc0" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x10cae5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cae40a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cae4230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cae43c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cae4550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cae46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cae4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cae4a00"/>
        <function-ref name="get" scoped="" ref="0x10cae4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cae4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cae3020"/>
        <function-ref name="set" scoped="" ref="0x10cae31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cae3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cae34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cae3760"/>
        <function-ref name="clr" scoped="" ref="0x10cae38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10ca7e810" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10ca7e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca7eb90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca7ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca7d020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca7d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca7d340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca7d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca7d660"/>
        <function-ref name="get" scoped="" ref="0x10ca7d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca7d980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca7db10"/>
        <function-ref name="set" scoped="" ref="0x10ca7dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca7de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca7c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca7c2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca7c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x10ca90810" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x10ca90810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca90b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca90d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca8f020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca8f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca8f340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca8f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca8f660"/>
        <function-ref name="get" scoped="" ref="0x10ca8f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca8f980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca8fb10"/>
        <function-ref name="set" scoped="" ref="0x10ca8fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca8fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca8e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca8e2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca8e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x10caa39a0" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x10caa39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caa3d20"/>
        <function-ref name="isInput" scoped="" ref="0x10caa2020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caa21b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caa2340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caa24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caa2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caa27f0"/>
        <function-ref name="get" scoped="" ref="0x10caa2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caa2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caa2ca0"/>
        <function-ref name="set" scoped="" ref="0x10caa2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caa1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caa11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caa1440"/>
        <function-ref name="clr" scoped="" ref="0x10caa15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x10cab69a0" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x10cab69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cab6d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cab5020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cab51b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cab5340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cab54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cab5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cab57f0"/>
        <function-ref name="get" scoped="" ref="0x10cab5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cab5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cab5ca0"/>
        <function-ref name="set" scoped="" ref="0x10cab5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cab4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cab41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cab4440"/>
        <function-ref name="clr" scoped="" ref="0x10cab45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x10cace9a0" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x10cace9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caced20"/>
        <function-ref name="isInput" scoped="" ref="0x10cacd020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cacd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cacd340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cacd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cacd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cacd7f0"/>
        <function-ref name="get" scoped="" ref="0x10cacd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cacdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cacdca0"/>
        <function-ref name="set" scoped="" ref="0x10cacde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cacc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cacc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cacc440"/>
        <function-ref name="clr" scoped="" ref="0x10cacc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10ca67810" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10ca67810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca67b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca67d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca66020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca66340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca66660"/>
        <function-ref name="get" scoped="" ref="0x10ca667f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca66980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca66b10"/>
        <function-ref name="set" scoped="" ref="0x10ca66ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca66e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca65020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca652b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca65440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10ca78810" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10ca78810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca78c90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca78e20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca77020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca77340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca77660"/>
        <function-ref name="get" scoped="" ref="0x10ca777f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca77980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca77b10"/>
        <function-ref name="set" scoped="" ref="0x10ca77ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca77e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca76020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca762b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca76440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x10ca8a810" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x10ca8a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca8ab90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca8ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca89020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca891b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca89340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca894d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca89660"/>
        <function-ref name="get" scoped="" ref="0x10ca897f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca89980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca89b10"/>
        <function-ref name="set" scoped="" ref="0x10ca89ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca89e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca88020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca882b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca88440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x10cacacc0" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x10cacacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cac90a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cac9230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cac93c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cac9550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cac96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cac9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cac9a00"/>
        <function-ref name="get" scoped="" ref="0x10cac9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cac9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cac8020"/>
        <function-ref name="set" scoped="" ref="0x10cac81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cac8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cac84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cac8760"/>
        <function-ref name="clr" scoped="" ref="0x10cac88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x10caf9cb0" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x10caf9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caf80a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caf8230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caf83c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caf8550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caf86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caf8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caf8a00"/>
        <function-ref name="get" scoped="" ref="0x10caf8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caf8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caf7020"/>
        <function-ref name="set" scoped="" ref="0x10caf71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caf7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caf74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caf7760"/>
        <function-ref name="clr" scoped="" ref="0x10caf78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x10caedcb0" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x10caedcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caec230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caec3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caec550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caec6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caec870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caeca00"/>
        <function-ref name="get" scoped="" ref="0x10caecb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caecd20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caeb020"/>
        <function-ref name="set" scoped="" ref="0x10caeb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caeb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caeb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caeb760"/>
        <function-ref name="clr" scoped="" ref="0x10caeb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x10caddcc0" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x10caddcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cadc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cadc230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cadc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cadc550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cadc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cadc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cadca00"/>
        <function-ref name="get" scoped="" ref="0x10cadcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cadcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cadb020"/>
        <function-ref name="set" scoped="" ref="0x10cadb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cadb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cadb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cadb760"/>
        <function-ref name="clr" scoped="" ref="0x10cadb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x10ca86810" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x10ca86810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca86d90"/>
        <function-ref name="isInput" scoped="" ref="0x10caac020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caac340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caac4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caac7f0"/>
        <function-ref name="get" scoped="" ref="0x10caac980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caacb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caacca0"/>
        <function-ref name="set" scoped="" ref="0x10caace30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caab020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caab1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caab440"/>
        <function-ref name="clr" scoped="" ref="0x10caab5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x10cac09a0" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x10cac09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cac0d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cabf020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cabf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cabf340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cabf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cabf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cabf7f0"/>
        <function-ref name="get" scoped="" ref="0x10cabf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cabfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cabfca0"/>
        <function-ref name="set" scoped="" ref="0x10cabfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cabe020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cabe1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cabe440"/>
        <function-ref name="clr" scoped="" ref="0x10cabe5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x10cab09a0" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x10cab09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cab0d20"/>
        <function-ref name="isInput" scoped="" ref="0x10caaf020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caaf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caaf340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caaf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caaf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caaf7f0"/>
        <function-ref name="get" scoped="" ref="0x10caaf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caafb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caafca0"/>
        <function-ref name="set" scoped="" ref="0x10caafe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caae020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caae1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caae440"/>
        <function-ref name="clr" scoped="" ref="0x10caae5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x10caf7cb0" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x10caf7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caf60a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caf6230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caf63c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caf6550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caf66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caf6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caf6a00"/>
        <function-ref name="get" scoped="" ref="0x10caf6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caf6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caf5020"/>
        <function-ref name="set" scoped="" ref="0x10caf51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caf5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caf54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caf5760"/>
        <function-ref name="clr" scoped="" ref="0x10caf58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x10cae3cb0" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x10cae3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cae20a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cae2230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cae23c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cae2550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cae26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cae2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cae2a00"/>
        <function-ref name="get" scoped="" ref="0x10cae2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cae2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cae1020"/>
        <function-ref name="set" scoped="" ref="0x10cae11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cae1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cae14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cae1760"/>
        <function-ref name="clr" scoped="" ref="0x10cae18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10ca61810" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10ca61810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca61b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca61d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca60020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca60340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca60660"/>
        <function-ref name="get" scoped="" ref="0x10ca607f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca60980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca60b10"/>
        <function-ref name="set" scoped="" ref="0x10ca60ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca60e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca85020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca852b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca85440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10ca98810" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10ca98810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca98b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca98d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca97020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca97340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca97660"/>
        <function-ref name="get" scoped="" ref="0x10ca977f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca97980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca97b10"/>
        <function-ref name="set" scoped="" ref="0x10ca97ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca97e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca96020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca962b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca96440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x10cab49a0" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x10cab49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cab4d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cab3020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cab31b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cab3340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cab34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cab3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cab37f0"/>
        <function-ref name="get" scoped="" ref="0x10cab3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cab3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cab3ca0"/>
        <function-ref name="set" scoped="" ref="0x10cab3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cab2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cab21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cab2440"/>
        <function-ref name="clr" scoped="" ref="0x10cab25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x10ca94810" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x10ca94810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca94b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca94d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca93020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca93340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca93660"/>
        <function-ref name="get" scoped="" ref="0x10ca937f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca93980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca93b10"/>
        <function-ref name="set" scoped="" ref="0x10ca93ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca93e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca92020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca922b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca92440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x10caa79a0" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x10caa79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caa7d20"/>
        <function-ref name="isInput" scoped="" ref="0x10caa6020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caa61b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caa6340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caa64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caa6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caa67f0"/>
        <function-ref name="get" scoped="" ref="0x10caa6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caa6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caa6ca0"/>
        <function-ref name="set" scoped="" ref="0x10caa6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caa5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caa51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caa5440"/>
        <function-ref name="clr" scoped="" ref="0x10caa55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x10caba9a0" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x10caba9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cabad20"/>
        <function-ref name="isInput" scoped="" ref="0x10cab9020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cab91b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cab9340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cab94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cab9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cab97f0"/>
        <function-ref name="get" scoped="" ref="0x10cab9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cab9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cab9ca0"/>
        <function-ref name="set" scoped="" ref="0x10cab9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cab8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cab81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cab8440"/>
        <function-ref name="clr" scoped="" ref="0x10cab85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x10cad29a0" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x10cad29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cad2d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cad1020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cad11b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cad1340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cad14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cad1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cad17f0"/>
        <function-ref name="get" scoped="" ref="0x10cad1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cad1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cad1ca0"/>
        <function-ref name="set" scoped="" ref="0x10cad1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cad0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cad01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cad0440"/>
        <function-ref name="clr" scoped="" ref="0x10cad05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x10cadfcc0" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x10cadfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cade0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cade230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cade3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cade550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cade6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cade870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cadea00"/>
        <function-ref name="get" scoped="" ref="0x10cadeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caded20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cadd020"/>
        <function-ref name="set" scoped="" ref="0x10cadd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cadd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cadd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cadd760"/>
        <function-ref name="clr" scoped="" ref="0x10cadd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10ca69870" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10ca69870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca69bf0"/>
        <function-ref name="isInput" scoped="" ref="0x10ca69d80"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca4f020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca4f340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca4f660"/>
        <function-ref name="get" scoped="" ref="0x10ca4f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca4f980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca4fb10"/>
        <function-ref name="set" scoped="" ref="0x10ca4fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca4fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca4d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca4d2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca4d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10ca7c810" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10ca7c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca7cb90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca7cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca7b020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca7b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca7b340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca7b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca7b660"/>
        <function-ref name="get" scoped="" ref="0x10ca7b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca7b980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca7bb10"/>
        <function-ref name="set" scoped="" ref="0x10ca7bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca7be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca7a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca7a2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca7a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x10ca8e810" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x10ca8e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca8eb90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca8ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca8d020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca8d340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca8d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca8d660"/>
        <function-ref name="get" scoped="" ref="0x10ca8d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca8d980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca8db10"/>
        <function-ref name="set" scoped="" ref="0x10ca8dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca8de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca8c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca8c2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca8c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x10caa19a0" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x10caa19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caa1d20"/>
        <function-ref name="isInput" scoped="" ref="0x10caa0020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caa01b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caa0340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caa04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caa0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caa07f0"/>
        <function-ref name="get" scoped="" ref="0x10caa0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caa0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caa0ca0"/>
        <function-ref name="set" scoped="" ref="0x10caa0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca9f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca9f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca9f440"/>
        <function-ref name="clr" scoped="" ref="0x10ca9f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x10cadbcc0" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x10cadbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cada0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cada230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cada3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cada550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cada6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cada870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cadaa00"/>
        <function-ref name="get" scoped="" ref="0x10cadab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cadad20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cad9020"/>
        <function-ref name="set" scoped="" ref="0x10cad91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cad9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cad94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cad9760"/>
        <function-ref name="clr" scoped="" ref="0x10cad98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x10cad5cb0" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x10cad5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cafc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cafc230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cafc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cafc550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cafc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cafc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cafca00"/>
        <function-ref name="get" scoped="" ref="0x10cafcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cafcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cafb020"/>
        <function-ref name="set" scoped="" ref="0x10cafb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cafb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cafb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cafb760"/>
        <function-ref name="clr" scoped="" ref="0x10cafb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x10caf1cb0" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x10caf1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caf00a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caf0230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caf03c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caf0550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caf06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caf0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caf0a00"/>
        <function-ref name="get" scoped="" ref="0x10caf0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caf0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caef020"/>
        <function-ref name="set" scoped="" ref="0x10caef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caef760"/>
        <function-ref name="clr" scoped="" ref="0x10caef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x10ca9c9a0" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x10ca9c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca9cd20"/>
        <function-ref name="isInput" scoped="" ref="0x10ca9b020"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca9b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10ca9b340"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca9b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca9b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca9b7f0"/>
        <function-ref name="get" scoped="" ref="0x10ca9b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca9bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca9bca0"/>
        <function-ref name="set" scoped="" ref="0x10ca9be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca9a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca9a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca9a440"/>
        <function-ref name="clr" scoped="" ref="0x10ca9a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x10cad9cc0" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x10cad9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cad80a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cad8230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cad83c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cad8550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cad86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cad8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cad8a00"/>
        <function-ref name="get" scoped="" ref="0x10cad8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cad8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cad7020"/>
        <function-ref name="set" scoped="" ref="0x10cad71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cad7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cad74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cad7760"/>
        <function-ref name="clr" scoped="" ref="0x10cad78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10ca65810" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10ca65810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca65b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca65d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca64020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca64340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca64660"/>
        <function-ref name="get" scoped="" ref="0x10ca647f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca64980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca64b10"/>
        <function-ref name="set" scoped="" ref="0x10ca64ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca64e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca63020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca632b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca63440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10ca76810" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10ca76810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca76b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca76d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca75020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca75340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca75660"/>
        <function-ref name="get" scoped="" ref="0x10ca757f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca75980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca75b10"/>
        <function-ref name="set" scoped="" ref="0x10ca75ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca75e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca74020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca742b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca74440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x10ca88810" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x10ca88810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca88b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca88d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca87020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca87340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca87660"/>
        <function-ref name="get" scoped="" ref="0x10ca877f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca87980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca87b10"/>
        <function-ref name="set" scoped="" ref="0x10ca87ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca87e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca86020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca862b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca86440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x10cae1cc0" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x10cae1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cae00a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cae0230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cae03c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cae0550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cae06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cae0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cae0a00"/>
        <function-ref name="get" scoped="" ref="0x10cae0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cae0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cadf020"/>
        <function-ref name="set" scoped="" ref="0x10cadf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cadf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cadf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cadf760"/>
        <function-ref name="clr" scoped="" ref="0x10cadf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x10caf5cb0" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x10caf5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caf40a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caf4230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caf43c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caf4550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caf46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caf4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caf4a00"/>
        <function-ref name="get" scoped="" ref="0x10caf4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caf4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caf3020"/>
        <function-ref name="set" scoped="" ref="0x10caf31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caf3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caf34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caf3760"/>
        <function-ref name="clr" scoped="" ref="0x10caf38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x10caab9a0" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x10caab9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caabd20"/>
        <function-ref name="isInput" scoped="" ref="0x10caaa020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caaa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caaa340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caaa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caaa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caaa7f0"/>
        <function-ref name="get" scoped="" ref="0x10caaa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caaab10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caaaca0"/>
        <function-ref name="set" scoped="" ref="0x10caaae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caa9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caa91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caa9440"/>
        <function-ref name="clr" scoped="" ref="0x10caa95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10cabe9a0" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10cabe9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cabed20"/>
        <function-ref name="isInput" scoped="" ref="0x10cabd020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cabd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cabd340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cabd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cabd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cabd7f0"/>
        <function-ref name="get" scoped="" ref="0x10cabd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cabdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cabdca0"/>
        <function-ref name="set" scoped="" ref="0x10cabde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cabc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cabc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cabc440"/>
        <function-ref name="clr" scoped="" ref="0x10cabc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x10caae9a0" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x10caae9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caaed20"/>
        <function-ref name="isInput" scoped="" ref="0x10caad020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caad1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caad340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caad4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caad7f0"/>
        <function-ref name="get" scoped="" ref="0x10caad980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caadb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caadca0"/>
        <function-ref name="set" scoped="" ref="0x10caade30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cad4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cad41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cad4440"/>
        <function-ref name="clr" scoped="" ref="0x10cad45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10ca85810" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10ca85810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca85b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca85d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca84020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca84340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca84660"/>
        <function-ref name="get" scoped="" ref="0x10ca847f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca84980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca84b10"/>
        <function-ref name="set" scoped="" ref="0x10ca84ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca84e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca83020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca832b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca83440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x10cab29a0" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x10cab29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cab2d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cab1020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cab11b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cab1340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cab14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cab1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cab17f0"/>
        <function-ref name="get" scoped="" ref="0x10cab1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cab1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cab1ca0"/>
        <function-ref name="set" scoped="" ref="0x10cab1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cab0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cab01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cab0440"/>
        <function-ref name="clr" scoped="" ref="0x10cab05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10ca81810" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10ca81810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca81b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca81d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca7f020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca7f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca7f340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca7f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca7f660"/>
        <function-ref name="get" scoped="" ref="0x10ca7f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca7f980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca7fb10"/>
        <function-ref name="set" scoped="" ref="0x10ca7fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca7fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca7e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca7e2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca7e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x10ca92810" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x10ca92810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca92b90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca92d20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca91020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca91340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca91660"/>
        <function-ref name="get" scoped="" ref="0x10ca917f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca91980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca91b10"/>
        <function-ref name="set" scoped="" ref="0x10ca91ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca91e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca90020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca902b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca90440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x10caa59a0" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x10caa59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caa5d20"/>
        <function-ref name="isInput" scoped="" ref="0x10caa4020"/>
        <function-ref name="setResistor" scoped="" ref="0x10caa41b0"/>
        <function-ref name="toggle" scoped="" ref="0x10caa4340"/>
        <function-ref name="isOutput" scoped="" ref="0x10caa44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caa4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caa47f0"/>
        <function-ref name="get" scoped="" ref="0x10caa4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caa4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10caa4ca0"/>
        <function-ref name="set" scoped="" ref="0x10caa4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caa3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caa31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caa3440"/>
        <function-ref name="clr" scoped="" ref="0x10caa35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x10cab89a0" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x10cab89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cab8d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cab7020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cab71b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cab7340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cab74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cab7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cab77f0"/>
        <function-ref name="get" scoped="" ref="0x10cab7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cab7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cab7ca0"/>
        <function-ref name="set" scoped="" ref="0x10cab7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cab6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cab61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cab6440"/>
        <function-ref name="clr" scoped="" ref="0x10cab65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x10cad09a0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x10cad09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cad0d20"/>
        <function-ref name="isInput" scoped="" ref="0x10cacf020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cacf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cacf340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cacf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cacf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cacf7f0"/>
        <function-ref name="get" scoped="" ref="0x10cacf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cacfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cacfca0"/>
        <function-ref name="set" scoped="" ref="0x10cacfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cace020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cace1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cace440"/>
        <function-ref name="clr" scoped="" ref="0x10cace5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10ca4d810" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10ca4d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca4db90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca4dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca68020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca681b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca68340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca684d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca68660"/>
        <function-ref name="get" scoped="" ref="0x10ca687f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca68980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca68b10"/>
        <function-ref name="set" scoped="" ref="0x10ca68ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca68e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca67020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca672b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca67440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10ca7a810" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10ca7a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca7ab90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca7ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca79020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca79340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca79660"/>
        <function-ref name="get" scoped="" ref="0x10ca797f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca79980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca79b10"/>
        <function-ref name="set" scoped="" ref="0x10ca79ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca79e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca78020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca782b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca78440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x10ca8c810" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x10ca8c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca8cb90"/>
        <function-ref name="isInput" scoped="" ref="0x10ca8cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca8b020"/>
        <function-ref name="toggle" scoped="" ref="0x10ca8b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca8b340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca8b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca8b660"/>
        <function-ref name="get" scoped="" ref="0x10ca8b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca8b980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca8bb10"/>
        <function-ref name="set" scoped="" ref="0x10ca8bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca8be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca8a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca8a2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ca8a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x10ca9f9a0" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x10ca9f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca9fd20"/>
        <function-ref name="isInput" scoped="" ref="0x10ca9d020"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca9d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10ca9d340"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca9d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca9d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca9d7f0"/>
        <function-ref name="get" scoped="" ref="0x10ca9d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca9db10"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca9dca0"/>
        <function-ref name="set" scoped="" ref="0x10ca9de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ca9c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ca9c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ca9c440"/>
        <function-ref name="clr" scoped="" ref="0x10ca9c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x10cac2ca0" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x10cac2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cac10a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cac1230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cac13c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cac1550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cac16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cac1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cac1a00"/>
        <function-ref name="get" scoped="" ref="0x10cac1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cac1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cae8020"/>
        <function-ref name="set" scoped="" ref="0x10cae81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cae8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cae84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cae8760"/>
        <function-ref name="clr" scoped="" ref="0x10cae88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x10cafbcb0" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x10cafbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cafa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cafa230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cafa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cafa550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cafa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cafa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cafaa00"/>
        <function-ref name="get" scoped="" ref="0x10cafab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cafad20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caf9020"/>
        <function-ref name="set" scoped="" ref="0x10caf91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caf9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caf94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caf9760"/>
        <function-ref name="clr" scoped="" ref="0x10caf98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x10cac4cc0" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x10cac4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cac30a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cac3230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cac33c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cac3550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cac36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cac3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cac3a00"/>
        <function-ref name="get" scoped="" ref="0x10cac3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cac3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cac2020"/>
        <function-ref name="set" scoped="" ref="0x10cac21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cac2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cac24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cac2760"/>
        <function-ref name="clr" scoped="" ref="0x10cac28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x10ca9a9a0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x10ca9a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ca9ad20"/>
        <function-ref name="isInput" scoped="" ref="0x10ca99020"/>
        <function-ref name="setResistor" scoped="" ref="0x10ca991b0"/>
        <function-ref name="toggle" scoped="" ref="0x10ca99340"/>
        <function-ref name="isOutput" scoped="" ref="0x10ca994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ca99660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ca997f0"/>
        <function-ref name="get" scoped="" ref="0x10ca99980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ca99b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10ca99ca0"/>
        <function-ref name="set" scoped="" ref="0x10ca99e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cac0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cac01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cac0440"/>
        <function-ref name="clr" scoped="" ref="0x10cac05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x10caefcb0" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x10caefcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10caee0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10caee230"/>
        <function-ref name="setResistor" scoped="" ref="0x10caee3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10caee550"/>
        <function-ref name="isOutput" scoped="" ref="0x10caee6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10caee870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10caeea00"/>
        <function-ref name="get" scoped="" ref="0x10caeeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10caeed20"/>
        <function-ref name="getRaw" scoped="" ref="0x10caed020"/>
        <function-ref name="set" scoped="" ref="0x10caed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caed760"/>
        <function-ref name="clr" scoped="" ref="0x10caed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x10cae9cc0" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x10cae9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb100a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb10230"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb103c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb10550"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb106e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb10870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb10a00"/>
        <function-ref name="get" scoped="" ref="0x10cb10b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb10d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb0f020"/>
        <function-ref name="set" scoped="" ref="0x10cb0f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb0f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb0f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb0f760"/>
        <function-ref name="clr" scoped="" ref="0x10cb0f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x10cacc9f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x10cacc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cacb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x10cacb350"/>
        <function-ref name="setResistor" scoped="" ref="0x10cacb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x10cacb670"/>
        <function-ref name="isOutput" scoped="" ref="0x10cacb800"/>
        <function-ref name="getResistor" scoped="" ref="0x10cacb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cacbb20"/>
        <function-ref name="get" scoped="" ref="0x10cacbcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cacbe40"/>
        <function-ref name="getRaw" scoped="" ref="0x10caca020"/>
        <function-ref name="set" scoped="" ref="0x10caca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10caca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10caca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10caca760"/>
        <function-ref name="clr" scoped="" ref="0x10caca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb0cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb0cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb370e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb37270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb37400"/>
        <function-ref name="toggle" scoped="" ref="0x10cb37590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb37720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb37a40"/>
        <function-ref name="get" scoped="" ref="0x10cb37bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb37d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb36020"/>
        <function-ref name="set" scoped="" ref="0x10cb361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb36340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb36760"/>
        <function-ref name="clr" scoped="" ref="0x10cb368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb33740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb33740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb33ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb33c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb33de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb32020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb32340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb324d0"/>
        <function-ref name="get" scoped="" ref="0x10cb32660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb32980"/>
        <function-ref name="set" scoped="" ref="0x10cb32b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb32ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb32e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb31120"/>
        <function-ref name="clr" scoped="" ref="0x10cb312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb2e100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb2e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb2e480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb2e610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb2e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb2e930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb2eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb2ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb2ede0"/>
        <function-ref name="get" scoped="" ref="0x10cb2d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb2d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb2d340"/>
        <function-ref name="set" scoped="" ref="0x10cb2d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb2d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb2d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb2da80"/>
        <function-ref name="clr" scoped="" ref="0x10cb2dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb2ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb2ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb290e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb29270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb29400"/>
        <function-ref name="toggle" scoped="" ref="0x10cb29590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb29720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb298b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb29a40"/>
        <function-ref name="get" scoped="" ref="0x10cb29bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb29d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb28020"/>
        <function-ref name="set" scoped="" ref="0x10cb281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb28340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb28760"/>
        <function-ref name="clr" scoped="" ref="0x10cb288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb4f740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb4f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb4fac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb4fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb4fde0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb4e020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb4e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb4e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb4e4d0"/>
        <function-ref name="get" scoped="" ref="0x10cb4e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb4e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb4e980"/>
        <function-ref name="set" scoped="" ref="0x10cb4eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb4eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb4ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb4d120"/>
        <function-ref name="clr" scoped="" ref="0x10cb4d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb4a100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb4a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb4a480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb4a610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb4a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb4a930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb4aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb4ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb4ade0"/>
        <function-ref name="get" scoped="" ref="0x10cb49020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb49340"/>
        <function-ref name="set" scoped="" ref="0x10cb494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb49660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb49a80"/>
        <function-ref name="clr" scoped="" ref="0x10cb49c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb46d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb46d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb450e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb45270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb45400"/>
        <function-ref name="toggle" scoped="" ref="0x10cb45590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb45720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb45a40"/>
        <function-ref name="get" scoped="" ref="0x10cb45bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb45d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb44020"/>
        <function-ref name="set" scoped="" ref="0x10cb441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb44340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb44760"/>
        <function-ref name="clr" scoped="" ref="0x10cb448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb41740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb41740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb41ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb41c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb41de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb40020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb40340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb404d0"/>
        <function-ref name="get" scoped="" ref="0x10cb40660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb40980"/>
        <function-ref name="set" scoped="" ref="0x10cb40b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb40ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb40e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb3f120"/>
        <function-ref name="clr" scoped="" ref="0x10cb3f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb3b100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb3b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb3b480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb3b610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb3b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb3b930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb3bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb3bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb3bde0"/>
        <function-ref name="get" scoped="" ref="0x10cb64020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb64340"/>
        <function-ref name="set" scoped="" ref="0x10cb644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb64660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb64a80"/>
        <function-ref name="clr" scoped="" ref="0x10cb64c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb61d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb61d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb600e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb60270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb60400"/>
        <function-ref name="toggle" scoped="" ref="0x10cb60590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb60720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb608b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb60a40"/>
        <function-ref name="get" scoped="" ref="0x10cb60bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb60d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb5f020"/>
        <function-ref name="set" scoped="" ref="0x10cb5f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb5f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb5f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb5f760"/>
        <function-ref name="clr" scoped="" ref="0x10cb5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb5c740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb5c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb5cac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb5cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb5cde0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb5b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb5b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb5b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb5b4d0"/>
        <function-ref name="get" scoped="" ref="0x10cb5b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb5b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb5b980"/>
        <function-ref name="set" scoped="" ref="0x10cb5bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb5bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb5be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb5a120"/>
        <function-ref name="clr" scoped="" ref="0x10cb5a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb57100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb57100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb57480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb57610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb577a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb57930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb57ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb57c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb57de0"/>
        <function-ref name="get" scoped="" ref="0x10cb56020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb56340"/>
        <function-ref name="set" scoped="" ref="0x10cb564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb56660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb56a80"/>
        <function-ref name="clr" scoped="" ref="0x10cb56c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb53d80" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb53d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb52180"/>
        <function-ref name="isInput" scoped="" ref="0x10cb52310"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb524a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb52630"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb527c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb52950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb52ae0"/>
        <function-ref name="get" scoped="" ref="0x10cb52c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb52e00"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb51020"/>
        <function-ref name="set" scoped="" ref="0x10cb511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb51340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb51760"/>
        <function-ref name="clr" scoped="" ref="0x10cb518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb78740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb78740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb78ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb78c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb78de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb77020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb771b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb77340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb774d0"/>
        <function-ref name="get" scoped="" ref="0x10cb77660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb777f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb77980"/>
        <function-ref name="set" scoped="" ref="0x10cb77b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb77ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb77e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb76120"/>
        <function-ref name="clr" scoped="" ref="0x10cb762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb73100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb73100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb73480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb73610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb737a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb73930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb73ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb73c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb73de0"/>
        <function-ref name="get" scoped="" ref="0x10cb72020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb72340"/>
        <function-ref name="set" scoped="" ref="0x10cb724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb72660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb72a80"/>
        <function-ref name="clr" scoped="" ref="0x10cb72c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb6fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb6fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb6d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb6d270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb6d400"/>
        <function-ref name="toggle" scoped="" ref="0x10cb6d590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb6d720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb6d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb6da40"/>
        <function-ref name="get" scoped="" ref="0x10cb6dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb6dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb6c020"/>
        <function-ref name="set" scoped="" ref="0x10cb6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb6c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb6c760"/>
        <function-ref name="clr" scoped="" ref="0x10cb6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb69740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb69740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb69ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb69c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb69de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb68020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb681b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb68340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb684d0"/>
        <function-ref name="get" scoped="" ref="0x10cb68660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb68980"/>
        <function-ref name="set" scoped="" ref="0x10cb68b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb68ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb68e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb67120"/>
        <function-ref name="clr" scoped="" ref="0x10cb672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb8e100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb8e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb8e480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb8e610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb8e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb8e930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb8eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb8ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb8ede0"/>
        <function-ref name="get" scoped="" ref="0x10cb8d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb8d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb8d340"/>
        <function-ref name="set" scoped="" ref="0x10cb8d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb8d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb8d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb8da80"/>
        <function-ref name="clr" scoped="" ref="0x10cb8dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb8ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb8ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb890e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb89270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb89400"/>
        <function-ref name="toggle" scoped="" ref="0x10cb89590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb89720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb898b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb89a40"/>
        <function-ref name="get" scoped="" ref="0x10cb89bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb89d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb88020"/>
        <function-ref name="set" scoped="" ref="0x10cb881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb88340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb88760"/>
        <function-ref name="clr" scoped="" ref="0x10cb888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb85740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb85740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb85ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb85c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb85de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb84020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb84340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb844d0"/>
        <function-ref name="get" scoped="" ref="0x10cb84660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb84980"/>
        <function-ref name="set" scoped="" ref="0x10cb84b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb84ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb84e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb83120"/>
        <function-ref name="clr" scoped="" ref="0x10cb832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb80100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb80100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb80480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb80610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb807a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb80930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb80ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb80c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb80de0"/>
        <function-ref name="get" scoped="" ref="0x10cb7f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb7f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb7f340"/>
        <function-ref name="set" scoped="" ref="0x10cb7f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb7f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb7f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb7fa80"/>
        <function-ref name="clr" scoped="" ref="0x10cb7fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb7cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb7cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb7b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cb7b270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb7b400"/>
        <function-ref name="toggle" scoped="" ref="0x10cb7b590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb7b720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb7b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb7ba40"/>
        <function-ref name="get" scoped="" ref="0x10cb7bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb7bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb7a020"/>
        <function-ref name="set" scoped="" ref="0x10cb7a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb7a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb7a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb7a760"/>
        <function-ref name="clr" scoped="" ref="0x10cb7a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cba2740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cba2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cba2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cba2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cba2de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cba1020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cba11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cba1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cba14d0"/>
        <function-ref name="get" scoped="" ref="0x10cba1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cba17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cba1980"/>
        <function-ref name="set" scoped="" ref="0x10cba1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cba1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cba1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cba0120"/>
        <function-ref name="clr" scoped="" ref="0x10cba02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb9d100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb9d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb9d480"/>
        <function-ref name="isInput" scoped="" ref="0x10cb9d610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb9d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb9d930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb9dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb9dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb9dde0"/>
        <function-ref name="get" scoped="" ref="0x10cb9b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb9b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb9b340"/>
        <function-ref name="set" scoped="" ref="0x10cb9b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb9b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb9b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb9ba80"/>
        <function-ref name="clr" scoped="" ref="0x10cb9bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb98e60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb98e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb97210"/>
        <function-ref name="isInput" scoped="" ref="0x10cb973a0"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb97530"/>
        <function-ref name="toggle" scoped="" ref="0x10cb976c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb97850"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb979e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb97b70"/>
        <function-ref name="get" scoped="" ref="0x10cb97d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb96020"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb961b0"/>
        <function-ref name="set" scoped="" ref="0x10cb96340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb964d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb96660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb968f0"/>
        <function-ref name="clr" scoped="" ref="0x10cb96a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cb939f0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cb939f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cb93d70"/>
        <function-ref name="isInput" scoped="" ref="0x10cb92020"/>
        <function-ref name="setResistor" scoped="" ref="0x10cb921b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cb92340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cb924d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cb92660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cb927f0"/>
        <function-ref name="get" scoped="" ref="0x10cb92980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cb92b10"/>
        <function-ref name="getRaw" scoped="" ref="0x10cb92ca0"/>
        <function-ref name="set" scoped="" ref="0x10cb92e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cb91020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cb911b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cb91440"/>
        <function-ref name="clr" scoped="" ref="0x10cb915d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbba460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbba460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbba7e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbba970"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbbab00"/>
        <function-ref name="toggle" scoped="" ref="0x10cbbac90"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbbae20"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbb9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbb91b0"/>
        <function-ref name="get" scoped="" ref="0x10cbb9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbb94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbb9660"/>
        <function-ref name="set" scoped="" ref="0x10cbb97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbb9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbb9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbb9da0"/>
        <function-ref name="clr" scoped="" ref="0x10cbb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbb6e00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbb6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbb51c0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbb5350"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbb54e0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbb5670"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbb5800"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbb5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbb5b20"/>
        <function-ref name="get" scoped="" ref="0x10cbb5cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbb5e40"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbb4020"/>
        <function-ref name="set" scoped="" ref="0x10cbb41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbb4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbb44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbb4760"/>
        <function-ref name="clr" scoped="" ref="0x10cbb48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbb1740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbb1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbb1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbb1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbb1de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbb0020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbb01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbb0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbb04d0"/>
        <function-ref name="get" scoped="" ref="0x10cbb0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbb07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbb0980"/>
        <function-ref name="set" scoped="" ref="0x10cbb0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbb0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbb0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbaf120"/>
        <function-ref name="clr" scoped="" ref="0x10cbaf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbac100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbac480"/>
        <function-ref name="isInput" scoped="" ref="0x10cbac610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbac7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbac930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbacac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbacc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbacde0"/>
        <function-ref name="get" scoped="" ref="0x10cbab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbab340"/>
        <function-ref name="set" scoped="" ref="0x10cbab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbaba80"/>
        <function-ref name="clr" scoped="" ref="0x10cbabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cba8d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cba8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cba70e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cba7270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cba7400"/>
        <function-ref name="toggle" scoped="" ref="0x10cba7590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cba7720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cba78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cba7a40"/>
        <function-ref name="get" scoped="" ref="0x10cba7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cba7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cba6020"/>
        <function-ref name="set" scoped="" ref="0x10cba61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cba6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cba64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cba6760"/>
        <function-ref name="clr" scoped="" ref="0x10cba68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbce740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbce740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbceac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbcec50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbcede0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbcd020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbcd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbcd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbcd4d0"/>
        <function-ref name="get" scoped="" ref="0x10cbcd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbcd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbcd980"/>
        <function-ref name="set" scoped="" ref="0x10cbcdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbcdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbcde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbcc120"/>
        <function-ref name="clr" scoped="" ref="0x10cbcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbc9100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbc9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbc9480"/>
        <function-ref name="isInput" scoped="" ref="0x10cbc9610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbc97a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbc9930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbc9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbc9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbc9de0"/>
        <function-ref name="get" scoped="" ref="0x10cbc8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbc81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbc8340"/>
        <function-ref name="set" scoped="" ref="0x10cbc84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbc8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbc87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbc8a80"/>
        <function-ref name="clr" scoped="" ref="0x10cbc8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbc5d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbc5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbc40e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbc4270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbc4400"/>
        <function-ref name="toggle" scoped="" ref="0x10cbc4590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbc4720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbc48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbc4a40"/>
        <function-ref name="get" scoped="" ref="0x10cbc4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbc4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbc3020"/>
        <function-ref name="set" scoped="" ref="0x10cbc31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbc3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbc34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbc3760"/>
        <function-ref name="clr" scoped="" ref="0x10cbc38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbc0740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbc0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbc0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbc0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbc0de0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbbf020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbbf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbbf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbbf4d0"/>
        <function-ref name="get" scoped="" ref="0x10cbbf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbbf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbbf980"/>
        <function-ref name="set" scoped="" ref="0x10cbbfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbbfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbbfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbbe120"/>
        <function-ref name="clr" scoped="" ref="0x10cbbe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbbb100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbbb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbbb480"/>
        <function-ref name="isInput" scoped="" ref="0x10cbbb610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbbb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbbb930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbbbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbbbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbbbde0"/>
        <function-ref name="get" scoped="" ref="0x10cbe6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbe61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbe6340"/>
        <function-ref name="set" scoped="" ref="0x10cbe64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbe6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbe67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbe6a80"/>
        <function-ref name="clr" scoped="" ref="0x10cbe6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbe3d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbe3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbe20e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbe2270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbe2400"/>
        <function-ref name="toggle" scoped="" ref="0x10cbe2590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbe2720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbe28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbe2a40"/>
        <function-ref name="get" scoped="" ref="0x10cbe2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbe2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbe1020"/>
        <function-ref name="set" scoped="" ref="0x10cbe11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbe1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbe14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbe1760"/>
        <function-ref name="clr" scoped="" ref="0x10cbe18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbde740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbde740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbdeac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbdec50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbdede0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbdd020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbdd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbdd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbdd4d0"/>
        <function-ref name="get" scoped="" ref="0x10cbdd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbdd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbdd980"/>
        <function-ref name="set" scoped="" ref="0x10cbddb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbddca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbdde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbdc120"/>
        <function-ref name="clr" scoped="" ref="0x10cbdc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbd9100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbd9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbd9480"/>
        <function-ref name="isInput" scoped="" ref="0x10cbd9610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbd97a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbd9930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbd9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbd9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbd9de0"/>
        <function-ref name="get" scoped="" ref="0x10cbd7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbd71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbd7340"/>
        <function-ref name="set" scoped="" ref="0x10cbd74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbd7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbd77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbd7a80"/>
        <function-ref name="clr" scoped="" ref="0x10cbd7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbd4d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbd4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbd30e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbd3270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbd3400"/>
        <function-ref name="toggle" scoped="" ref="0x10cbd3590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbd3720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbd38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbd3a40"/>
        <function-ref name="get" scoped="" ref="0x10cbd3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbd3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbd2020"/>
        <function-ref name="set" scoped="" ref="0x10cbd21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbd2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbd24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbd2760"/>
        <function-ref name="clr" scoped="" ref="0x10cbd28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbfb740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbfb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbfbac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbfbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbfbde0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbfa020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbfa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbfa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbfa4d0"/>
        <function-ref name="get" scoped="" ref="0x10cbfa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbfa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbfa980"/>
        <function-ref name="set" scoped="" ref="0x10cbfab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbfaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbfae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbf9120"/>
        <function-ref name="clr" scoped="" ref="0x10cbf92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbf6100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbf6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbf6480"/>
        <function-ref name="isInput" scoped="" ref="0x10cbf6610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbf67a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbf6930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbf6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbf6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbf6de0"/>
        <function-ref name="get" scoped="" ref="0x10cbf5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbf51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbf5340"/>
        <function-ref name="set" scoped="" ref="0x10cbf54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbf5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbf57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbf5a80"/>
        <function-ref name="clr" scoped="" ref="0x10cbf5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbf2d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbf2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbf10e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbf1270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbf1400"/>
        <function-ref name="toggle" scoped="" ref="0x10cbf1590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbf1720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbf18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbf1a40"/>
        <function-ref name="get" scoped="" ref="0x10cbf1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbf1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbf0020"/>
        <function-ref name="set" scoped="" ref="0x10cbf01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbf0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbf04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbf0760"/>
        <function-ref name="clr" scoped="" ref="0x10cbf08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbed740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbed740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbedac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cbedc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbedde0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbec020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbec1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbec340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbec4d0"/>
        <function-ref name="get" scoped="" ref="0x10cbec660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbec7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbec980"/>
        <function-ref name="set" scoped="" ref="0x10cbecb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbecca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbece30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbeb120"/>
        <function-ref name="clr" scoped="" ref="0x10cbeb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cbe8100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cbe8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cbe8480"/>
        <function-ref name="isInput" scoped="" ref="0x10cbe8610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cbe87a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cbe8930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cbe8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cbe8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cbe8de0"/>
        <function-ref name="get" scoped="" ref="0x10cbe7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cbe71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cbe7340"/>
        <function-ref name="set" scoped="" ref="0x10cbe74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cbe7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cbe77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cbe7a80"/>
        <function-ref name="clr" scoped="" ref="0x10cbe7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cc10d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cc10d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc0f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cc0f270"/>
        <function-ref name="setResistor" scoped="" ref="0x10cc0f400"/>
        <function-ref name="toggle" scoped="" ref="0x10cc0f590"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc0f720"/>
        <function-ref name="getResistor" scoped="" ref="0x10cc0f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc0fa40"/>
        <function-ref name="get" scoped="" ref="0x10cc0fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cc0fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10cc0e020"/>
        <function-ref name="set" scoped="" ref="0x10cc0e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cc0e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cc0e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cc0e760"/>
        <function-ref name="clr" scoped="" ref="0x10cc0e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cc0b740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cc0b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc0bac0"/>
        <function-ref name="isInput" scoped="" ref="0x10cc0bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10cc0bde0"/>
        <function-ref name="toggle" scoped="" ref="0x10cc09020"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cc09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc094d0"/>
        <function-ref name="get" scoped="" ref="0x10cc09660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cc097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cc09980"/>
        <function-ref name="set" scoped="" ref="0x10cc09b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cc09ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cc09e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cc08120"/>
        <function-ref name="clr" scoped="" ref="0x10cc082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10cc05100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10cc05100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc05480"/>
        <function-ref name="isInput" scoped="" ref="0x10cc05610"/>
        <function-ref name="setResistor" scoped="" ref="0x10cc057a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cc05930"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc05ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cc05c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc05de0"/>
        <function-ref name="get" scoped="" ref="0x10cc04020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cc041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cc04340"/>
        <function-ref name="set" scoped="" ref="0x10cc044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cc04660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cc047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cc04a80"/>
        <function-ref name="clr" scoped="" ref="0x10cc04c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10cc982f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10cc982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc98670"/>
        <function-ref name="isInput" scoped="" ref="0x10cc98800"/>
        <function-ref name="setResistor" scoped="" ref="0x10cc98990"/>
        <function-ref name="toggle" scoped="" ref="0x10cc98b20"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc98cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cc98e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc97020"/>
        <function-ref name="get" scoped="" ref="0x10cc971b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cc97340"/>
        <function-ref name="getRaw" scoped="" ref="0x10cc974d0"/>
        <function-ref name="set" scoped="" ref="0x10cc97660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cc977f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cc97980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cc97c10"/>
        <function-ref name="clr" scoped="" ref="0x10cc97da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10cc7b020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10cc7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc7b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cc7b530"/>
        <function-ref name="toggle" scoped="" ref="0x10cc7b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc7b850"/>
        <function-ref name="get" scoped="" ref="0x10cc7b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc7bb70"/>
        <function-ref name="set" scoped="" ref="0x10cc7bd00"/>
        <function-ref name="clr" scoped="" ref="0x10cc98020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10cc94de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10cc94de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc93180"/>
        <function-ref name="isInput" scoped="" ref="0x10cc93310"/>
        <function-ref name="setResistor" scoped="" ref="0x10cc934a0"/>
        <function-ref name="toggle" scoped="" ref="0x10cc93630"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc937c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cc93950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc93ae0"/>
        <function-ref name="get" scoped="" ref="0x10cc93c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cc93e00"/>
        <function-ref name="getRaw" scoped="" ref="0x10cc92020"/>
        <function-ref name="set" scoped="" ref="0x10cc921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cc92340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cc924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cc92760"/>
        <function-ref name="clr" scoped="" ref="0x10cc928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10cc95b90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10cc95b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc94020"/>
        <function-ref name="isInput" scoped="" ref="0x10cc941b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cc94340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc944d0"/>
        <function-ref name="get" scoped="" ref="0x10cc94660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc947f0"/>
        <function-ref name="set" scoped="" ref="0x10cc94980"/>
        <function-ref name="clr" scoped="" ref="0x10cc94b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10cc8f930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10cc8f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc8fcb0"/>
        <function-ref name="isInput" scoped="" ref="0x10cc8fe40"/>
        <function-ref name="setResistor" scoped="" ref="0x10cc8e020"/>
        <function-ref name="toggle" scoped="" ref="0x10cc8e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc8e340"/>
        <function-ref name="getResistor" scoped="" ref="0x10cc8e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc8e660"/>
        <function-ref name="get" scoped="" ref="0x10cc8e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cc8e980"/>
        <function-ref name="getRaw" scoped="" ref="0x10cc8eb10"/>
        <function-ref name="set" scoped="" ref="0x10cc8eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cc8ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cc8d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cc8d2b0"/>
        <function-ref name="clr" scoped="" ref="0x10cc8d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10cc90710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10cc90710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cc90a90"/>
        <function-ref name="isInput" scoped="" ref="0x10cc90c20"/>
        <function-ref name="toggle" scoped="" ref="0x10cc90db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cc8f020"/>
        <function-ref name="get" scoped="" ref="0x10cc8f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cc8f340"/>
        <function-ref name="set" scoped="" ref="0x10cc8f4d0"/>
        <function-ref name="clr" scoped="" ref="0x10cc8f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x10ccaeb00" loc="5:ReceiverC.nc">
      <component-ref qname="ReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10ccaeb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10ccaee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10cce29f0" loc="7:ReceiverC.nc">
      <component-ref qname="ReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10cce29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10cce2d70"/>
        <function-ref name="payloadLength" scoped="" ref="0x10ccab020"/>
        <function-ref name="getPayload" scoped="" ref="0x10ccab1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10ccab340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10ccab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10cd095a0" loc="8:ReceiverC.nc">
      <component-ref qname="ReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10cd095a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cd09920"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd09ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd09c40"/>
        <function-ref name="cancel" scoped="" ref="0x10cd09dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x10ccaa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x10cd29160" loc="11:ReceiverC.nc">
      <component-ref qname="ReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x10cd29160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10cd294e0"/>
        <function-ref name="stopDone" scoped="" ref="0x10cd29670"/>
        <function-ref name="start" scoped="" ref="0x10cd29800"/>
        <function-ref name="stop" scoped="" ref="0x10cd29990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x10cd24790" loc="10:ReceiverC.nc">
      <component-ref qname="ReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10cd24790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd24b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10ccad120" loc="6:ReceiverC.nc">
      <component-ref qname="ReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10ccad120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10ccad4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10ccad630"/>
        <function-ref name="led1On" scoped="" ref="0x10ccad7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10ccad950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10ccadae0"/>
        <function-ref name="get" scoped="" ref="0x10ccadc70"/>
        <function-ref name="led1Off" scoped="" ref="0x10ccade00"/>
        <function-ref name="led2Off" scoped="" ref="0x10ccac4d0"/>
        <function-ref name="set" scoped="" ref="0x10ccac020"/>
        <function-ref name="led0On" scoped="" ref="0x10ccac1b0"/>
        <function-ref name="led2On" scoped="" ref="0x10ccac340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10ccf94e0" loc="9:ReceiverC.nc">
      <component-ref qname="ReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10ccf94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10ccf9860"/>
        <function-ref name="source" scoped="" ref="0x10ccf99f0"/>
        <function-ref name="address" scoped="" ref="0x10ccf9b80"/>
        <function-ref name="destination" scoped="" ref="0x10ccf9d10"/>
        <function-ref name="setSource" scoped="" ref="0x10ccf0020"/>
        <function-ref name="setDestination" scoped="" ref="0x10ccf01b0"/>
        <function-ref name="type" scoped="" ref="0x10ccf0340"/>
        <function-ref name="setType" scoped="" ref="0x10ccf04d0"/>
        <function-ref name="isForMe" scoped="" ref="0x10ccf0660"/>
        <function-ref name="setGroup" scoped="" ref="0x10ccf07f0"/>
        <function-ref name="localGroup" scoped="" ref="0x10ccf0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10cd3f440" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10cd3f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10cd3f7c0"/>
        <function-ref name="stopDone" scoped="" ref="0x10cd3f950"/>
        <function-ref name="start" scoped="" ref="0x10cd3fae0"/>
        <function-ref name="stop" scoped="" ref="0x10cd3fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10cd3d4d0" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10cd3d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cd3d850"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd3d9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd3db70"/>
        <function-ref name="cancel" scoped="" ref="0x10cd3dd00"/>
        <function-ref name="sendDone" scoped="" ref="0x10cd3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10cd3b430" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10cd3b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd3b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10cd3ba40" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10cd3ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10cd3bdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10cd3a020"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd3a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd3a340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10cd3a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x10cd2acd0" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10cd2acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10cd302e0"/>
        <function-ref name="clear" scoped="" ref="0x10cd30a10"/>
        <function-ref name="isValid" scoped="" ref="0x10cd35b60"/>
        <function-ref name="set" scoped="" ref="0x10cd59170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10cd4c170" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10cd4c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10cd4c4f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10cd4c680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10cd4c810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10cd4c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10cd3c800" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10cd3c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd3cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10cd319f0" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd319f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10cd31d70"/>
        <function-ref name="noAck" scoped="" ref="0x10cd37020"/>
        <function-ref name="wasAcked" scoped="" ref="0x10cd371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10cd3a780" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10cd3a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10cd3ab00"/>
        <function-ref name="source" scoped="" ref="0x10cd3ac90"/>
        <function-ref name="address" scoped="" ref="0x10cd3ae20"/>
        <function-ref name="destination" scoped="" ref="0x10cd39020"/>
        <function-ref name="setSource" scoped="" ref="0x10cd391b0"/>
        <function-ref name="setDestination" scoped="" ref="0x10cd39340"/>
        <function-ref name="type" scoped="" ref="0x10cd394d0"/>
        <function-ref name="setType" scoped="" ref="0x10cd39660"/>
        <function-ref name="isForMe" scoped="" ref="0x10cd397f0"/>
        <function-ref name="setGroup" scoped="" ref="0x10cd39980"/>
        <function-ref name="localGroup" scoped="" ref="0x10cd39b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x10cd59dc0" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10cd59dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10cd573f0"/>
        <function-ref name="clear" scoped="" ref="0x10cd57b20"/>
        <function-ref name="isValid" scoped="" ref="0x10cd58ca0"/>
        <function-ref name="set" scoped="" ref="0x10cd552a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10cd73020" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10cd73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10cd733a0"/>
        <function-ref name="stopDone" scoped="" ref="0x10cd73530"/>
        <function-ref name="start" scoped="" ref="0x10cd736c0"/>
        <function-ref name="stop" scoped="" ref="0x10cd73850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10cd60020" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10cd60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10cd603a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10cd60530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10cd606c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10cd60850"/>
        <function-ref name="setCca" scoped="" ref="0x10cd609e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10cd60b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x10cd8a020" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x10cd8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x10cd8a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10cd6ea80" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10cd6ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10cd6ee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x10cd6d020"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd6d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd6d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10cd6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10cd72050" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10cd72050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cd723d0"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd72560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd726f0"/>
        <function-ref name="cancel" scoped="" ref="0x10cd72880"/>
        <function-ref name="sendDone" scoped="" ref="0x10cd72a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10cd70df0" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10cd70df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd6f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x10cd65c20" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10cd65c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10cd6c020"/>
        <function-ref name="setNetwork" scoped="" ref="0x10cd6c1b0"/>
        <function-ref name="getRssi" scoped="" ref="0x10cd6c340"/>
        <function-ref name="getNetwork" scoped="" ref="0x10cd6c4d0"/>
        <function-ref name="getPower" scoped="" ref="0x10cd6c660"/>
        <function-ref name="getLqi" scoped="" ref="0x10cd6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10cd60e70" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10cd60e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10cd8b220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10cd8b3b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10cd8b540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10cd8b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10cd70210" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10cd70210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd70590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10cd6cb20" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd6cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10cd6b020"/>
        <function-ref name="noAck" scoped="" ref="0x10cd6b1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10cd6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x10cd810d0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x10cd810d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x10cd81450"/>
        <function-ref name="setRetries" scoped="" ref="0x10cd815e0"/>
        <function-ref name="getRetries" scoped="" ref="0x10cd81770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x10cd81900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x10cd81a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10cd6f470" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10cd6f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10cd6f7f0"/>
        <function-ref name="source" scoped="" ref="0x10cd6f980"/>
        <function-ref name="address" scoped="" ref="0x10cd6fb10"/>
        <function-ref name="destination" scoped="" ref="0x10cd6fca0"/>
        <function-ref name="setSource" scoped="" ref="0x10cd6fe30"/>
        <function-ref name="setDestination" scoped="" ref="0x10cd6e020"/>
        <function-ref name="type" scoped="" ref="0x10cd6e1b0"/>
        <function-ref name="setType" scoped="" ref="0x10cd6e340"/>
        <function-ref name="isForMe" scoped="" ref="0x10cd6e4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x10cd6e660"/>
        <function-ref name="localGroup" scoped="" ref="0x10cd6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10cd61da0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10cd61da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10cd63180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10cd89d80" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10cd89d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10cd7c180"/>
        <function-ref name="stopDone" scoped="" ref="0x10cd7c310"/>
        <function-ref name="start" scoped="" ref="0x10cd7c4a0"/>
        <function-ref name="stop" scoped="" ref="0x10cd7c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10cd9b9d0" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10cd9b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10cd9bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x10cd9ab70" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x10cd9ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x10cd99020"/>
        <function-ref name="setRetries" scoped="" ref="0x10cd991b0"/>
        <function-ref name="getRetries" scoped="" ref="0x10cd99340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x10cd994d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x10cd99660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x10cd9c020" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10cd9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10cd9c3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10cd9c530"/>
        <function-ref name="getRssi" scoped="" ref="0x10cd9c6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10cd9c850"/>
        <function-ref name="getPower" scoped="" ref="0x10cd9c9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x10cd9cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x10cda7990" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x10cda7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cda7d10"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd9f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd9f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x10cd9f340"/>
        <function-ref name="sendDone" scoped="" ref="0x10cd9f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10cd9a080" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10cd9a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10cd9a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10cd9a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10cd9a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10cd9a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x10cd75500" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x10cd75500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd75880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10cd9b020" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10cd9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10cd9b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x10cd9b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x10cd9b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10cd7a210" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10cd7a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10cd7a590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10cd7a720"/>
        <function-ref name="request" scoped="" ref="0x10cd7a8b0"/>
        <function-ref name="granted" scoped="" ref="0x10cd7aa40"/>
        <function-ref name="isOwner" scoped="" ref="0x10cd7abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x10cd9e6f0" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x10cd9e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cd9ea70"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd9ec00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd9ed90"/>
        <function-ref name="cancel" scoped="" ref="0x10cd75020"/>
        <function-ref name="sendDone" scoped="" ref="0x10cd751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x10cd75bc0" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x10cd75bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10cda7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10cda71b0"/>
        <function-ref name="getPayload" scoped="" ref="0x10cda7340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cda74d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10cda7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x10cd9f840" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x10cd9f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd9fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10cd96390" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10cd96390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10cd96710"/>
        <function-ref name="stopDone" scoped="" ref="0x10cd968a0"/>
        <function-ref name="start" scoped="" ref="0x10cd96a30"/>
        <function-ref name="stop" scoped="" ref="0x10cd96bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10cd94330" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10cd94330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10cd946b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10cd94840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10cd949d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10cd94b60"/>
        <function-ref name="setCca" scoped="" ref="0x10cd94cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10cd94e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10cd96e80" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10cd96e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cd95220"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd953b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd95540"/>
        <function-ref name="cancel" scoped="" ref="0x10cd956d0"/>
        <function-ref name="sendDone" scoped="" ref="0x10cd95860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10cd95b40" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10cd95b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10cd94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10cd93e70" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10cd93e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10cd90220"/>
        <function-ref name="stopDone" scoped="" ref="0x10cd903b0"/>
        <function-ref name="start" scoped="" ref="0x10cd90540"/>
        <function-ref name="stop" scoped="" ref="0x10cd906d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10cd8f7e0" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10cd8f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10cd8fb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10cd8fcf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10cd8fe80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10cd8e030"/>
        <function-ref name="setCca" scoped="" ref="0x10cd8e1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10cd8e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x10cdb8060" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x10cdb8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10cdb83e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10cdb8570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10cdb8700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10cdb8890"/>
        <function-ref name="setCca" scoped="" ref="0x10cdb8a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10cdb8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10cdab330" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10cdab330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10cdab6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10cdab840"/>
        <function-ref name="getRssi" scoped="" ref="0x10cdab9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10cdabb60"/>
        <function-ref name="getPower" scoped="" ref="0x10cdabcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x10cdabe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x10cdaf2a0" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x10cdaf2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cdaf620"/>
        <function-ref name="cancel" scoped="" ref="0x10cdaf7b0"/>
        <function-ref name="modify" scoped="" ref="0x10cdaf940"/>
        <function-ref name="sendDone" scoped="" ref="0x10cdafad0"/>
        <function-ref name="resend" scoped="" ref="0x10cdafc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10cd90990" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10cd90990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10cd90d10"/>
        <function-ref name="getPayload" scoped="" ref="0x10cd8f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10cd8f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x10cd8f340"/>
        <function-ref name="sendDone" scoped="" ref="0x10cd8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x10cdac420" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10cdac420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10cdac7a0"/>
        <function-ref name="rand32" scoped="" ref="0x10cdac930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x10cdb6760" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x10cdb6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10cdb6ae0"/>
        <function-ref name="stop" scoped="" ref="0x10cdb6c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10cdd8920" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10cdd8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10cdd8ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x10cdd8e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x10cda9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x10cdbab50" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10cdbab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10cdc0020"/>
        <function-ref name="rfOff" scoped="" ref="0x10cdc01b0"/>
        <function-ref name="rxOn" scoped="" ref="0x10cdc0340"/>
        <function-ref name="startVReg" scoped="" ref="0x10cdc04d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x10cdc0660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10cdc07f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10cdc0980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10cdc0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10cdacbf0" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10cdacbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10cdad020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10cdad1b0"/>
        <function-ref name="led1On" scoped="" ref="0x10cdad340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10cdad4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10cdad660"/>
        <function-ref name="get" scoped="" ref="0x10cdad7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x10cdad980"/>
        <function-ref name="led2Off" scoped="" ref="0x10cdab020"/>
        <function-ref name="set" scoped="" ref="0x10cdadb10"/>
        <function-ref name="led0On" scoped="" ref="0x10cdadca0"/>
        <function-ref name="led2On" scoped="" ref="0x10cdade30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x10cd8e640" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10cd8e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10cd8e9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10cd8eb50"/>
        <function-ref name="request" scoped="" ref="0x10cd8ece0"/>
        <function-ref name="granted" scoped="" ref="0x10cd8ee70"/>
        <function-ref name="isOwner" scoped="" ref="0x10cdc1030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x10cddb110" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x10cddb110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10cddb590"/>
        <function-ref name="toIdle" scoped="" ref="0x10cddb720"/>
        <function-ref name="isState" scoped="" ref="0x10cddb8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x10cddba40"/>
        <function-ref name="requestState" scoped="" ref="0x10cddbbd0"/>
        <function-ref name="forceState" scoped="" ref="0x10cddbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x10cdceb70" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x10cdceb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10cdcd020"/>
        <function-ref name="runTask" scoped="" ref="0x10cdcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x10cdcfba0" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x10cdcfba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10cdce020"/>
        <function-ref name="runTask" scoped="" ref="0x10cdce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x10cdd0c20" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x10cdd0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10cdcf020"/>
        <function-ref name="runTask" scoped="" ref="0x10cdcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x10ce13dc0" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10ce13dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10ce1f180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10ce1f310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10ce1f4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x10ce1f630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10ce1f7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10ce1f950"/>
        <function-ref name="setChannel" scoped="" ref="0x10ce1fae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10ce1fc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10ce1fe00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10ce1e020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10ce1e1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10ce1e340"/>
        <function-ref name="sync" scoped="" ref="0x10ce1e4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x10ce1e760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10ce1e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x10ce100c0" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x10ce100c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce10cb0"/>
        <function-ref name="readDone" scoped="" ref="0x10ce45170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x10ce1ebf0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10ce1ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10ce12020"/>
        <function-ref name="rfOff" scoped="" ref="0x10ce121b0"/>
        <function-ref name="rxOn" scoped="" ref="0x10ce12340"/>
        <function-ref name="startVReg" scoped="" ref="0x10ce124d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x10ce12660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10ce127f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10ce12980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10ce12b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10ce23950" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10ce23950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ce23cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ce23e60"/>
        <function-ref name="request" scoped="" ref="0x10ce20020"/>
        <function-ref name="granted" scoped="" ref="0x10ce201b0"/>
        <function-ref name="isOwner" scoped="" ref="0x10ce20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x10ce3f970" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10ce3f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10ce3fcf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10ce3fe80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10ce3e030"/>
        <function-ref name="syncDone" scoped="" ref="0x10ce3e1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10ce3e350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10ce3e4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x10ce3e670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10ce3e800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10ce3e990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10ce3eb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10ce3ecb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10ce3ee40"/>
        <function-ref name="sync" scoped="" ref="0x10ce3d020"/>
        <function-ref name="getChannel" scoped="" ref="0x10ce3d2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10ce3d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x10ce4d8e0" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10ce4d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce4dc60"/>
        <function-ref name="write" scoped="" ref="0x10ce4ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x10ce38020" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10ce38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x10ce383a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x10ce30d90" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x10ce30d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10ce2f670"/>
        <function-ref name="fired" scoped="" ref="0x10ce365d0"/>
        <function-ref name="startAt" scoped="" ref="0x10ce2f020"/>
        <function-ref name="isRunning" scoped="" ref="0x10ce36a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x10ce2fb30"/>
        <function-ref name="start" scoped="" ref="0x10ce37bc0"/>
        <function-ref name="stop" scoped="" ref="0x10ce36110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x10ce515f0" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10ce515f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce51970"/>
        <function-ref name="write" scoped="" ref="0x10ce51b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x10ce2c380" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x10ce2c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ce2c700"/>
        <function-ref name="isInput" scoped="" ref="0x10ce2c890"/>
        <function-ref name="toggle" scoped="" ref="0x10ce2ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x10ce2cbb0"/>
        <function-ref name="get" scoped="" ref="0x10ce2cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ce2b020"/>
        <function-ref name="set" scoped="" ref="0x10ce2b1b0"/>
        <function-ref name="clr" scoped="" ref="0x10ce2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x10ce3cb40" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x10ce3cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce3b750"/>
        <function-ref name="readDone" scoped="" ref="0x10ce3bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x10ce71820" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x10ce71820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10ce71ba0"/>
        <function-ref name="runTask" scoped="" ref="0x10ce71d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x10ce4c1c0" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10ce4c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce4c540"/>
        <function-ref name="write" scoped="" ref="0x10ce4c6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x10ce4ca70" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10ce4ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce4cdf0"/>
        <function-ref name="write" scoped="" ref="0x10ce4b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x10ce563d0" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10ce563d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce56750"/>
        <function-ref name="write" scoped="" ref="0x10ce568e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x10ce57810" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10ce57810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x10ce57b90"/>
        <function-ref name="changed" scoped="" ref="0x10ce57d20"/>
        <function-ref name="amGroup" scoped="" ref="0x10ce5e020"/>
        <function-ref name="setAddress" scoped="" ref="0x10ce5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x10ce2d060" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x10ce2d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ce2d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x10ce2d570"/>
        <function-ref name="toggle" scoped="" ref="0x10ce2d700"/>
        <function-ref name="isOutput" scoped="" ref="0x10ce2d890"/>
        <function-ref name="get" scoped="" ref="0x10ce2da20"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ce2dbb0"/>
        <function-ref name="set" scoped="" ref="0x10ce2dd40"/>
        <function-ref name="clr" scoped="" ref="0x10ce2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x10ce4a120" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10ce4a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10ce4a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x10ce2b6a0" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x10ce2b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ce2ba20"/>
        <function-ref name="isInput" scoped="" ref="0x10ce2bbb0"/>
        <function-ref name="toggle" scoped="" ref="0x10ce2bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10ce60020"/>
        <function-ref name="get" scoped="" ref="0x10ce601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ce60340"/>
        <function-ref name="set" scoped="" ref="0x10ce604d0"/>
        <function-ref name="clr" scoped="" ref="0x10ce60660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10ce40510" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10ce40510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10ce40890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x10ce4d020" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10ce4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce4d3a0"/>
        <function-ref name="write" scoped="" ref="0x10ce4d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x10ce4aa40" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10ce4aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10ce4adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10ce491d0" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10ce491d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ce49550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ce496e0"/>
        <function-ref name="request" scoped="" ref="0x10ce49870"/>
        <function-ref name="granted" scoped="" ref="0x10ce49a00"/>
        <function-ref name="isOwner" scoped="" ref="0x10ce49b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x10ce47d90" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x10ce47d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ce46180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ce46310"/>
        <function-ref name="request" scoped="" ref="0x10ce464a0"/>
        <function-ref name="granted" scoped="" ref="0x10ce46630"/>
        <function-ref name="isOwner" scoped="" ref="0x10ce467c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x10ce3d740" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10ce3d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10ce3dac0"/>
        <function-ref name="rfOff" scoped="" ref="0x10ce3dc50"/>
        <function-ref name="rxOn" scoped="" ref="0x10ce3dde0"/>
        <function-ref name="startVReg" scoped="" ref="0x10ce3c020"/>
        <function-ref name="stopVReg" scoped="" ref="0x10ce3c1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10ce3c340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10ce3c4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10ce3c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x10ce56c80" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10ce56c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce510a0"/>
        <function-ref name="write" scoped="" ref="0x10ce51230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x10ce4fb00" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10ce4fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce4fe80"/>
        <function-ref name="write" scoped="" ref="0x10ce56030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x10ce482b0" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10ce482b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10ce48630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10ce46a80" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10ce46a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10ce46e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10ce7b020"/>
        <function-ref name="led1On" scoped="" ref="0x10ce7b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10ce7b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10ce7b4d0"/>
        <function-ref name="get" scoped="" ref="0x10ce7b660"/>
        <function-ref name="led1Off" scoped="" ref="0x10ce7b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x10ce7be30"/>
        <function-ref name="set" scoped="" ref="0x10ce7b980"/>
        <function-ref name="led0On" scoped="" ref="0x10ce7bb10"/>
        <function-ref name="led2On" scoped="" ref="0x10ce7bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x10ce73940" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x10ce73940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10ce73cc0"/>
        <function-ref name="runTask" scoped="" ref="0x10ce73e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10ce40b80" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10ce40b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ce3f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ce3f1b0"/>
        <function-ref name="request" scoped="" ref="0x10ce3f340"/>
        <function-ref name="granted" scoped="" ref="0x10ce3f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10ce3f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x10ce5a520" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10ce5a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce5a8a0"/>
        <function-ref name="write" scoped="" ref="0x10ce5aa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x10ce52a90" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10ce52a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ce5a020"/>
        <function-ref name="write" scoped="" ref="0x10ce5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x10ce5f0e0" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x10ce5f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ce5f460"/>
        <function-ref name="disable" scoped="" ref="0x10ce5f5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10ce5f780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10ce5f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x10ce47020" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x10ce47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ce473a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ce47530"/>
        <function-ref name="request" scoped="" ref="0x10ce476c0"/>
        <function-ref name="granted" scoped="" ref="0x10ce47850"/>
        <function-ref name="isOwner" scoped="" ref="0x10ce479e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x10ce489c0" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10ce489c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10ce48d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10ced87d0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10ced87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10ced8b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x10ced5220" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x10ced5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10ced3b30"/>
        <function-ref name="fired" scoped="" ref="0x10ced4a60"/>
        <function-ref name="startAt" scoped="" ref="0x10ced34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x10ced3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x10ced2020"/>
        <function-ref name="start" scoped="" ref="0x10ced4090"/>
        <function-ref name="stop" scoped="" ref="0x10ced45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10cecf490" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10cecf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cecf810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x10cecfd20" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x10cecfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10cfe3670"/>
        <function-ref name="fired" scoped="" ref="0x10cfe5550"/>
        <function-ref name="startAt" scoped="" ref="0x10cfe3020"/>
        <function-ref name="isRunning" scoped="" ref="0x10cfe5a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x10cfe3b30"/>
        <function-ref name="start" scoped="" ref="0x10cfe6b60"/>
        <function-ref name="stop" scoped="" ref="0x10cfe5090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e1178b0" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e1178b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e1140d0"/>
        <function-ref name="fired" scoped="" ref="0x10e1150d0"/>
        <function-ref name="startAt" scoped="" ref="0x10e115a50"/>
        <function-ref name="isRunning" scoped="" ref="0x10e115590"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e114590"/>
        <function-ref name="start" scoped="" ref="0x10e1166e0"/>
        <function-ref name="stop" scoped="" ref="0x10e116bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e117060" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e117060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e1173e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e110870" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e110870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e10c090"/>
        <function-ref name="fired" scoped="" ref="0x10e10d090"/>
        <function-ref name="startAt" scoped="" ref="0x10e10da10"/>
        <function-ref name="isRunning" scoped="" ref="0x10e10d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e10c550"/>
        <function-ref name="start" scoped="" ref="0x10e10e6a0"/>
        <function-ref name="stop" scoped="" ref="0x10e10ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e110020" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e110020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e1103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10e18b020" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10e18b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10e18b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10e18b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10e18b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10e18b850"/>
        <function-ref name="fired" scoped="" ref="0x10e18b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10e18e570" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e18e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e18e8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e18ea80"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e18ec10"/>
        <function-ref name="get" scoped="" ref="0x10e18eda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e18d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e18d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10e18d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e18d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10e18d660"/>
        <function-ref name="setMode" scoped="" ref="0x10e18d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e18d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10e18dc10" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e18dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10e18c020"/>
        <function-ref name="getControl" scoped="" ref="0x10e18c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e18c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10e18c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10e18c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e18c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10e18c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10e18cb10"/>
        <function-ref name="setControl" scoped="" ref="0x10e18cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10cf1dba0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10cf1dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10cf1c020"/>
        <function-ref name="setEvent" scoped="" ref="0x10cf1c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10cf1c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10cf1c4d0"/>
        <function-ref name="fired" scoped="" ref="0x10cf1c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10cf214d0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10cf214d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10cf21850"/>
        <function-ref name="setClockSource" scoped="" ref="0x10cf219e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10cf21b70"/>
        <function-ref name="get" scoped="" ref="0x10cf21d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x10cf20020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cf201b0"/>
        <function-ref name="getMode" scoped="" ref="0x10cf20340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cf204d0"/>
        <function-ref name="overflow" scoped="" ref="0x10cf20660"/>
        <function-ref name="setMode" scoped="" ref="0x10cf207f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10cf20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10cf1e280" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10cf1e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10cf1e600"/>
        <function-ref name="getControl" scoped="" ref="0x10cf1e790"/>
        <function-ref name="enableEvents" scoped="" ref="0x10cf1e920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10cf1eab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10cf1ec40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10cf1edd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10cf1d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10cf1d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x10cf1d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x10e182da0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10e182da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10e181180"/>
        <function-ref name="setEvent" scoped="" ref="0x10e181310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10e1814a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10e181630"/>
        <function-ref name="fired" scoped="" ref="0x10e1817c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10e1844c0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e1844c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e184840"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e1849d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e184b60"/>
        <function-ref name="get" scoped="" ref="0x10e184cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e184e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e183030"/>
        <function-ref name="getMode" scoped="" ref="0x10e1831c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e183350"/>
        <function-ref name="overflow" scoped="" ref="0x10e1834e0"/>
        <function-ref name="setMode" scoped="" ref="0x10e183670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e183800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e188340" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e188340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e186ba0"/>
        <function-ref name="fired" scoped="" ref="0x10e187b80"/>
        <function-ref name="startAt" scoped="" ref="0x10e186550"/>
        <function-ref name="isRunning" scoped="" ref="0x10e186090"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e184090"/>
        <function-ref name="start" scoped="" ref="0x10e1871b0"/>
        <function-ref name="stop" scoped="" ref="0x10e1876c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e189a30" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e189a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e189db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10e183a90" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e183a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10e183e10"/>
        <function-ref name="getControl" scoped="" ref="0x10e182020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e1821b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10e182340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10e1824d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e182660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10e1827f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10e182980"/>
        <function-ref name="setControl" scoped="" ref="0x10e182b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10cf43020" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10cf43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10cf43e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cf42800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cf42340"/>
        <function-ref name="overflow" scoped="" ref="0x10cf42cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x10cf74020" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10cf74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10cf74e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cf72800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cf72340"/>
        <function-ref name="overflow" scoped="" ref="0x10cf72cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10cf602c0" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10cf602c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10cf60640"/>
        <function-ref name="setClockSource" scoped="" ref="0x10cf607d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10cf60960"/>
        <function-ref name="get" scoped="" ref="0x10cf60af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10cf60c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cf60e10"/>
        <function-ref name="getMode" scoped="" ref="0x10cf5f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cf5f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x10cf5f340"/>
        <function-ref name="setMode" scoped="" ref="0x10cf5f4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10cf5f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10cf6f0a0" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10cf6f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10cf62020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cf629a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cf624e0"/>
        <function-ref name="overflow" scoped="" ref="0x10cf62e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10cfb2540" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10cfb2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10cfb13d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cfb1d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cfb1890"/>
        <function-ref name="overflow" scoped="" ref="0x10cfaf260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10cfb50f0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10cfb50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10cfb3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cfb39a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cfb34e0"/>
        <function-ref name="overflow" scoped="" ref="0x10cfb3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e10aa90" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e10aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e1062e0"/>
        <function-ref name="fired" scoped="" ref="0x10e1082e0"/>
        <function-ref name="startAt" scoped="" ref="0x10e108c60"/>
        <function-ref name="isRunning" scoped="" ref="0x10e1087a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e1067a0"/>
        <function-ref name="start" scoped="" ref="0x10e1098d0"/>
        <function-ref name="stop" scoped="" ref="0x10e109de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10e103210" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10e103210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e100b30"/>
        <function-ref name="fired" scoped="" ref="0x10e102a60"/>
        <function-ref name="startAt" scoped="" ref="0x10e1004e0"/>
        <function-ref name="isRunning" scoped="" ref="0x10e100020"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e0ff020"/>
        <function-ref name="start" scoped="" ref="0x10e102090"/>
        <function-ref name="stop" scoped="" ref="0x10e1025a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10e106e10" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10e106e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e105ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e104670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e1041b0"/>
        <function-ref name="overflow" scoped="" ref="0x10e104b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x10cfdd380" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x10cfdd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfdd700"/>
        <function-ref name="isInput" scoped="" ref="0x10cfdd890"/>
        <function-ref name="toggle" scoped="" ref="0x10cfdda20"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfddbb0"/>
        <function-ref name="get" scoped="" ref="0x10cfddd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfdc020"/>
        <function-ref name="set" scoped="" ref="0x10cfdc1b0"/>
        <function-ref name="clr" scoped="" ref="0x10cfdc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x10cfdc6b0" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x10cfdc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfdca30"/>
        <function-ref name="isInput" scoped="" ref="0x10cfdcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10cfdcd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfdb020"/>
        <function-ref name="get" scoped="" ref="0x10cfdb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfdb340"/>
        <function-ref name="set" scoped="" ref="0x10cfdb4d0"/>
        <function-ref name="clr" scoped="" ref="0x10cfdb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x10cfdb9c0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x10cfdb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfdbd40"/>
        <function-ref name="isInput" scoped="" ref="0x10cfda020"/>
        <function-ref name="toggle" scoped="" ref="0x10cfda1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfda340"/>
        <function-ref name="get" scoped="" ref="0x10cfda4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfda660"/>
        <function-ref name="set" scoped="" ref="0x10cfda7f0"/>
        <function-ref name="clr" scoped="" ref="0x10cfda980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x10cfde060" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x10cfde060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfde3e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cfde570"/>
        <function-ref name="toggle" scoped="" ref="0x10cfde700"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfde890"/>
        <function-ref name="get" scoped="" ref="0x10cfdea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfdebb0"/>
        <function-ref name="set" scoped="" ref="0x10cfded40"/>
        <function-ref name="clr" scoped="" ref="0x10cfdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x10cfd8020" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x10cfd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfd83a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cfd8530"/>
        <function-ref name="toggle" scoped="" ref="0x10cfd86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfd8850"/>
        <function-ref name="get" scoped="" ref="0x10cfd89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfd8b70"/>
        <function-ref name="set" scoped="" ref="0x10cfd8d00"/>
        <function-ref name="clr" scoped="" ref="0x10cfd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x10ced6e30" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x10ced6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfdf1e0"/>
        <function-ref name="isInput" scoped="" ref="0x10cfdf370"/>
        <function-ref name="toggle" scoped="" ref="0x10cfdf500"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfdf690"/>
        <function-ref name="get" scoped="" ref="0x10cfdf820"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfdf9b0"/>
        <function-ref name="set" scoped="" ref="0x10cfdfb40"/>
        <function-ref name="clr" scoped="" ref="0x10cfdfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x10cfdacd0" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x10cfdacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfd90a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cfd9230"/>
        <function-ref name="toggle" scoped="" ref="0x10cfd93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfd9550"/>
        <function-ref name="get" scoped="" ref="0x10cfd96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfd9870"/>
        <function-ref name="set" scoped="" ref="0x10cfd9a00"/>
        <function-ref name="clr" scoped="" ref="0x10cfd9b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10cfd5610" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10cfd5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfd5990"/>
        <function-ref name="isInput" scoped="" ref="0x10cfd5b20"/>
        <function-ref name="setResistor" scoped="" ref="0x10cfd5cb0"/>
        <function-ref name="toggle" scoped="" ref="0x10cfd5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d010020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d0101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d010340"/>
        <function-ref name="get" scoped="" ref="0x10d0104d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d010660"/>
        <function-ref name="getRaw" scoped="" ref="0x10d0107f0"/>
        <function-ref name="set" scoped="" ref="0x10d010980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d010b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d010ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d00f020"/>
        <function-ref name="clr" scoped="" ref="0x10d00f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10cfd6440" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10cfd6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cfd67c0"/>
        <function-ref name="isInput" scoped="" ref="0x10cfd6950"/>
        <function-ref name="toggle" scoped="" ref="0x10cfd6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cfd6c70"/>
        <function-ref name="get" scoped="" ref="0x10cfd6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cfd5020"/>
        <function-ref name="set" scoped="" ref="0x10cfd51b0"/>
        <function-ref name="clr" scoped="" ref="0x10cfd5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10d00b2f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10d00b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d00b670"/>
        <function-ref name="isInput" scoped="" ref="0x10d00b800"/>
        <function-ref name="setResistor" scoped="" ref="0x10d00b990"/>
        <function-ref name="toggle" scoped="" ref="0x10d00bb20"/>
        <function-ref name="isOutput" scoped="" ref="0x10d00bcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d00be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d00a020"/>
        <function-ref name="get" scoped="" ref="0x10d00a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d00a340"/>
        <function-ref name="getRaw" scoped="" ref="0x10d00a4d0"/>
        <function-ref name="set" scoped="" ref="0x10d00a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d00a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d00a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d00ac10"/>
        <function-ref name="clr" scoped="" ref="0x10d00ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10d00d020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d00d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d00d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10d00d530"/>
        <function-ref name="toggle" scoped="" ref="0x10d00d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d00d850"/>
        <function-ref name="get" scoped="" ref="0x10d00d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d00db70"/>
        <function-ref name="set" scoped="" ref="0x10d00dd00"/>
        <function-ref name="clr" scoped="" ref="0x10d00b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10d007de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10d007de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d006180"/>
        <function-ref name="isInput" scoped="" ref="0x10d006310"/>
        <function-ref name="setResistor" scoped="" ref="0x10d0064a0"/>
        <function-ref name="toggle" scoped="" ref="0x10d006630"/>
        <function-ref name="isOutput" scoped="" ref="0x10d0067c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d006950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d006ae0"/>
        <function-ref name="get" scoped="" ref="0x10d006c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d006e00"/>
        <function-ref name="getRaw" scoped="" ref="0x10d005020"/>
        <function-ref name="set" scoped="" ref="0x10d0051b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d005340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d0054d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d005760"/>
        <function-ref name="clr" scoped="" ref="0x10d0058f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10d008b70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d008b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d007020"/>
        <function-ref name="isInput" scoped="" ref="0x10d0071b0"/>
        <function-ref name="toggle" scoped="" ref="0x10d007340"/>
        <function-ref name="isOutput" scoped="" ref="0x10d0074d0"/>
        <function-ref name="get" scoped="" ref="0x10d007660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d0077f0"/>
        <function-ref name="set" scoped="" ref="0x10d007980"/>
        <function-ref name="clr" scoped="" ref="0x10d007b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10d002930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10d002930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d002cb0"/>
        <function-ref name="isInput" scoped="" ref="0x10d002e40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d001020"/>
        <function-ref name="toggle" scoped="" ref="0x10d0011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d001340"/>
        <function-ref name="getResistor" scoped="" ref="0x10d0014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d001660"/>
        <function-ref name="get" scoped="" ref="0x10d0017f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d001980"/>
        <function-ref name="getRaw" scoped="" ref="0x10d001b10"/>
        <function-ref name="set" scoped="" ref="0x10d001ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d001e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d000020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d0002b0"/>
        <function-ref name="clr" scoped="" ref="0x10d000440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10d003710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d003710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d003a90"/>
        <function-ref name="isInput" scoped="" ref="0x10d003c20"/>
        <function-ref name="toggle" scoped="" ref="0x10d003db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d002020"/>
        <function-ref name="get" scoped="" ref="0x10d0021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d002340"/>
        <function-ref name="set" scoped="" ref="0x10d0024d0"/>
        <function-ref name="clr" scoped="" ref="0x10d002660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10cffd480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10cffd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cffd800"/>
        <function-ref name="isInput" scoped="" ref="0x10cffd990"/>
        <function-ref name="setResistor" scoped="" ref="0x10cffdb20"/>
        <function-ref name="toggle" scoped="" ref="0x10cffdcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cffde40"/>
        <function-ref name="getResistor" scoped="" ref="0x10cffc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cffc1b0"/>
        <function-ref name="get" scoped="" ref="0x10cffc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cffc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cffc660"/>
        <function-ref name="set" scoped="" ref="0x10cffc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cffc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cffcb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cffcda0"/>
        <function-ref name="clr" scoped="" ref="0x10cffb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10cffe1d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10cffe1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cffe550"/>
        <function-ref name="isInput" scoped="" ref="0x10cffe6e0"/>
        <function-ref name="toggle" scoped="" ref="0x10cffe870"/>
        <function-ref name="isOutput" scoped="" ref="0x10cffea00"/>
        <function-ref name="get" scoped="" ref="0x10cffeb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cffed20"/>
        <function-ref name="set" scoped="" ref="0x10cffd020"/>
        <function-ref name="clr" scoped="" ref="0x10cffd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10cff8020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10cff8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cff83a0"/>
        <function-ref name="isInput" scoped="" ref="0x10cff8530"/>
        <function-ref name="setResistor" scoped="" ref="0x10cff86c0"/>
        <function-ref name="toggle" scoped="" ref="0x10cff8850"/>
        <function-ref name="isOutput" scoped="" ref="0x10cff89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10cff8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cff8d00"/>
        <function-ref name="get" scoped="" ref="0x10cff6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10cff61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10cff6340"/>
        <function-ref name="set" scoped="" ref="0x10cff64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10cff6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10cff67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10cff6a80"/>
        <function-ref name="clr" scoped="" ref="0x10cff6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10cffad60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10cffad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cff9180"/>
        <function-ref name="isInput" scoped="" ref="0x10cff9310"/>
        <function-ref name="toggle" scoped="" ref="0x10cff94a0"/>
        <function-ref name="isOutput" scoped="" ref="0x10cff9630"/>
        <function-ref name="get" scoped="" ref="0x10cff97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cff9950"/>
        <function-ref name="set" scoped="" ref="0x10cff9ae0"/>
        <function-ref name="clr" scoped="" ref="0x10cff9c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10cff3de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10cff3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d02f180"/>
        <function-ref name="isInput" scoped="" ref="0x10d02f310"/>
        <function-ref name="setResistor" scoped="" ref="0x10d02f4a0"/>
        <function-ref name="toggle" scoped="" ref="0x10d02f630"/>
        <function-ref name="isOutput" scoped="" ref="0x10d02f7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d02f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d02fae0"/>
        <function-ref name="get" scoped="" ref="0x10d02fc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d02fe00"/>
        <function-ref name="getRaw" scoped="" ref="0x10d02e020"/>
        <function-ref name="set" scoped="" ref="0x10d02e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d02e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d02e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d02e760"/>
        <function-ref name="clr" scoped="" ref="0x10d02e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10cff4b70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10cff4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10cff3020"/>
        <function-ref name="isInput" scoped="" ref="0x10cff31b0"/>
        <function-ref name="toggle" scoped="" ref="0x10cff3340"/>
        <function-ref name="isOutput" scoped="" ref="0x10cff34d0"/>
        <function-ref name="get" scoped="" ref="0x10cff3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10cff37f0"/>
        <function-ref name="set" scoped="" ref="0x10cff3980"/>
        <function-ref name="clr" scoped="" ref="0x10cff3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x10d01b150" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x10d01b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x10d01b4d0"/>
        <function-ref name="disable" scoped="" ref="0x10d01b660"/>
        <function-ref name="captured" scoped="" ref="0x10d01b7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x10d01b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x10d01bd60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x10d01bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d01a180"/>
        <function-ref name="disable" scoped="" ref="0x10d01a310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10d01a4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10d01a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x10d01aa20" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x10d01aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d01ada0"/>
        <function-ref name="disable" scoped="" ref="0x10d017020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10d0171b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10d017340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x10d0418f0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x10d0418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d041c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d041e00"/>
        <function-ref name="captured" scoped="" ref="0x10d040020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d0401b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d040340"/>
        <function-ref name="setEdge" scoped="" ref="0x10d0404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10d013a20" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10d013a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x10d013da0"/>
        <function-ref name="disable" scoped="" ref="0x10d042020"/>
        <function-ref name="captured" scoped="" ref="0x10d0421b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x10d042340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10d0425d0" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10d0425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10d042950"/>
        <function-ref name="getControl" scoped="" ref="0x10d042ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d042c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10d042e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10d041020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d0411b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10d041340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10d0414d0"/>
        <function-ref name="setControl" scoped="" ref="0x10d041660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x10d0407a0" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d0407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d040b20"/>
        <function-ref name="isInput" scoped="" ref="0x10d040cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d040e40"/>
        <function-ref name="toggle" scoped="" ref="0x10d03f020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d03f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d03f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d03f4d0"/>
        <function-ref name="get" scoped="" ref="0x10d03f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d03f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d03f980"/>
        <function-ref name="set" scoped="" ref="0x10d03fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d03fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d03fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d03e120"/>
        <function-ref name="clr" scoped="" ref="0x10d03e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10d06f8a0" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10d06f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d06fc20"/>
        <function-ref name="fired" scoped="" ref="0x10d06fdb0"/>
        <function-ref name="disable" scoped="" ref="0x10d06e020"/>
        <function-ref name="edge" scoped="" ref="0x10d06e1b0"/>
        <function-ref name="enable" scoped="" ref="0x10d06e340"/>
        <function-ref name="getValue" scoped="" ref="0x10d06e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10d064a30" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10d064a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d064db0"/>
        <function-ref name="fired" scoped="" ref="0x10d063020"/>
        <function-ref name="disable" scoped="" ref="0x10d0631b0"/>
        <function-ref name="edge" scoped="" ref="0x10d063340"/>
        <function-ref name="enable" scoped="" ref="0x10d0634d0"/>
        <function-ref name="getValue" scoped="" ref="0x10d063660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10d06c8a0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10d06c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d06cc20"/>
        <function-ref name="fired" scoped="" ref="0x10d06cdb0"/>
        <function-ref name="disable" scoped="" ref="0x10d06b020"/>
        <function-ref name="edge" scoped="" ref="0x10d06b1b0"/>
        <function-ref name="enable" scoped="" ref="0x10d06b340"/>
        <function-ref name="getValue" scoped="" ref="0x10d06b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10d06a8a0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10d06a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d06ac20"/>
        <function-ref name="fired" scoped="" ref="0x10d06adb0"/>
        <function-ref name="disable" scoped="" ref="0x10d069020"/>
        <function-ref name="edge" scoped="" ref="0x10d0691b0"/>
        <function-ref name="enable" scoped="" ref="0x10d069340"/>
        <function-ref name="getValue" scoped="" ref="0x10d0694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10d0378a0" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10d0378a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d037c20"/>
        <function-ref name="fired" scoped="" ref="0x10d037db0"/>
        <function-ref name="disable" scoped="" ref="0x10d032020"/>
        <function-ref name="edge" scoped="" ref="0x10d0321b0"/>
        <function-ref name="enable" scoped="" ref="0x10d032340"/>
        <function-ref name="getValue" scoped="" ref="0x10d0324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10d0668a0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10d0668a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d066d20"/>
        <function-ref name="fired" scoped="" ref="0x10d065020"/>
        <function-ref name="disable" scoped="" ref="0x10d0651b0"/>
        <function-ref name="edge" scoped="" ref="0x10d065340"/>
        <function-ref name="enable" scoped="" ref="0x10d0654d0"/>
        <function-ref name="getValue" scoped="" ref="0x10d065660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10d06e8a0" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10d06e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d06ec20"/>
        <function-ref name="fired" scoped="" ref="0x10d06edb0"/>
        <function-ref name="disable" scoped="" ref="0x10d06d020"/>
        <function-ref name="edge" scoped="" ref="0x10d06d1b0"/>
        <function-ref name="enable" scoped="" ref="0x10d06d340"/>
        <function-ref name="getValue" scoped="" ref="0x10d06d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10d063a30" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10d063a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d063db0"/>
        <function-ref name="fired" scoped="" ref="0x10d062020"/>
        <function-ref name="disable" scoped="" ref="0x10d0621b0"/>
        <function-ref name="edge" scoped="" ref="0x10d062340"/>
        <function-ref name="enable" scoped="" ref="0x10d0624d0"/>
        <function-ref name="getValue" scoped="" ref="0x10d062660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10d0338f0" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10d0338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d033c70"/>
        <function-ref name="fired" scoped="" ref="0x10d033e00"/>
        <function-ref name="disable" scoped="" ref="0x10d038020"/>
        <function-ref name="edge" scoped="" ref="0x10d0381b0"/>
        <function-ref name="enable" scoped="" ref="0x10d038340"/>
        <function-ref name="getValue" scoped="" ref="0x10d0384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10d0698a0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10d0698a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d069c20"/>
        <function-ref name="fired" scoped="" ref="0x10d069db0"/>
        <function-ref name="disable" scoped="" ref="0x10d068020"/>
        <function-ref name="edge" scoped="" ref="0x10d0681b0"/>
        <function-ref name="enable" scoped="" ref="0x10d068340"/>
        <function-ref name="getValue" scoped="" ref="0x10d0684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10d0328a0" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10d0328a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d032c20"/>
        <function-ref name="fired" scoped="" ref="0x10d032db0"/>
        <function-ref name="disable" scoped="" ref="0x10d06f020"/>
        <function-ref name="edge" scoped="" ref="0x10d06f1b0"/>
        <function-ref name="enable" scoped="" ref="0x10d06f340"/>
        <function-ref name="getValue" scoped="" ref="0x10d06f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10d065a30" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10d065a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d065db0"/>
        <function-ref name="fired" scoped="" ref="0x10d064020"/>
        <function-ref name="disable" scoped="" ref="0x10d0641b0"/>
        <function-ref name="edge" scoped="" ref="0x10d064340"/>
        <function-ref name="enable" scoped="" ref="0x10d0644d0"/>
        <function-ref name="getValue" scoped="" ref="0x10d064660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10d06d8a0" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10d06d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d06dc20"/>
        <function-ref name="fired" scoped="" ref="0x10d06ddb0"/>
        <function-ref name="disable" scoped="" ref="0x10d06c020"/>
        <function-ref name="edge" scoped="" ref="0x10d06c1b0"/>
        <function-ref name="enable" scoped="" ref="0x10d06c340"/>
        <function-ref name="getValue" scoped="" ref="0x10d06c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10d06b8a0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10d06b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d06bc20"/>
        <function-ref name="fired" scoped="" ref="0x10d06bdb0"/>
        <function-ref name="disable" scoped="" ref="0x10d06a020"/>
        <function-ref name="edge" scoped="" ref="0x10d06a1b0"/>
        <function-ref name="enable" scoped="" ref="0x10d06a340"/>
        <function-ref name="getValue" scoped="" ref="0x10d06a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10d0388a0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10d0388a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d038c20"/>
        <function-ref name="fired" scoped="" ref="0x10d038db0"/>
        <function-ref name="disable" scoped="" ref="0x10d037020"/>
        <function-ref name="edge" scoped="" ref="0x10d0371b0"/>
        <function-ref name="enable" scoped="" ref="0x10d037340"/>
        <function-ref name="getValue" scoped="" ref="0x10d0374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10d0688a0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10d0688a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d068c20"/>
        <function-ref name="fired" scoped="" ref="0x10d068db0"/>
        <function-ref name="disable" scoped="" ref="0x10d066020"/>
        <function-ref name="edge" scoped="" ref="0x10d0661b0"/>
        <function-ref name="enable" scoped="" ref="0x10d066340"/>
        <function-ref name="getValue" scoped="" ref="0x10d0664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10d05a020" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10d05a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d05a3a0"/>
        <function-ref name="fired" scoped="" ref="0x10d05a530"/>
        <function-ref name="disable" scoped="" ref="0x10d05a6c0"/>
        <function-ref name="edge" scoped="" ref="0x10d05a850"/>
        <function-ref name="enable" scoped="" ref="0x10d05a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d05ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10d08e020" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10d08e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d08e3a0"/>
        <function-ref name="fired" scoped="" ref="0x10d08e530"/>
        <function-ref name="disable" scoped="" ref="0x10d08e6c0"/>
        <function-ref name="edge" scoped="" ref="0x10d08e850"/>
        <function-ref name="enable" scoped="" ref="0x10d08e9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d08eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10d057020" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10d057020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0573a0"/>
        <function-ref name="fired" scoped="" ref="0x10d057530"/>
        <function-ref name="disable" scoped="" ref="0x10d0576c0"/>
        <function-ref name="edge" scoped="" ref="0x10d057850"/>
        <function-ref name="enable" scoped="" ref="0x10d0579e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d057b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10d055020" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10d055020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0553a0"/>
        <function-ref name="fired" scoped="" ref="0x10d055530"/>
        <function-ref name="disable" scoped="" ref="0x10d0556c0"/>
        <function-ref name="edge" scoped="" ref="0x10d055850"/>
        <function-ref name="enable" scoped="" ref="0x10d0559e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d055b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10d05c020" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10d05c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d05c3a0"/>
        <function-ref name="fired" scoped="" ref="0x10d05c530"/>
        <function-ref name="disable" scoped="" ref="0x10d05c6c0"/>
        <function-ref name="edge" scoped="" ref="0x10d05c850"/>
        <function-ref name="enable" scoped="" ref="0x10d05c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d05cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10d052020" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10d052020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0524a0"/>
        <function-ref name="fired" scoped="" ref="0x10d052630"/>
        <function-ref name="disable" scoped="" ref="0x10d0527c0"/>
        <function-ref name="edge" scoped="" ref="0x10d052950"/>
        <function-ref name="enable" scoped="" ref="0x10d052ae0"/>
        <function-ref name="getValue" scoped="" ref="0x10d052c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10d059020" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10d059020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0593a0"/>
        <function-ref name="fired" scoped="" ref="0x10d059530"/>
        <function-ref name="disable" scoped="" ref="0x10d0596c0"/>
        <function-ref name="edge" scoped="" ref="0x10d059850"/>
        <function-ref name="enable" scoped="" ref="0x10d0599e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d059b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10d08d020" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10d08d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d08d3a0"/>
        <function-ref name="fired" scoped="" ref="0x10d08d530"/>
        <function-ref name="disable" scoped="" ref="0x10d08d6c0"/>
        <function-ref name="edge" scoped="" ref="0x10d08d850"/>
        <function-ref name="enable" scoped="" ref="0x10d08d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d08db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10d05e060" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10d05e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d05e3e0"/>
        <function-ref name="fired" scoped="" ref="0x10d05e570"/>
        <function-ref name="disable" scoped="" ref="0x10d05e700"/>
        <function-ref name="edge" scoped="" ref="0x10d05e890"/>
        <function-ref name="enable" scoped="" ref="0x10d05ea20"/>
        <function-ref name="getValue" scoped="" ref="0x10d05ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10d054020" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10d054020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0543a0"/>
        <function-ref name="fired" scoped="" ref="0x10d054530"/>
        <function-ref name="disable" scoped="" ref="0x10d0546c0"/>
        <function-ref name="edge" scoped="" ref="0x10d054850"/>
        <function-ref name="enable" scoped="" ref="0x10d0549e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d054b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10d05b020" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10d05b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d05b3a0"/>
        <function-ref name="fired" scoped="" ref="0x10d05b530"/>
        <function-ref name="disable" scoped="" ref="0x10d05b6c0"/>
        <function-ref name="edge" scoped="" ref="0x10d05b850"/>
        <function-ref name="enable" scoped="" ref="0x10d05b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d05bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10d051060" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10d051060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0513e0"/>
        <function-ref name="fired" scoped="" ref="0x10d051570"/>
        <function-ref name="disable" scoped="" ref="0x10d051700"/>
        <function-ref name="edge" scoped="" ref="0x10d051890"/>
        <function-ref name="enable" scoped="" ref="0x10d051a20"/>
        <function-ref name="getValue" scoped="" ref="0x10d051bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10d058020" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10d058020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0583a0"/>
        <function-ref name="fired" scoped="" ref="0x10d058530"/>
        <function-ref name="disable" scoped="" ref="0x10d0586c0"/>
        <function-ref name="edge" scoped="" ref="0x10d058850"/>
        <function-ref name="enable" scoped="" ref="0x10d0589e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d058b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10d056020" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10d056020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0563a0"/>
        <function-ref name="fired" scoped="" ref="0x10d056530"/>
        <function-ref name="disable" scoped="" ref="0x10d0566c0"/>
        <function-ref name="edge" scoped="" ref="0x10d056850"/>
        <function-ref name="enable" scoped="" ref="0x10d0569e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d056b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10d05d020" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10d05d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d05d3a0"/>
        <function-ref name="fired" scoped="" ref="0x10d05d530"/>
        <function-ref name="disable" scoped="" ref="0x10d05d6c0"/>
        <function-ref name="edge" scoped="" ref="0x10d05d850"/>
        <function-ref name="enable" scoped="" ref="0x10d05d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d05db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10d053020" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10d053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0533a0"/>
        <function-ref name="fired" scoped="" ref="0x10d053530"/>
        <function-ref name="disable" scoped="" ref="0x10d0536c0"/>
        <function-ref name="edge" scoped="" ref="0x10d053850"/>
        <function-ref name="enable" scoped="" ref="0x10d0539e0"/>
        <function-ref name="getValue" scoped="" ref="0x10d053b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x10d13cb20" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x10d13cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d171020"/>
        <function-ref name="fired" scoped="" ref="0x10d1711b0"/>
        <function-ref name="disable" scoped="" ref="0x10d171340"/>
        <function-ref name="edge" scoped="" ref="0x10d1714d0"/>
        <function-ref name="enable" scoped="" ref="0x10d171660"/>
        <function-ref name="getValue" scoped="" ref="0x10d1717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x10d13c020" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x10d13c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d13c3a0"/>
        <function-ref name="disable" scoped="" ref="0x10d13c530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10d13c6c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10d13c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x10d16fc00" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x10d16fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d16e020"/>
        <function-ref name="fired" scoped="" ref="0x10d16e1b0"/>
        <function-ref name="disable" scoped="" ref="0x10d16e340"/>
        <function-ref name="edge" scoped="" ref="0x10d16e4d0"/>
        <function-ref name="enable" scoped="" ref="0x10d16e660"/>
        <function-ref name="getValue" scoped="" ref="0x10d16e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x10d16f100" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x10d16f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d16f480"/>
        <function-ref name="disable" scoped="" ref="0x10d16f610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10d16f7a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10d16f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x10d592e50" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10d592e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d591410"/>
        <function-ref name="write" scoped="" ref="0x10d5915a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10d59c160" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10d59c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d59c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x10d596e50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10d596e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d595210"/>
        <function-ref name="write" scoped="" ref="0x10d5953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10d590880" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10d590880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d590c00"/>
        <function-ref name="write" scoped="" ref="0x10d590d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x10d5880a0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x10d5880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d588420"/>
        <function-ref name="write" scoped="" ref="0x10d5885b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10d58f0a0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10d58f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58f420"/>
        <function-ref name="write" scoped="" ref="0x10d58f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10d5d1500" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10d5d1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d1880"/>
        <function-ref name="write" scoped="" ref="0x10d5d1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10d5d3500" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10d5d3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d3880"/>
        <function-ref name="write" scoped="" ref="0x10d5d3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x10d59b490" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10d59b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d59b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x10d5d9880" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x10d5d9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d9c00"/>
        <function-ref name="write" scoped="" ref="0x10d5d9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x10d5d4500" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d5d4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d4880"/>
        <function-ref name="write" scoped="" ref="0x10d5d4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x10d595e50" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10d595e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d593210"/>
        <function-ref name="write" scoped="" ref="0x10d5933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x10d593e50" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10d593e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d592210"/>
        <function-ref name="write" scoped="" ref="0x10d5923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x10d58a880" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x10d58a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58ac00"/>
        <function-ref name="write" scoped="" ref="0x10d58ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10d58b0a0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10d58b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58b420"/>
        <function-ref name="write" scoped="" ref="0x10d58b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10d58f880" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10d58f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58fc00"/>
        <function-ref name="write" scoped="" ref="0x10d58fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10d59ea90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d59ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d59ee10"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d59d020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d59d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x10d599e00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10d599e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5981c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x10d598490" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x10d598490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d598910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x10d5d8c80" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d5d8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d70a0"/>
        <function-ref name="write" scoped="" ref="0x10d5d7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x10d598be0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x10d598be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d597020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x10d5d4ce0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d5d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d30a0"/>
        <function-ref name="write" scoped="" ref="0x10d5d3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x10d599160" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10d599160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5994e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x10d5d90a0" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x10d5d90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d9420"/>
        <function-ref name="write" scoped="" ref="0x10d5d95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x10d593670" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x10d593670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5939f0"/>
        <function-ref name="write" scoped="" ref="0x10d593b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x10d595670" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10d595670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5959f0"/>
        <function-ref name="write" scoped="" ref="0x10d595b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10d59dad0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10d59dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d59de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x10d5da0a0" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x10d5da0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5da420"/>
        <function-ref name="write" scoped="" ref="0x10d5da5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x10d588880" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x10d588880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d588c00"/>
        <function-ref name="write" scoped="" ref="0x10d588d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x10d5da880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x10d5da880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5dac00"/>
        <function-ref name="write" scoped="" ref="0x10d5dad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10d5d2ce0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10d5d2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d10a0"/>
        <function-ref name="write" scoped="" ref="0x10d5d1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10d5d3ce0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10d5d3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d20a0"/>
        <function-ref name="write" scoped="" ref="0x10d5d2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x10d58b880" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x10d58b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58bc00"/>
        <function-ref name="write" scoped="" ref="0x10d58bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x10d5870a0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x10d5870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d587420"/>
        <function-ref name="write" scoped="" ref="0x10d5875b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x10d5d6ce0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x10d5d6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d40a0"/>
        <function-ref name="write" scoped="" ref="0x10d5d4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10d58e880" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10d58e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58ec00"/>
        <function-ref name="write" scoped="" ref="0x10d58ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10d5d1ce0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10d5d1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d5d00a0"/>
        <function-ref name="writeDone" scoped="" ref="0x10d5d0230"/>
        <function-ref name="write" scoped="" ref="0x10d5d03c0"/>
        <function-ref name="beginRead" scoped="" ref="0x10d5d0550"/>
        <function-ref name="readDone" scoped="" ref="0x10d5d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10d59d480" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10d59d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d59d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x10d596670" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x10d596670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5969f0"/>
        <function-ref name="write" scoped="" ref="0x10d596b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10d592670" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10d592670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5929f0"/>
        <function-ref name="write" scoped="" ref="0x10d592b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x10d5890a0" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x10d5890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d589420"/>
        <function-ref name="write" scoped="" ref="0x10d5895b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10d58e0a0" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10d58e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58e420"/>
        <function-ref name="write" scoped="" ref="0x10d58e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x10d589880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x10d589880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d589c00"/>
        <function-ref name="write" scoped="" ref="0x10d589d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10d591870" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10d591870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d591bf0"/>
        <function-ref name="write" scoped="" ref="0x10d591d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10d59c7b0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10d59c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d59cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10d5900a0" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10d5900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d590420"/>
        <function-ref name="write" scoped="" ref="0x10d5905b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d59fe20" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d59fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d59e1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d59e350"/>
        <function-ref name="request" scoped="" ref="0x10d59e4e0"/>
        <function-ref name="granted" scoped="" ref="0x10d59e670"/>
        <function-ref name="isOwner" scoped="" ref="0x10d59e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x10d5972f0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x10d5972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d597670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x10d596020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x10d596020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x10d5d6500" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10d5d6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d6880"/>
        <function-ref name="write" scoped="" ref="0x10d5d6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x10d5d7ce0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10d5d7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d60a0"/>
        <function-ref name="write" scoped="" ref="0x10d5d6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x10d5997b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10d5997b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d599b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x10d5d7500" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d5d7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d7880"/>
        <function-ref name="write" scoped="" ref="0x10d5d7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10d5d2500" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10d5d2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d2880"/>
        <function-ref name="write" scoped="" ref="0x10d5d2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x10d58a0a0" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x10d58a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58a420"/>
        <function-ref name="write" scoped="" ref="0x10d58a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x10d587880" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x10d587880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d587c00"/>
        <function-ref name="write" scoped="" ref="0x10d587d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10d59ce00" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10d59ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d59b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x10d59bae0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10d59bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d59be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10d58c0a0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10d58c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58c420"/>
        <function-ref name="write" scoped="" ref="0x10d58c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x10d597940" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x10d597940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d597cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10d58c880" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10d58c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d58cc00"/>
        <function-ref name="write" scoped="" ref="0x10d58cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x10d5d80a0" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x10d5d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5d8820"/>
        <function-ref name="write" scoped="" ref="0x10d5d89b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10d5d09b0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10d5d09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d5d0d30"/>
        <function-ref name="writeDone" scoped="" ref="0x10d5cf020"/>
        <function-ref name="write" scoped="" ref="0x10d5cf1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10d5cf340"/>
        <function-ref name="readDone" scoped="" ref="0x10d5cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x10d1b22c0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x10d1b22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d1b2640"/>
        <function-ref name="writeDone" scoped="" ref="0x10d1b27d0"/>
        <function-ref name="write" scoped="" ref="0x10d1b2960"/>
        <function-ref name="beginRead" scoped="" ref="0x10d1b2af0"/>
        <function-ref name="readDone" scoped="" ref="0x10d1b2c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10d1b3350" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d1b36d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d1b3860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d1b39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x10d1b1540" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x10d1b1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d1b18c0"/>
        <function-ref name="write" scoped="" ref="0x10d1b1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x10d1b0370" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x10d1b0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d1b06f0"/>
        <function-ref name="write" scoped="" ref="0x10d1b0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d1b4600" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d1b4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d1b4980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d1b4b10"/>
        <function-ref name="request" scoped="" ref="0x10d1b4ca0"/>
        <function-ref name="granted" scoped="" ref="0x10d1b4e30"/>
        <function-ref name="isOwner" scoped="" ref="0x10d1b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x10d1ae1d0" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x10d1ae1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d1ae550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x10d1992e0" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10d1992e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d199660"/>
        <function-ref name="sendDone" scoped="" ref="0x10d1997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x10d1a9890" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x10d1a9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d1a9c10"/>
        <function-ref name="writeDone" scoped="" ref="0x10d1a9da0"/>
        <function-ref name="write" scoped="" ref="0x10d1a8020"/>
        <function-ref name="beginRead" scoped="" ref="0x10d1a81b0"/>
        <function-ref name="readDone" scoped="" ref="0x10d1a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10d1ab660" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d1ab660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d1ab9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d1abb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d1abd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x10d1a1c20" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x10d1a1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x10d1a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x10d199b40" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x10d199b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10d1a2020"/>
        <function-ref name="toIdle" scoped="" ref="0x10d1a21b0"/>
        <function-ref name="isState" scoped="" ref="0x10d1a2340"/>
        <function-ref name="isIdle" scoped="" ref="0x10d1a24d0"/>
        <function-ref name="requestState" scoped="" ref="0x10d1a2660"/>
        <function-ref name="forceState" scoped="" ref="0x10d1a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10d1a4060" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10d1a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d1a43e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d1a4570"/>
        <function-ref name="request" scoped="" ref="0x10d1a4700"/>
        <function-ref name="granted" scoped="" ref="0x10d1a4890"/>
        <function-ref name="isOwner" scoped="" ref="0x10d1a4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x10d1a8ba0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x10d1a8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d1a7020"/>
        <function-ref name="write" scoped="" ref="0x10d1a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x10d1a7a30" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x10d1a7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d1a7db0"/>
        <function-ref name="write" scoped="" ref="0x10d1a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d1a2a70" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d1a2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d1a2df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d1a0020"/>
        <function-ref name="led1On" scoped="" ref="0x10d1a01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d1a0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d1a04d0"/>
        <function-ref name="get" scoped="" ref="0x10d1a0660"/>
        <function-ref name="led1Off" scoped="" ref="0x10d1a07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x10d1a0e30"/>
        <function-ref name="set" scoped="" ref="0x10d1a0980"/>
        <function-ref name="led0On" scoped="" ref="0x10d1a0b10"/>
        <function-ref name="led2On" scoped="" ref="0x10d1a0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d1aa510" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d1aa510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d1aa890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d1aaa20"/>
        <function-ref name="request" scoped="" ref="0x10d1aabb0"/>
        <function-ref name="granted" scoped="" ref="0x10d1aad40"/>
        <function-ref name="isOwner" scoped="" ref="0x10d1a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x10d195bd0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x10d195bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d194020"/>
        <function-ref name="runTask" scoped="" ref="0x10d1941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x10d1a58b0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x10d1a58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d1a5c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10d206770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10d206770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10d206af0"/>
        <function-ref name="toIdle" scoped="" ref="0x10d206c80"/>
        <function-ref name="isState" scoped="" ref="0x10d206e10"/>
        <function-ref name="isIdle" scoped="" ref="0x10d202020"/>
        <function-ref name="requestState" scoped="" ref="0x10d2021b0"/>
        <function-ref name="forceState" scoped="" ref="0x10d202340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10d2011d0" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10d2011d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10d201550"/>
        <function-ref name="toIdle" scoped="" ref="0x10d2016e0"/>
        <function-ref name="isState" scoped="" ref="0x10d201870"/>
        <function-ref name="isIdle" scoped="" ref="0x10d201a00"/>
        <function-ref name="requestState" scoped="" ref="0x10d201b90"/>
        <function-ref name="forceState" scoped="" ref="0x10d201d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d1fd020" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d1fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d1fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10d1fdb70" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10d1fdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10d1fb020"/>
        <function-ref name="toIdle" scoped="" ref="0x10d1fb1b0"/>
        <function-ref name="isState" scoped="" ref="0x10d1fb340"/>
        <function-ref name="isIdle" scoped="" ref="0x10d1fb4d0"/>
        <function-ref name="requestState" scoped="" ref="0x10d1fb660"/>
        <function-ref name="forceState" scoped="" ref="0x10d1fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x10d573020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10d573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d5733a0"/>
        <function-ref name="sendDone" scoped="" ref="0x10d573530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x10d2288f0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x10d2288f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x10d228c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d229c40" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d229c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d228020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d2281b0"/>
        <function-ref name="request" scoped="" ref="0x10d228340"/>
        <function-ref name="granted" scoped="" ref="0x10d2284d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d228660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10e2338f0" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10e2338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10e233c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10e233e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x10e2302b0" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10e2302b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10e230630"/>
        <function-ref name="sendDone" scoped="" ref="0x10e2307c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x10e230a50" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10e230a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10e230dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x10e2310c0" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x10e2310c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x10e231440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10e235c30" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10e235c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10e233020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10e2331b0"/>
        <function-ref name="request" scoped="" ref="0x10e233340"/>
        <function-ref name="granted" scoped="" ref="0x10e2334d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10e233660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x10e2316d0" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x10e2316d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x10e231a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x10e231be0"/>
        <function-ref name="splitRead" scoped="" ref="0x10e231d70"/>
        <function-ref name="write" scoped="" ref="0x10e230020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x10d2955e0" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10d2955e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10d295960"/>
        <function-ref name="configure" scoped="" ref="0x10d295af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x10d291510" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10d291510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d291890"/>
        <function-ref name="sendDone" scoped="" ref="0x10d291a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x10d28f600" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10d28f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10d28f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x10d295dd0" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x10d295dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x10d292180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x10d290370" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x10d290370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d2906f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d290880"/>
        <function-ref name="request" scoped="" ref="0x10d290a10"/>
        <function-ref name="granted" scoped="" ref="0x10d290ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d290d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d29aa20" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d29aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d29ada0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d296020"/>
        <function-ref name="request" scoped="" ref="0x10d2961b0"/>
        <function-ref name="granted" scoped="" ref="0x10d296340"/>
        <function-ref name="isOwner" scoped="" ref="0x10d2964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x10d292480" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x10d292480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x10d292800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x10d292990"/>
        <function-ref name="splitRead" scoped="" ref="0x10d292b20"/>
        <function-ref name="write" scoped="" ref="0x10d292cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x10d28a6a0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x10d28a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10d28aa20"/>
        <function-ref name="txDone" scoped="" ref="0x10d28abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x10d2f1c40" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10d2f1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10d2f0020"/>
        <function-ref name="configure" scoped="" ref="0x10d2f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x10d337700" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10d337700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d337aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x10d337c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x10d336e00" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10d336e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10d3351c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x10d2f0440" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x10d2f0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x10d2f07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x10d335490" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x10d335490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10d335810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10d3359a0"/>
        <function-ref name="setUctl" scoped="" ref="0x10d335b30"/>
        <function-ref name="enableUart" scoped="" ref="0x10d335cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x10d335e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10d334020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10d3341b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x10d334340"/>
        <function-ref name="getUrctl" scoped="" ref="0x10d3344d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x10d334660"/>
        <function-ref name="getUmctl" scoped="" ref="0x10d3347f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x10d334980"/>
        <function-ref name="setUtctl" scoped="" ref="0x10d334b10"/>
        <function-ref name="getUbr" scoped="" ref="0x10d334da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10d333020"/>
        <function-ref name="setUmctl" scoped="" ref="0x10d3331b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x10d333340"/>
        <function-ref name="isUart" scoped="" ref="0x10d3334d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10d333660"/>
        <function-ref name="isSpi" scoped="" ref="0x10d3337f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10d333980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10d333b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10d333ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x10d333e30"/>
        <function-ref name="getMode" scoped="" ref="0x10d332020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10d3323b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x10d332540"/>
        <function-ref name="setUbr" scoped="" ref="0x10d3326d0"/>
        <function-ref name="tx" scoped="" ref="0x10d332860"/>
        <function-ref name="getUctl" scoped="" ref="0x10d3329f0"/>
        <function-ref name="disableUart" scoped="" ref="0x10d332b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x10d332d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x10d331020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10d3311b0"/>
        <function-ref name="rx" scoped="" ref="0x10d331340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10d3314d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x10d331660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10d3317f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x10d331980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10d331b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d3305a0" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d3305a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d330920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d330ab0"/>
        <function-ref name="led1On" scoped="" ref="0x10d330c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d330dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d32f020"/>
        <function-ref name="get" scoped="" ref="0x10d32f1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x10d32f340"/>
        <function-ref name="led2On" scoped="" ref="0x10d32f980"/>
        <function-ref name="set" scoped="" ref="0x10d32f660"/>
        <function-ref name="led2Off" scoped="" ref="0x10d32f4d0"/>
        <function-ref name="led0On" scoped="" ref="0x10d32f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x10d336060" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x10d336060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d336400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d336590"/>
        <function-ref name="request" scoped="" ref="0x10d336720"/>
        <function-ref name="granted" scoped="" ref="0x10d3368b0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d336a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d2f2e80" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d2f2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d2f1240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d2f13d0"/>
        <function-ref name="request" scoped="" ref="0x10d2f1560"/>
        <function-ref name="granted" scoped="" ref="0x10d2f16f0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d2f1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x10d2f0a50" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x10d2f0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x10d2f0dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x10d337020"/>
        <function-ref name="splitRead" scoped="" ref="0x10d3371b0"/>
        <function-ref name="write" scoped="" ref="0x10d337340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x10d331de0" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x10d331de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10d330180"/>
        <function-ref name="txDone" scoped="" ref="0x10d330310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x10d32fc50" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x10d32fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d32e020"/>
        <function-ref name="runTask" scoped="" ref="0x10d32e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x10d31f8a0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10d31f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d31fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x10d3223b0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10d3223b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10d322730"/>
        <function-ref name="txDone" scoped="" ref="0x10d3228c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x10d329860" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x10d329860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10d329be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10d329d70"/>
        <function-ref name="setUctl" scoped="" ref="0x10d326020"/>
        <function-ref name="enableUart" scoped="" ref="0x10d3261b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x10d326340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10d3264d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10d326660"/>
        <function-ref name="getUtctl" scoped="" ref="0x10d3267f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x10d326980"/>
        <function-ref name="resetUsart" scoped="" ref="0x10d326b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x10d326ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x10d326e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x10d325020"/>
        <function-ref name="getUbr" scoped="" ref="0x10d3252b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10d325440"/>
        <function-ref name="setUmctl" scoped="" ref="0x10d3255d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x10d325760"/>
        <function-ref name="isUart" scoped="" ref="0x10d3258f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10d325a80"/>
        <function-ref name="isSpi" scoped="" ref="0x10d325c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10d325da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10d324020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10d3241b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x10d324340"/>
        <function-ref name="getMode" scoped="" ref="0x10d3244d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10d324860"/>
        <function-ref name="clrIntr" scoped="" ref="0x10d3249f0"/>
        <function-ref name="setUbr" scoped="" ref="0x10d324b80"/>
        <function-ref name="tx" scoped="" ref="0x10d324d10"/>
        <function-ref name="getUctl" scoped="" ref="0x10d323020"/>
        <function-ref name="disableUart" scoped="" ref="0x10d3231b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10d323340"/>
        <function-ref name="setModeUart" scoped="" ref="0x10d3234d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10d323660"/>
        <function-ref name="rx" scoped="" ref="0x10d3237f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10d323980"/>
        <function-ref name="isUartTx" scoped="" ref="0x10d323b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10d323ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x10d323e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10d322020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x10d379670" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x10d379670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d3799f0"/>
        <function-ref name="isInput" scoped="" ref="0x10d379b80"/>
        <function-ref name="setResistor" scoped="" ref="0x10d379d10"/>
        <function-ref name="toggle" scoped="" ref="0x10d378020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d3781b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d378340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d3784d0"/>
        <function-ref name="get" scoped="" ref="0x10d378660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d3787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d378980"/>
        <function-ref name="set" scoped="" ref="0x10d378b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d378ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d378e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d377120"/>
        <function-ref name="clr" scoped="" ref="0x10d3772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10d319dc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10d319dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10d317180"/>
        <function-ref name="txDone" scoped="" ref="0x10d317310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x10d377670" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x10d377670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d3779f0"/>
        <function-ref name="isInput" scoped="" ref="0x10d377b80"/>
        <function-ref name="setResistor" scoped="" ref="0x10d377d10"/>
        <function-ref name="toggle" scoped="" ref="0x10d376020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d3761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d376340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d3764d0"/>
        <function-ref name="get" scoped="" ref="0x10d376660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d3767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d376980"/>
        <function-ref name="set" scoped="" ref="0x10d376b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d376ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d376e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d375120"/>
        <function-ref name="clr" scoped="" ref="0x10d3752b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x10d375670" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x10d375670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d3759f0"/>
        <function-ref name="isInput" scoped="" ref="0x10d375b80"/>
        <function-ref name="setResistor" scoped="" ref="0x10d375d10"/>
        <function-ref name="toggle" scoped="" ref="0x10d374020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d3741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d374340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d3744d0"/>
        <function-ref name="get" scoped="" ref="0x10d374660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d3747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d374980"/>
        <function-ref name="set" scoped="" ref="0x10d374b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d374ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d374e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d373120"/>
        <function-ref name="clr" scoped="" ref="0x10d3732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x10d31d020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x10d31d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10d31d3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10d31d530"/>
        <function-ref name="setUctl" scoped="" ref="0x10d31d6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x10d31d850"/>
        <function-ref name="setUrctl" scoped="" ref="0x10d31d9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10d31db70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10d31dd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x10d31c020"/>
        <function-ref name="getUrctl" scoped="" ref="0x10d31c1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x10d31c340"/>
        <function-ref name="getUmctl" scoped="" ref="0x10d31c4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x10d31c660"/>
        <function-ref name="setUtctl" scoped="" ref="0x10d31c7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x10d31ca80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10d31cc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x10d31cda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x10d31b020"/>
        <function-ref name="isUart" scoped="" ref="0x10d31b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10d31b340"/>
        <function-ref name="isSpi" scoped="" ref="0x10d31b4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10d31b660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10d31b7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10d31b980"/>
        <function-ref name="enableIntr" scoped="" ref="0x10d31bb10"/>
        <function-ref name="getMode" scoped="" ref="0x10d31bca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10d31a220"/>
        <function-ref name="clrIntr" scoped="" ref="0x10d31a3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x10d31a540"/>
        <function-ref name="tx" scoped="" ref="0x10d31a6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x10d31a860"/>
        <function-ref name="disableUart" scoped="" ref="0x10d31a9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10d31ab80"/>
        <function-ref name="setModeUart" scoped="" ref="0x10d31ad10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10d319020"/>
        <function-ref name="rx" scoped="" ref="0x10d3191b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10d319340"/>
        <function-ref name="isUartTx" scoped="" ref="0x10d3194d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10d319660"/>
        <function-ref name="disableSpi" scoped="" ref="0x10d3197f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10d319980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x10d3385b0" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x10d3385b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x10d338930"/>
        <function-ref name="getStartByte" scoped="" ref="0x10d338ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10d338c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10d338de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x10d315020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x10d3151b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10d315340"/>
        <function-ref name="getStopBit" scoped="" ref="0x10d3154d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d315660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x10d3157f0"/>
        <function-ref name="getData" scoped="" ref="0x10d315980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x10d315b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x10d315ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10d314020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x10d3141b0"/>
        <function-ref name="getIV" scoped="" ref="0x10d314340"/>
        <function-ref name="enableI2C" scoped="" ref="0x10d3144d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x10d314660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10d3147f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10d314980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x10d314b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10d314ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x10d314e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x10d381020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x10d3811b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x10d381540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x10d3816d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x10d381860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x10d3819f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x10d381b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x10d381d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x10d380020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x10d3801b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x10d380340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x10d3804d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x10d380660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10d3807f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10d380980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10d380b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10d380ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x10d380e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x10d37f020"/>
        <function-ref name="setData" scoped="" ref="0x10d37f1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10d37f340"/>
        <function-ref name="getClockSource" scoped="" ref="0x10d37f4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x10d37f660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x10d37f7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10d37f980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x10d37fb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x10d37e420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x10d37e5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x10d37e740"/>
        <function-ref name="setStopBit" scoped="" ref="0x10d37e8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10d37ea60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x10d37ebf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x10d37ed80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10d37d020"/>
        <function-ref name="setStartByte" scoped="" ref="0x10d37d1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10d37d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x10d37b670" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x10d37b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d37b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x10d37bb80"/>
        <function-ref name="setResistor" scoped="" ref="0x10d37bd10"/>
        <function-ref name="toggle" scoped="" ref="0x10d37a020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d37a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d37a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d37a4d0"/>
        <function-ref name="get" scoped="" ref="0x10d37a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d37a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d37a980"/>
        <function-ref name="set" scoped="" ref="0x10d37ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d37aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d37ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d379120"/>
        <function-ref name="clr" scoped="" ref="0x10d3792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x10d317750" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x10d317750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d317ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x10d37d700" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x10d37d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d37da80"/>
        <function-ref name="isInput" scoped="" ref="0x10d37dc10"/>
        <function-ref name="setResistor" scoped="" ref="0x10d37dda0"/>
        <function-ref name="toggle" scoped="" ref="0x10d37c020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d37c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d37c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d37c4d0"/>
        <function-ref name="get" scoped="" ref="0x10d37c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d37c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d37c980"/>
        <function-ref name="set" scoped="" ref="0x10d37cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d37cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d37ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d37b120"/>
        <function-ref name="clr" scoped="" ref="0x10d37b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10e2282c0" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10e2282c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10e228640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10e2287d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x10e222440" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10e222440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10e2227c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10e21a760" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10e21a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10e21aae0"/>
        <function-ref name="configure" scoped="" ref="0x10e21ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x10e222a50" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x10e222a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x10e222dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x10e220020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10e2201b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10e220340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x10e2204d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x10e220660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10e2207f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x10e220980"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e220b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x10e220ca0"/>
        <function-ref name="getData" scoped="" ref="0x10e220e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x10e21f020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x10e21f1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10e21f440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x10e21f5d0"/>
        <function-ref name="getIV" scoped="" ref="0x10e21f760"/>
        <function-ref name="enableI2C" scoped="" ref="0x10e21f8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x10e21fa80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10e21fc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10e21fda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x10e21e020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10e21e1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x10e21e340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x10e21e4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x10e21e660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x10e21e9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x10e21eb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x10e21ed10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x10e21d020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x10e21d1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x10e21d340"/>
        <function-ref name="disableI2C" scoped="" ref="0x10e21d4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x10e21d660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x10e21d7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x10e21d980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x10e21db10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10e21dca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10e21de30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10e21c020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10e21c1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x10e21c340"/>
        <function-ref name="setWordMode" scoped="" ref="0x10e21c4d0"/>
        <function-ref name="setData" scoped="" ref="0x10e21c660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10e21c7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x10e21c980"/>
        <function-ref name="getWordMode" scoped="" ref="0x10e21cb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x10e21cca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10e21ce30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x10e21b020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x10e21b5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x10e21b740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x10e21b8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x10e21ba60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10e21bbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x10e21bd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x10e21a020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10e21a1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x10e21a340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10e21a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x10e223c10" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10e223c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10e222020"/>
        <function-ref name="txDone" scoped="" ref="0x10e2221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10e229640" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10e229640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10e2299c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10e229b50"/>
        <function-ref name="request" scoped="" ref="0x10e229ce0"/>
        <function-ref name="granted" scoped="" ref="0x10e229e70"/>
        <function-ref name="isOwner" scoped="" ref="0x10e228030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x10e2272b0" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x10e2272b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10e227630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10e2277c0"/>
        <function-ref name="setUctl" scoped="" ref="0x10e227950"/>
        <function-ref name="enableUart" scoped="" ref="0x10e227ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x10e227c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10e227e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10e226020"/>
        <function-ref name="getUtctl" scoped="" ref="0x10e2261b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x10e226340"/>
        <function-ref name="resetUsart" scoped="" ref="0x10e2264d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x10e226660"/>
        <function-ref name="disableIntr" scoped="" ref="0x10e2267f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x10e226980"/>
        <function-ref name="getUbr" scoped="" ref="0x10e226c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10e226da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x10e225020"/>
        <function-ref name="isUartRx" scoped="" ref="0x10e2251b0"/>
        <function-ref name="isUart" scoped="" ref="0x10e225340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10e2254d0"/>
        <function-ref name="isSpi" scoped="" ref="0x10e225660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10e2257f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10e225980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10e225b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x10e225ca0"/>
        <function-ref name="getMode" scoped="" ref="0x10e225e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10e224220"/>
        <function-ref name="clrIntr" scoped="" ref="0x10e2243b0"/>
        <function-ref name="setUbr" scoped="" ref="0x10e224540"/>
        <function-ref name="tx" scoped="" ref="0x10e2246d0"/>
        <function-ref name="getUctl" scoped="" ref="0x10e224860"/>
        <function-ref name="disableUart" scoped="" ref="0x10e2249f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10e224b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x10e224d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10e223020"/>
        <function-ref name="rx" scoped="" ref="0x10e2231b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10e223340"/>
        <function-ref name="isUartTx" scoped="" ref="0x10e2234d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10e223660"/>
        <function-ref name="disableSpi" scoped="" ref="0x10e2237f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10e223980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10e228a60" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10e228a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10e228de0"/>
        <function-ref name="userId" scoped="" ref="0x10e227020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10d4038a0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10d4038a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10d403c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10d403db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10d400020" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10d400020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10d4003a0"/>
        <function-ref name="configure" scoped="" ref="0x10d400530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10d408a80" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10d408a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10d408e00"/>
        <function-ref name="txDone" scoped="" ref="0x10d405020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d4045c0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d4045c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d404940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d404ad0"/>
        <function-ref name="request" scoped="" ref="0x10d404c60"/>
        <function-ref name="granted" scoped="" ref="0x10d404df0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d403020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x10d4059a0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x10d4059a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d405d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10d401130" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10d401130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10d4014b0"/>
        <function-ref name="userId" scoped="" ref="0x10d401640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x10d4394b0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10d4394b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10d439830"/>
        <function-ref name="userId" scoped="" ref="0x10d4399c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10d3fe5c0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10d3fe5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10d3fe960"/>
        <function-ref name="txDone" scoped="" ref="0x10d3feaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x10d43ae70" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x10d43ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d439220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x10d43a020" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x10d43a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d43a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x10d43a690" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x10d43a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10d43aa10"/>
        <function-ref name="txDone" scoped="" ref="0x10d43aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10d4aabf0" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10d4aabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10d4a9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10d4a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10d4a8930" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10d4a8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10d4a8cd0"/>
        <function-ref name="configure" scoped="" ref="0x10d4a8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x10d4a9400" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10d4a9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d4a9780"/>
        <function-ref name="requested" scoped="" ref="0x10d4a9910"/>
        <function-ref name="granted" scoped="" ref="0x10d4a9aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d4a9c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10d4a9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d4abe60" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d4abe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d4aa230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d4aa3c0"/>
        <function-ref name="request" scoped="" ref="0x10d4aa550"/>
        <function-ref name="granted" scoped="" ref="0x10d4aa6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d4aa870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10d4a8060" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10d4a8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10d4a83e0"/>
        <function-ref name="userId" scoped="" ref="0x10d4a8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e2c4140" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e2c4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e2c44c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x10e2c4750" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x10e2c4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10e2c4ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x10e2c4c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10e2c4df0"/>
        <function-ref name="dequeue" scoped="" ref="0x10e2c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10e2c0850" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10e2c0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10e2c0bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10e2c0d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10e2be590" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10e2be590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10e2be930"/>
        <function-ref name="configure" scoped="" ref="0x10e2beac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x10e2bed50" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x10e2bed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10e2bd100"/>
        <function-ref name="isEmpty" scoped="" ref="0x10e2bd290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10e2bd420"/>
        <function-ref name="dequeue" scoped="" ref="0x10e2bd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x10e2bf020" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10e2bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10e2bf3a0"/>
        <function-ref name="requested" scoped="" ref="0x10e2bf530"/>
        <function-ref name="granted" scoped="" ref="0x10e2bf6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x10e2bf850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10e2bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10e2bd800" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10e2bd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10e2bdb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10e2bdd10"/>
        <function-ref name="led1On" scoped="" ref="0x10e2bc020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10e2bc1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10e2bc340"/>
        <function-ref name="get" scoped="" ref="0x10e2bc4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x10e2bc660"/>
        <function-ref name="led0On" scoped="" ref="0x10e2bcca0"/>
        <function-ref name="set" scoped="" ref="0x10e2bc980"/>
        <function-ref name="led2On" scoped="" ref="0x10e2bc7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x10e2bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10e2c2970" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10e2c2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10e2c2d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10e2c0020"/>
        <function-ref name="request" scoped="" ref="0x10e2c01b0"/>
        <function-ref name="granted" scoped="" ref="0x10e2c0340"/>
        <function-ref name="isOwner" scoped="" ref="0x10e2c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10e2bfc30" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10e2bfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10e2be020"/>
        <function-ref name="userId" scoped="" ref="0x10e2be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x10e2bb020" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x10e2bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10e2bb3a0"/>
        <function-ref name="runTask" scoped="" ref="0x10e2bb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x10d4a1870" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x10d4a1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x10d4a1bf0"/>
        <function-ref name="getStartByte" scoped="" ref="0x10d4a1d80"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10d49e020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10d49e1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x10d49e340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x10d49e4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10d49e660"/>
        <function-ref name="getStopBit" scoped="" ref="0x10d49e7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d49e980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x10d49eb10"/>
        <function-ref name="getData" scoped="" ref="0x10d49eca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x10d49ee30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x10d49d020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10d49d2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x10d49d440"/>
        <function-ref name="getIV" scoped="" ref="0x10d49d5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x10d49d760"/>
        <function-ref name="setStartBit" scoped="" ref="0x10d49d8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10d49da80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10d49dc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x10d49dda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10d49c020"/>
        <function-ref name="isI2C" scoped="" ref="0x10d49c1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x10d49c340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x10d49c4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x10d49c860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x10d49c9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x10d49cb80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x10d49cd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x10d49b020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x10d49b1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x10d49b340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x10d49b4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x10d49b660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x10d49b7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x10d49b980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10d49bb10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10d49bca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10d49be30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10d49a020"/>
        <function-ref name="getStartBit" scoped="" ref="0x10d49a1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x10d49a340"/>
        <function-ref name="setData" scoped="" ref="0x10d49a4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10d49a660"/>
        <function-ref name="getClockSource" scoped="" ref="0x10d49a7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x10d49a980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x10d49ab10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10d49aca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x10d49ae30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x10d499420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x10d4995b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x10d499740"/>
        <function-ref name="setStopBit" scoped="" ref="0x10d4998d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10d499a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x10d499bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x10d499d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10d498020"/>
        <function-ref name="setStartByte" scoped="" ref="0x10d4981b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10d498340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x10d4de250" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x10d4de250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10d4de5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10d4de760"/>
        <function-ref name="setUctl" scoped="" ref="0x10d4de8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x10d4dea80"/>
        <function-ref name="setUrctl" scoped="" ref="0x10d4dec10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10d4deda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10d4dd020"/>
        <function-ref name="getUtctl" scoped="" ref="0x10d4dd1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x10d4dd340"/>
        <function-ref name="resetUsart" scoped="" ref="0x10d4dd4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x10d4dd660"/>
        <function-ref name="disableIntr" scoped="" ref="0x10d4dd7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x10d4dd980"/>
        <function-ref name="getUbr" scoped="" ref="0x10d4ddc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10d4ddda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x10d4dc020"/>
        <function-ref name="isUartRx" scoped="" ref="0x10d4dc1b0"/>
        <function-ref name="isUart" scoped="" ref="0x10d4dc340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10d4dc4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x10d4dc660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10d4dc7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10d4dc980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10d4dcb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x10d4dcca0"/>
        <function-ref name="getMode" scoped="" ref="0x10d4dce30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10d4db220"/>
        <function-ref name="clrIntr" scoped="" ref="0x10d4db3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x10d4db540"/>
        <function-ref name="tx" scoped="" ref="0x10d4db6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x10d4db860"/>
        <function-ref name="disableUart" scoped="" ref="0x10d4db9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10d4dbb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x10d4dbd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10d4da020"/>
        <function-ref name="rx" scoped="" ref="0x10d4da1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10d4da340"/>
        <function-ref name="isUartTx" scoped="" ref="0x10d4da4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10d4da660"/>
        <function-ref name="disableSpi" scoped="" ref="0x10d4da7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10d4da980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x10d4d7cb0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x10d4d7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4d6230"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4d63c0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4d6550"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4d66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4d6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4d6a00"/>
        <function-ref name="get" scoped="" ref="0x10d4d6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4d6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4d5020"/>
        <function-ref name="set" scoped="" ref="0x10d4d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4d5760"/>
        <function-ref name="clr" scoped="" ref="0x10d4d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x10d495430" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x10d495430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x10d4957b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x10d495940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10d495ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10d495c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x10d495df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x10d494020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10d4941b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x10d494340"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d4944d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x10d494660"/>
        <function-ref name="getData" scoped="" ref="0x10d4947f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x10d494980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x10d494b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10d494da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x10d493020"/>
        <function-ref name="getIV" scoped="" ref="0x10d4931b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x10d493340"/>
        <function-ref name="setStartBit" scoped="" ref="0x10d4934d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10d493660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10d4937f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x10d493980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10d493b10"/>
        <function-ref name="isI2C" scoped="" ref="0x10d493ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x10d493e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x10d492020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x10d4923b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x10d492540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x10d4926d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x10d492860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x10d4929f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x10d492b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x10d492d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x10d491020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x10d4911b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x10d491340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x10d4914d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10d491660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10d4917f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10d491980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10d491b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x10d491ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x10d491e30"/>
        <function-ref name="setData" scoped="" ref="0x10d490020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10d4901b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x10d490340"/>
        <function-ref name="getWordMode" scoped="" ref="0x10d4904d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x10d490660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10d4907f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x10d490980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x10d4df020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x10d4df1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x10d4df340"/>
        <function-ref name="setStopBit" scoped="" ref="0x10d4df4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10d4df660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x10d4df7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x10d4df980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10d4dfb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x10d4dfca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10d4dfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x10d4dad40" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x10d4dad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4d8270"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4d8400"/>
        <function-ref name="toggle" scoped="" ref="0x10d4d8590"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4d8720"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4d88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4d8a40"/>
        <function-ref name="get" scoped="" ref="0x10d4d8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4d8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4d7020"/>
        <function-ref name="set" scoped="" ref="0x10d4d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4d7760"/>
        <function-ref name="clr" scoped="" ref="0x10d4d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x10d5b7c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10d5b7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b5210"/>
        <function-ref name="write" scoped="" ref="0x10d5b53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10d5c1da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10d5c1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5c0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x10d5bab50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10d5bab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b9020"/>
        <function-ref name="write" scoped="" ref="0x10d5b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10d5b4670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10d5b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b49f0"/>
        <function-ref name="write" scoped="" ref="0x10d5b4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x10d601e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x10d601e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d600210"/>
        <function-ref name="write" scoped="" ref="0x10d6003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10d5b4e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10d5b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b3210"/>
        <function-ref name="write" scoped="" ref="0x10d5b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10d5f42f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10d5f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f4670"/>
        <function-ref name="write" scoped="" ref="0x10d5f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10d5f72f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10d5f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f7670"/>
        <function-ref name="write" scoped="" ref="0x10d5f7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x10d5bf120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10d5bf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5bf4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x10d5fd670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x10d5fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fd9f0"/>
        <function-ref name="write" scoped="" ref="0x10d5fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x10d5f82f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d5f82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f8670"/>
        <function-ref name="write" scoped="" ref="0x10d5f8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x10d5b9c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10d5b9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b8020"/>
        <function-ref name="write" scoped="" ref="0x10d5b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x10d5b8c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10d5b8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b7020"/>
        <function-ref name="write" scoped="" ref="0x10d5b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x10d602670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x10d602670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6029f0"/>
        <function-ref name="write" scoped="" ref="0x10d602b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10d5b1e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10d5b1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d604210"/>
        <function-ref name="write" scoped="" ref="0x10d6043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10d5b3670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10d5b3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b39f0"/>
        <function-ref name="write" scoped="" ref="0x10d5b3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10d5c3760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d5c3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d5c3ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d5c3c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d5c3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x10d5beaa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10d5beaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5bee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x10d5bd120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x10d5bd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5bd5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x10d5fba70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d5fba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fbdf0"/>
        <function-ref name="write" scoped="" ref="0x10d5fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x10d5bd870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x10d5bd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5bdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x10d5f8ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d5f8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f8e50"/>
        <function-ref name="write" scoped="" ref="0x10d5f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x10d5bfdc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10d5bfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5be180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x10d5fee50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x10d5fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fd210"/>
        <function-ref name="write" scoped="" ref="0x10d5fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x10d5b8480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x10d5b8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b8800"/>
        <function-ref name="write" scoped="" ref="0x10d5b8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x10d5b9480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10d5b9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b9800"/>
        <function-ref name="write" scoped="" ref="0x10d5b9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10d5c1750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10d5c1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5c1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x10d5ffe50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x10d5ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fe210"/>
        <function-ref name="write" scoped="" ref="0x10d5fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x10d600670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x10d600670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6009f0"/>
        <function-ref name="write" scoped="" ref="0x10d600b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x10d5fe670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x10d5fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fe9f0"/>
        <function-ref name="write" scoped="" ref="0x10d5feb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10d5f6ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10d5f6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f6e50"/>
        <function-ref name="write" scoped="" ref="0x10d5f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10d5f7ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10d5f7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f7e50"/>
        <function-ref name="write" scoped="" ref="0x10d5f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x10d604670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x10d604670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6049f0"/>
        <function-ref name="write" scoped="" ref="0x10d604b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x10d600e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x10d600e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5ff210"/>
        <function-ref name="write" scoped="" ref="0x10d5ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x10d5f9ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x10d5f9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f9e50"/>
        <function-ref name="write" scoped="" ref="0x10d5f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10d5b2670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10d5b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b29f0"/>
        <function-ref name="write" scoped="" ref="0x10d5b2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10d5f4ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10d5f4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d5f4e50"/>
        <function-ref name="writeDone" scoped="" ref="0x10d5f3020"/>
        <function-ref name="write" scoped="" ref="0x10d5f31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10d5f3340"/>
        <function-ref name="readDone" scoped="" ref="0x10d5f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10d5c1100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10d5c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5c1480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x10d5ba370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x10d5ba370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5ba6f0"/>
        <function-ref name="write" scoped="" ref="0x10d5ba880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10d5b7480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10d5b7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b7800"/>
        <function-ref name="write" scoped="" ref="0x10d5b7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x10d602e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x10d602e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d601210"/>
        <function-ref name="write" scoped="" ref="0x10d6013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10d5b3e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10d5b3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b2210"/>
        <function-ref name="write" scoped="" ref="0x10d5b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x10d601670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x10d601670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6019f0"/>
        <function-ref name="write" scoped="" ref="0x10d601b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10d5b5670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10d5b5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b59f0"/>
        <function-ref name="write" scoped="" ref="0x10d5b5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10d5c0450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10d5c0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5c07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10d5b5e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10d5b5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b4210"/>
        <function-ref name="write" scoped="" ref="0x10d5b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d5c4a80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d5c4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d5c4e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d5c3020"/>
        <function-ref name="request" scoped="" ref="0x10d5c31b0"/>
        <function-ref name="granted" scoped="" ref="0x10d5c3340"/>
        <function-ref name="isOwner" scoped="" ref="0x10d5c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x10d5bb020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x10d5bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x10d5bbcc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x10d5bbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5ba0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x10d5f92f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10d5f92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f9670"/>
        <function-ref name="write" scoped="" ref="0x10d5f9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x10d5faad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10d5faad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fae50"/>
        <function-ref name="write" scoped="" ref="0x10d5f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x10d5be450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10d5be450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5be7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x10d5fa2f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d5fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fa670"/>
        <function-ref name="write" scoped="" ref="0x10d5fa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10d5f62f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10d5f62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5f6670"/>
        <function-ref name="write" scoped="" ref="0x10d5f6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x10d604e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x10d604e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d602210"/>
        <function-ref name="write" scoped="" ref="0x10d6023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x10d5ff670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x10d5ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5ff9f0"/>
        <function-ref name="write" scoped="" ref="0x10d5ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10d5c0aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10d5c0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5c0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x10d5bf770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10d5bf770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5bfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10d5b2e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10d5b2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b1210"/>
        <function-ref name="write" scoped="" ref="0x10d5b13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x10d5bb670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x10d5bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5bb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10d5b1670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10d5b1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5b19f0"/>
        <function-ref name="write" scoped="" ref="0x10d5b1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x10d5fde50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x10d5fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5fb610"/>
        <function-ref name="write" scoped="" ref="0x10d5fb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10d5f37a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10d5f37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d5f3b20"/>
        <function-ref name="writeDone" scoped="" ref="0x10d5f3cb0"/>
        <function-ref name="write" scoped="" ref="0x10d5f3e40"/>
        <function-ref name="beginRead" scoped="" ref="0x10d5f2020"/>
        <function-ref name="readDone" scoped="" ref="0x10d5f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x10d5dec60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10d5dec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5dd210"/>
        <function-ref name="write" scoped="" ref="0x10d5dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10d5e9da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10d5e9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x10d5e2b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10d5e2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5e0020"/>
        <function-ref name="write" scoped="" ref="0x10d5e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10d5dc670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10d5dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5dc9f0"/>
        <function-ref name="write" scoped="" ref="0x10d5dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x10d629e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x10d629e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d628210"/>
        <function-ref name="write" scoped="" ref="0x10d6283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10d5dce50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10d5dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5db210"/>
        <function-ref name="write" scoped="" ref="0x10d5db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10d61c2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10d61c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d61c670"/>
        <function-ref name="write" scoped="" ref="0x10d61c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10d61e2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10d61e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d61e670"/>
        <function-ref name="write" scoped="" ref="0x10d61e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x10d5e7120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10d5e7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x10d624670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x10d624670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6249f0"/>
        <function-ref name="write" scoped="" ref="0x10d624b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x10d61f2f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d61f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d61f670"/>
        <function-ref name="write" scoped="" ref="0x10d61f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x10d5e0c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10d5e0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5df020"/>
        <function-ref name="write" scoped="" ref="0x10d5df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x10d5dfc60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10d5dfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5de020"/>
        <function-ref name="write" scoped="" ref="0x10d5de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x10d62a670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x10d62a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62a9f0"/>
        <function-ref name="write" scoped="" ref="0x10d62ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10d62ce50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10d62ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62b210"/>
        <function-ref name="write" scoped="" ref="0x10d62b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10d5db670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10d5db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5db9f0"/>
        <function-ref name="write" scoped="" ref="0x10d5dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10d5ea760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d5ea760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d5eaae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d5eac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d5eae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x10d5e5aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10d5e5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x10d5e4120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x10d5e4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x10d623a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d623a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d623df0"/>
        <function-ref name="write" scoped="" ref="0x10d622020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x10d5e4870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x10d5e4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x10d61fad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d61fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d61fe50"/>
        <function-ref name="write" scoped="" ref="0x10d61e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x10d5e7dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10d5e7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x10d625e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x10d625e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d624210"/>
        <function-ref name="write" scoped="" ref="0x10d6243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x10d5df480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x10d5df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5df800"/>
        <function-ref name="write" scoped="" ref="0x10d5df990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x10d5e0480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10d5e0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5e0800"/>
        <function-ref name="write" scoped="" ref="0x10d5e0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10d5e9750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10d5e9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x10d626e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x10d626e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d625210"/>
        <function-ref name="write" scoped="" ref="0x10d6253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x10d628670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x10d628670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6289f0"/>
        <function-ref name="write" scoped="" ref="0x10d628b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x10d625670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x10d625670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6259f0"/>
        <function-ref name="write" scoped="" ref="0x10d625b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10d61dad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10d61dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d61de50"/>
        <function-ref name="write" scoped="" ref="0x10d61c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10d61ead0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10d61ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d61ee50"/>
        <function-ref name="write" scoped="" ref="0x10d61d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x10d62b670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x10d62b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62b9f0"/>
        <function-ref name="write" scoped="" ref="0x10d62bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x10d628e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x10d628e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d626210"/>
        <function-ref name="write" scoped="" ref="0x10d6263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x10d621ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x10d621ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d621e50"/>
        <function-ref name="write" scoped="" ref="0x10d61f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10d62d670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10d62d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62d9f0"/>
        <function-ref name="write" scoped="" ref="0x10d62db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10d61cad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10d61cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d61ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x10d61b020"/>
        <function-ref name="write" scoped="" ref="0x10d61b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10d61b340"/>
        <function-ref name="readDone" scoped="" ref="0x10d61b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10d5e9100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10d5e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e9480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x10d5e2370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x10d5e2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5e26f0"/>
        <function-ref name="write" scoped="" ref="0x10d5e2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10d5de480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10d5de480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5de800"/>
        <function-ref name="write" scoped="" ref="0x10d5de990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x10d62ae50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x10d62ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d629210"/>
        <function-ref name="write" scoped="" ref="0x10d6293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10d5dbe50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10d5dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62d210"/>
        <function-ref name="write" scoped="" ref="0x10d62d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x10d629670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x10d629670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6299f0"/>
        <function-ref name="write" scoped="" ref="0x10d629b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10d5dd670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10d5dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5dd9f0"/>
        <function-ref name="write" scoped="" ref="0x10d5ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10d5e8450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10d5e8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10d5dde50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10d5dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d5dc210"/>
        <function-ref name="write" scoped="" ref="0x10d5dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d5eb9e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d5eb9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d5ebd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d5ea020"/>
        <function-ref name="request" scoped="" ref="0x10d5ea1b0"/>
        <function-ref name="granted" scoped="" ref="0x10d5ea340"/>
        <function-ref name="isOwner" scoped="" ref="0x10d5ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x10d5e3020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x10d5e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x10d5e3cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x10d5e3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x10d6212f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10d6212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d621670"/>
        <function-ref name="write" scoped="" ref="0x10d621800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x10d622ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10d622ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d622e50"/>
        <function-ref name="write" scoped="" ref="0x10d621020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x10d5e5450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10d5e5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x10d6222f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d6222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d622670"/>
        <function-ref name="write" scoped="" ref="0x10d622800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10d61d2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10d61d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d61d670"/>
        <function-ref name="write" scoped="" ref="0x10d61d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x10d62be50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x10d62be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62a210"/>
        <function-ref name="write" scoped="" ref="0x10d62a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x10d626670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x10d626670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6269f0"/>
        <function-ref name="write" scoped="" ref="0x10d626b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10d5e8aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10d5e8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x10d5e7770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10d5e7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10d62de50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10d62de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62c210"/>
        <function-ref name="write" scoped="" ref="0x10d62c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x10d5e3670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x10d5e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d5e39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10d62c670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10d62c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d62c9f0"/>
        <function-ref name="write" scoped="" ref="0x10d62cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x10d624e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x10d624e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d623610"/>
        <function-ref name="write" scoped="" ref="0x10d6237a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10d61b7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10d61b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d61bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x10d61bcb0"/>
        <function-ref name="write" scoped="" ref="0x10d61be40"/>
        <function-ref name="beginRead" scoped="" ref="0x10d61a020"/>
        <function-ref name="readDone" scoped="" ref="0x10d61a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x10d613b20" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10d613b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x10d610020"/>
        <function-ref name="changed" scoped="" ref="0x10d6101b0"/>
        <function-ref name="amGroup" scoped="" ref="0x10d610340"/>
        <function-ref name="setAddress" scoped="" ref="0x10d6104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x10d612d20" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10d612d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x10d6500e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x10d64c310" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10d64c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x10d64c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x10d649880" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x10d649880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d649c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x10d63d020" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x10d63d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d63d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x10d634bd0" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x10d634bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d637020"/>
        <function-ref name="write" scoped="" ref="0x10d6371b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x10d637530" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x10d637530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d6378b0"/>
        <function-ref name="stop" scoped="" ref="0x10d637a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x10d638140" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x10d638140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6384c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x10d63cc50" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x10d63cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d679020"/>
        <function-ref name="write" scoped="" ref="0x10d6791b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x10d679540" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x10d679540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d6798c0"/>
        <function-ref name="isInput" scoped="" ref="0x10d679a50"/>
        <function-ref name="toggle" scoped="" ref="0x10d679be0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d679d70"/>
        <function-ref name="get" scoped="" ref="0x10d678020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6781b0"/>
        <function-ref name="set" scoped="" ref="0x10d678340"/>
        <function-ref name="clr" scoped="" ref="0x10d6784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x10d670910" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x10d670910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x10d673780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x10d675150" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x10d675150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6754d0"/>
        <function-ref name="write" scoped="" ref="0x10d675660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x10d6759f0" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x10d6759f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d675d70"/>
        <function-ref name="isInput" scoped="" ref="0x10d674020"/>
        <function-ref name="toggle" scoped="" ref="0x10d6741b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d674340"/>
        <function-ref name="get" scoped="" ref="0x10d6744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d674660"/>
        <function-ref name="set" scoped="" ref="0x10d6747f0"/>
        <function-ref name="clr" scoped="" ref="0x10d674980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x10d677c90" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x10d677c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x10d6a5ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x10d6a3a90" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x10d6a3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x10d6948d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10d693020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d693020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d693e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d692800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d692340"/>
        <function-ref name="overflow" scoped="" ref="0x10d692cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x10d68d530" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x10d68d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d68c3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d68cd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d68c890"/>
        <function-ref name="overflow" scoped="" ref="0x10d68b260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10d686020" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10d686020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d6863a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d686530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d6866c0"/>
        <function-ref name="get" scoped="" ref="0x10d686850"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d6869e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d686b70"/>
        <function-ref name="getMode" scoped="" ref="0x10d686d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d685020"/>
        <function-ref name="overflow" scoped="" ref="0x10d6851b0"/>
        <function-ref name="setMode" scoped="" ref="0x10d685340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d6854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10d68ae50" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d68ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40c10"/>
            <typename><typedef-ref name="TMicro" ref="0x10cd3f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d688ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d687670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d6871b0"/>
        <function-ref name="overflow" scoped="" ref="0x10d687b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x10d67a590" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x10d67a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d67a910"/>
        <function-ref name="isInput" scoped="" ref="0x10d67aaa0"/>
        <function-ref name="toggle" scoped="" ref="0x10d67ac30"/>
        <function-ref name="isOutput" scoped="" ref="0x10d67adc0"/>
        <function-ref name="get" scoped="" ref="0x10d6d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6d81b0"/>
        <function-ref name="set" scoped="" ref="0x10d6d8340"/>
        <function-ref name="clr" scoped="" ref="0x10d6d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10d6d6c50" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10d6d6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d6d4020"/>
        <function-ref name="isInput" scoped="" ref="0x10d6d41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d6d4340"/>
        <function-ref name="toggle" scoped="" ref="0x10d6d44d0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d6d4660"/>
        <function-ref name="getResistor" scoped="" ref="0x10d6d47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6d4980"/>
        <function-ref name="get" scoped="" ref="0x10d6d4b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d6d4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d6d4e30"/>
        <function-ref name="set" scoped="" ref="0x10d6d3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d6d31b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d6d3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d6d35d0"/>
        <function-ref name="clr" scoped="" ref="0x10d6d3760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10d6d79e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d6d79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d6d7d60"/>
        <function-ref name="isInput" scoped="" ref="0x10d6d6020"/>
        <function-ref name="toggle" scoped="" ref="0x10d6d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d6d6340"/>
        <function-ref name="get" scoped="" ref="0x10d6d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6d6660"/>
        <function-ref name="set" scoped="" ref="0x10d6d67f0"/>
        <function-ref name="clr" scoped="" ref="0x10d6d6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10d6d9a10" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10d6d9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d6d9d90"/>
        <function-ref name="stop" scoped="" ref="0x10d6ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10d6bfcb0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10d6bfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10d6be0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10d6be230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10d6be3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10d6be550"/>
        <function-ref name="setCca" scoped="" ref="0x10d6be6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10d6be870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x10d6bb990" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x10d6bb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10d6bbd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x10d6bf020" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x10d6bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d6bf3a0"/>
        <function-ref name="cancel" scoped="" ref="0x10d6bf530"/>
        <function-ref name="modify" scoped="" ref="0x10d6bf6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x10d6bf850"/>
        <function-ref name="resend" scoped="" ref="0x10d6bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10d6c26c0" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10d6c26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d6c2a40"/>
        <function-ref name="stop" scoped="" ref="0x10d6c2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x10d6bd150" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x10d6bd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10d6bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10d6b1970" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10d6b1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10d6b1cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10d6b1e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10d6b0030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10d6b01c0"/>
        <function-ref name="setCca" scoped="" ref="0x10d6b0350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10d6b04e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x10d703950" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x10d703950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10d701020"/>
        <function-ref name="clear" scoped="" ref="0x10d701750"/>
        <function-ref name="isValid" scoped="" ref="0x10d702780"/>
        <function-ref name="set" scoped="" ref="0x10d701e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x10d6ec020" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10d6ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6ec3a0"/>
        <function-ref name="write" scoped="" ref="0x10d6ec530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x10d6ec890" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10d6ec890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6ecc10"/>
        <function-ref name="write" scoped="" ref="0x10d6ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x10d6b0900" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x10d6b0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10d6b0c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x10d6ef530" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10d6ef530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d6ef8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x10d6fe880" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x10d6fe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x10d6fec00"/>
        <function-ref name="disable" scoped="" ref="0x10d6fed90"/>
        <function-ref name="captured" scoped="" ref="0x10d6fd020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x10d6fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x10d709ae0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x10d709ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d706390"/>
        <function-ref name="fired" scoped="" ref="0x10d707360"/>
        <function-ref name="startAt" scoped="" ref="0x10d707ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x10d707820"/>
        <function-ref name="getAlarm" scoped="" ref="0x10d706850"/>
        <function-ref name="start" scoped="" ref="0x10d708970"/>
        <function-ref name="stop" scoped="" ref="0x10d708e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10d706d00" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10d706d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10d7040a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10d704230"/>
        <function-ref name="getRssi" scoped="" ref="0x10d7043c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10d704550"/>
        <function-ref name="getPower" scoped="" ref="0x10d7046e0"/>
        <function-ref name="getLqi" scoped="" ref="0x10d704870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x10d6f1550" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d6f1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6f18d0"/>
        <function-ref name="write" scoped="" ref="0x10d6f1a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x10d6f1e00" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10d6f1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6f01c0"/>
        <function-ref name="write" scoped="" ref="0x10d6f0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x10d6e5d40" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x10d6e5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d6e90e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x10d6e9270"/>
        <function-ref name="sfd" scoped="" ref="0x10d6e9400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10d6b3bc0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10d6b3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d6b1020"/>
        <function-ref name="cancel" scoped="" ref="0x10d6b11b0"/>
        <function-ref name="modify" scoped="" ref="0x10d6b1340"/>
        <function-ref name="sendDone" scoped="" ref="0x10d6b14d0"/>
        <function-ref name="resend" scoped="" ref="0x10d6b1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x10d6f3d10" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d6f3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d6f20e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d6f2270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d6f2400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x10d6efc60" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10d6efc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d6ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x10d6f7820" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x10d6f7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d6f7ba0"/>
        <function-ref name="isInput" scoped="" ref="0x10d6f7d30"/>
        <function-ref name="toggle" scoped="" ref="0x10d6f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d6f51b0"/>
        <function-ref name="get" scoped="" ref="0x10d6f5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6f54d0"/>
        <function-ref name="set" scoped="" ref="0x10d6f5660"/>
        <function-ref name="clr" scoped="" ref="0x10d6f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d6b4c60" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d6b4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d6b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10d704bb0" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d704bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10d703020"/>
        <function-ref name="getHeader" scoped="" ref="0x10d7031b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10d703340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x10d6f8be0" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10d6f8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d6fe020"/>
        <function-ref name="isSet" scoped="" ref="0x10d6fe1b0"/>
        <function-ref name="cancel" scoped="" ref="0x10d6fe340"/>
        <function-ref name="set" scoped="" ref="0x10d6fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x10d6ee3e0" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10d6ee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6ee960"/>
        <function-ref name="write" scoped="" ref="0x10d6eeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10d6f3020" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10d6f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d6f33a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d6f3530"/>
        <function-ref name="request" scoped="" ref="0x10d6f36c0"/>
        <function-ref name="granted" scoped="" ref="0x10d6f3850"/>
        <function-ref name="isOwner" scoped="" ref="0x10d6f39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x10d6fd500" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x10d6fd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d6fd980"/>
        <function-ref name="isInput" scoped="" ref="0x10d6fdb10"/>
        <function-ref name="toggle" scoped="" ref="0x10d6fdca0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d6fde30"/>
        <function-ref name="get" scoped="" ref="0x10d6f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6f71b0"/>
        <function-ref name="set" scoped="" ref="0x10d6f7340"/>
        <function-ref name="clr" scoped="" ref="0x10d6f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x10d6eb130" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10d6eb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6eb4b0"/>
        <function-ref name="write" scoped="" ref="0x10d6eb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x10d6eb9c0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10d6eb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6ebd40"/>
        <function-ref name="write" scoped="" ref="0x10d6ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x10d6f06d0" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10d6f06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d6f0a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x10d6f5b40" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x10d6f5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d6f4020"/>
        <function-ref name="isInput" scoped="" ref="0x10d6f41b0"/>
        <function-ref name="toggle" scoped="" ref="0x10d6f4340"/>
        <function-ref name="isOutput" scoped="" ref="0x10d6f44d0"/>
        <function-ref name="get" scoped="" ref="0x10d6f4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6f47f0"/>
        <function-ref name="set" scoped="" ref="0x10d6f4980"/>
        <function-ref name="clr" scoped="" ref="0x10d6f4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d6e96c0" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d6e96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d6e9a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d6e9bd0"/>
        <function-ref name="led1On" scoped="" ref="0x10d6e9d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d6e8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d6e81b0"/>
        <function-ref name="get" scoped="" ref="0x10d6e8340"/>
        <function-ref name="led1Off" scoped="" ref="0x10d6e84d0"/>
        <function-ref name="led2Off" scoped="" ref="0x10d6e8b10"/>
        <function-ref name="set" scoped="" ref="0x10d6e8660"/>
        <function-ref name="led0On" scoped="" ref="0x10d6e87f0"/>
        <function-ref name="led2On" scoped="" ref="0x10d6e8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x10d6ed5e0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10d6ed5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d6ed960"/>
        <function-ref name="write" scoped="" ref="0x10d6edaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10d6b3320" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10d6b3320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d6b36a0"/>
        <function-ref name="stop" scoped="" ref="0x10d6b3830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x10d6f2780" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10d6f2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d6f2b00"/>
        <function-ref name="writeDone" scoped="" ref="0x10d6f2c90"/>
        <function-ref name="write" scoped="" ref="0x10d6f2e20"/>
        <function-ref name="beginRead" scoped="" ref="0x10d6f1020"/>
        <function-ref name="readDone" scoped="" ref="0x10d6f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x10d6f0de0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10d6f0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d6ef180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x10d6eee80" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x10d6eee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d6ed220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x10d7090f0" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x10d7090f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10d709470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x10d7b3c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10d7b3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b2210"/>
        <function-ref name="write" scoped="" ref="0x10d7b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10d7bd020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10d7bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x10d7b7c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10d7b7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b5020"/>
        <function-ref name="write" scoped="" ref="0x10d7b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10d7b1670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10d7b1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b19f0"/>
        <function-ref name="write" scoped="" ref="0x10d7b1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x10d7aae50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x10d7aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a9210"/>
        <function-ref name="write" scoped="" ref="0x10d7a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10d7b1e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10d7b1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b0210"/>
        <function-ref name="write" scoped="" ref="0x10d7b03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10d79d2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10d79d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d79d670"/>
        <function-ref name="write" scoped="" ref="0x10d79d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10d79f2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10d79f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d79f670"/>
        <function-ref name="write" scoped="" ref="0x10d79f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x10d7bc370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10d7bc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7bc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x10d7a5670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x10d7a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a59f0"/>
        <function-ref name="write" scoped="" ref="0x10d7a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x10d7a02f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d7a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a0670"/>
        <function-ref name="write" scoped="" ref="0x10d7a0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x10d7b5c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10d7b5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b4020"/>
        <function-ref name="write" scoped="" ref="0x10d7b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x10d7b4c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10d7b4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b3020"/>
        <function-ref name="write" scoped="" ref="0x10d7b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x10d7ab670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x10d7ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ab9f0"/>
        <function-ref name="write" scoped="" ref="0x10d7abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10d7ade50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10d7ade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ac210"/>
        <function-ref name="write" scoped="" ref="0x10d7ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10d7b0670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10d7b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b09f0"/>
        <function-ref name="write" scoped="" ref="0x10d7b0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10d7648f0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d7648f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d764c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d764e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d7be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x10d7bad00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10d7bad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7b90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x10d7b9370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x10d7b9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x10d7a4a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d7a4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a4df0"/>
        <function-ref name="write" scoped="" ref="0x10d7a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x10d7b9ac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x10d7b9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7b9e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x10d7a0ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d7a0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a0e50"/>
        <function-ref name="write" scoped="" ref="0x10d79f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x10d7ba060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10d7ba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7ba3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x10d7a6e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x10d7a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a5210"/>
        <function-ref name="write" scoped="" ref="0x10d7a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x10d7b4480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x10d7b4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b4800"/>
        <function-ref name="write" scoped="" ref="0x10d7b4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x10d7b5480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10d7b5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b5800"/>
        <function-ref name="write" scoped="" ref="0x10d7b5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10d7be940" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10d7be940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7becc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x10d7a7e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x10d7a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a6210"/>
        <function-ref name="write" scoped="" ref="0x10d7a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x10d7a9670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x10d7a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a99f0"/>
        <function-ref name="write" scoped="" ref="0x10d7a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x10d7a6670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x10d7a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a69f0"/>
        <function-ref name="write" scoped="" ref="0x10d7a6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10d79ead0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10d79ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d79ee50"/>
        <function-ref name="write" scoped="" ref="0x10d79d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10d79fad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10d79fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d79fe50"/>
        <function-ref name="write" scoped="" ref="0x10d79e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x10d7ac670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x10d7ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ac9f0"/>
        <function-ref name="write" scoped="" ref="0x10d7acb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x10d7a9e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x10d7a9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a7210"/>
        <function-ref name="write" scoped="" ref="0x10d7a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x10d7a2ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x10d7a2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a2e50"/>
        <function-ref name="write" scoped="" ref="0x10d7a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10d7ae670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10d7ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ae9f0"/>
        <function-ref name="write" scoped="" ref="0x10d7aeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10d79dad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10d79dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d79de50"/>
        <function-ref name="writeDone" scoped="" ref="0x10d79c020"/>
        <function-ref name="write" scoped="" ref="0x10d79c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10d79c340"/>
        <function-ref name="readDone" scoped="" ref="0x10d79c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10d7be2f0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10d7be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7be670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x10d7b7490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x10d7b7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b7810"/>
        <function-ref name="write" scoped="" ref="0x10d7b79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10d7b3480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10d7b3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b3800"/>
        <function-ref name="write" scoped="" ref="0x10d7b3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x10d7abe50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x10d7abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7aa210"/>
        <function-ref name="write" scoped="" ref="0x10d7aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10d7b0e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10d7b0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ae210"/>
        <function-ref name="write" scoped="" ref="0x10d7ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x10d7aa670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x10d7aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7aa9f0"/>
        <function-ref name="write" scoped="" ref="0x10d7aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10d7b2670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10d7b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b29f0"/>
        <function-ref name="write" scoped="" ref="0x10d7b2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10d7bd670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10d7bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7bd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10d7b2e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10d7b2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7b1210"/>
        <function-ref name="write" scoped="" ref="0x10d7b13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d765c30" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d765c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d764020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d7641b0"/>
        <function-ref name="request" scoped="" ref="0x10d764340"/>
        <function-ref name="granted" scoped="" ref="0x10d7644d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10d764660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x10d7b8160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x10d7b8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7b84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x10d7b8e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x10d7b8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7b71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x10d7a22f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10d7a22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a2670"/>
        <function-ref name="write" scoped="" ref="0x10d7a2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x10d7a3ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10d7a3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a3e50"/>
        <function-ref name="write" scoped="" ref="0x10d7a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x10d7ba6b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10d7ba6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7baa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x10d7a32f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d7a32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a3670"/>
        <function-ref name="write" scoped="" ref="0x10d7a3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10d79e2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10d79e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d79e670"/>
        <function-ref name="write" scoped="" ref="0x10d79e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x10d7ace50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x10d7ace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ab210"/>
        <function-ref name="write" scoped="" ref="0x10d7ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x10d7a7670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x10d7a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a79f0"/>
        <function-ref name="write" scoped="" ref="0x10d7a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10d7bdcc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10d7bdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7bc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x10d7bc9c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10d7bc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7bcd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10d7aee50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10d7aee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ad210"/>
        <function-ref name="write" scoped="" ref="0x10d7ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x10d7b87b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x10d7b87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7b8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10d7ad670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10d7ad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ad9f0"/>
        <function-ref name="write" scoped="" ref="0x10d7adb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x10d7a5e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x10d7a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7a4610"/>
        <function-ref name="write" scoped="" ref="0x10d7a47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10d79c7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10d79c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d79cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x10d79ccb0"/>
        <function-ref name="write" scoped="" ref="0x10d79ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x10d79b020"/>
        <function-ref name="readDone" scoped="" ref="0x10d79b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x10d7ecdf0" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x10d7ecdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d7e91c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x10d7e9350"/>
        <function-ref name="sfd" scoped="" ref="0x10d7e94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10d7e97c0" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d7e97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d7e9b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x10d7e7020" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x10d7e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10d7e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10d7ec5c0" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10d7ec5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d7ec940"/>
        <function-ref name="stop" scoped="" ref="0x10d7ecad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x10d7e0380" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x10d7e0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d7e0700"/>
        <function-ref name="isInput" scoped="" ref="0x10d7e0890"/>
        <function-ref name="toggle" scoped="" ref="0x10d7e0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x10d7e0bb0"/>
        <function-ref name="get" scoped="" ref="0x10d7e0d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d7df020"/>
        <function-ref name="set" scoped="" ref="0x10d7df1b0"/>
        <function-ref name="clr" scoped="" ref="0x10d7df340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x10d7d9b90" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10d7d9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10d7d8020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10d7d81b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10d7d8340"/>
        <function-ref name="syncDone" scoped="" ref="0x10d7d84d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10d7d8660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10d7d87f0"/>
        <function-ref name="setChannel" scoped="" ref="0x10d7d8980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10d7d8b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10d7d8ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10d7d8e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10d7d7020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10d7d71b0"/>
        <function-ref name="sync" scoped="" ref="0x10d7d7340"/>
        <function-ref name="getChannel" scoped="" ref="0x10d7d75d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10d7d7760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x10d7c29d0" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x10d7c29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d7c2d50"/>
        <function-ref name="runTask" scoped="" ref="0x10d7c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x10d7d7d70" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x10d7d7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10d7d4330"/>
        <function-ref name="clear" scoped="" ref="0x10d7d4a60"/>
        <function-ref name="isValid" scoped="" ref="0x10d7d6ba0"/>
        <function-ref name="set" scoped="" ref="0x10d7d3210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x10d7df6b0" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x10d7df6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d7dfa30"/>
        <function-ref name="isInput" scoped="" ref="0x10d7dfbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d7dfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d7de020"/>
        <function-ref name="get" scoped="" ref="0x10d7de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d7de340"/>
        <function-ref name="set" scoped="" ref="0x10d7de4d0"/>
        <function-ref name="clr" scoped="" ref="0x10d7de660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x10d7d2cb0" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10d7d2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7d10a0"/>
        <function-ref name="write" scoped="" ref="0x10d7d1230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x10d7d1590" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10d7d1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7d1910"/>
        <function-ref name="write" scoped="" ref="0x10d7d1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x10d7cf6d0" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10d7cf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7cfa50"/>
        <function-ref name="write" scoped="" ref="0x10d7cfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10d7da330" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10d7da330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10d7da6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10d7da840"/>
        <function-ref name="getRssi" scoped="" ref="0x10d7da9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10d7dab60"/>
        <function-ref name="getPower" scoped="" ref="0x10d7dacf0"/>
        <function-ref name="getLqi" scoped="" ref="0x10d7dae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x10d7e3550" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x10d7e3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d7e38d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x10d7e3a60"/>
        <function-ref name="sfd" scoped="" ref="0x10d7e3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x10d7db3a0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x10d7db3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7db720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x10d7e1020" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x10d7e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d7e13a0"/>
        <function-ref name="isInput" scoped="" ref="0x10d7e1530"/>
        <function-ref name="toggle" scoped="" ref="0x10d7e16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d7e1850"/>
        <function-ref name="get" scoped="" ref="0x10d7e19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d7e1b70"/>
        <function-ref name="set" scoped="" ref="0x10d7e1d00"/>
        <function-ref name="clr" scoped="" ref="0x10d7e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x10d7ce020" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d7ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7ce3a0"/>
        <function-ref name="write" scoped="" ref="0x10d7ce530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d7e4620" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d7e4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d7e49a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10d7d91e0" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d7d91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10d7d9560"/>
        <function-ref name="getHeader" scoped="" ref="0x10d7d96f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10d7d9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10d7e2020" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d7e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d7e23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10d7dd6e0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10d7dd6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d7dda60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d7ddbf0"/>
        <function-ref name="request" scoped="" ref="0x10d7ddd80"/>
        <function-ref name="granted" scoped="" ref="0x10d7dc020"/>
        <function-ref name="isOwner" scoped="" ref="0x10d7dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x10d7d1e00" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10d7d1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7cf1c0"/>
        <function-ref name="write" scoped="" ref="0x10d7cf350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x10d7dc530" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10d7dc530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d7dc8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x10d7dca40"/>
        <function-ref name="write" scoped="" ref="0x10d7dcbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x10d7dcd60"/>
        <function-ref name="readDone" scoped="" ref="0x10d7db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x10d7ce8b0" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10d7ce8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7cee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x10d7e27c0" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x10d7e27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10d7e2b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d7cd150" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d7cd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d7cd4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d7cd660"/>
        <function-ref name="led1On" scoped="" ref="0x10d7cd7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d7cd980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d7cdb10"/>
        <function-ref name="get" scoped="" ref="0x10d7cdca0"/>
        <function-ref name="led1Off" scoped="" ref="0x10d7cde30"/>
        <function-ref name="led2Off" scoped="" ref="0x10d7cc4d0"/>
        <function-ref name="set" scoped="" ref="0x10d7cc020"/>
        <function-ref name="led0On" scoped="" ref="0x10d7cc1b0"/>
        <function-ref name="led2On" scoped="" ref="0x10d7cc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x10d7d23e0" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10d7d23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d7d2760"/>
        <function-ref name="write" scoped="" ref="0x10d7d28f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x10d7d3b10" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x10d7d3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x10d7dea50" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x10d7dea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d7dedd0"/>
        <function-ref name="disable" scoped="" ref="0x10d7dd020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10d7dd1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10d7dd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x10d7dbad0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10d7dbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d7da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10d7e4ca0" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10d7e4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d7e30a0"/>
        <function-ref name="stop" scoped="" ref="0x10d7e3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10d878a70" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10d878a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10d878df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x10d81e660" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10d81e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10d81e9e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10d81eb70"/>
        <function-ref name="getRssi" scoped="" ref="0x10d81ed00"/>
        <function-ref name="getNetwork" scoped="" ref="0x10d81b020"/>
        <function-ref name="getPower" scoped="" ref="0x10d81b1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x10d81b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x10d877550" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10d877550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10d876b00"/>
        <function-ref name="clear" scoped="" ref="0x10d8742a0"/>
        <function-ref name="isValid" scoped="" ref="0x10d8763d0"/>
        <function-ref name="set" scoped="" ref="0x10d8749d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x10d8780c0" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d8780c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10d878440"/>
        <function-ref name="getHeader" scoped="" ref="0x10d8785d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10d878760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x10d86f480" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10d86f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d86f800"/>
        <function-ref name="isSet" scoped="" ref="0x10d86f990"/>
        <function-ref name="cancel" scoped="" ref="0x10d86fb20"/>
        <function-ref name="set" scoped="" ref="0x10d86fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x10d873660" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10d873660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10d872ce0"/>
        <function-ref name="clear" scoped="" ref="0x10d870460"/>
        <function-ref name="isValid" scoped="" ref="0x10d8725b0"/>
        <function-ref name="set" scoped="" ref="0x10d870b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10d81b6e0" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10d81b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10d81ba60"/>
        <function-ref name="noAck" scoped="" ref="0x10d81bbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10d81bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10d868020" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10d868020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10d8683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x10d86ed10" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10d86ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10d86a0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10d86a270"/>
        <function-ref name="getRssi" scoped="" ref="0x10d86a400"/>
        <function-ref name="getNetwork" scoped="" ref="0x10d86a590"/>
        <function-ref name="getPower" scoped="" ref="0x10d86a720"/>
        <function-ref name="getLqi" scoped="" ref="0x10d86a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10d85f4a0" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10d85f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d85f820"/>
        <function-ref name="payloadLength" scoped="" ref="0x10d85f9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x10d85fb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d85fcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10d85fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x10d868a80" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10d868a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10d865020"/>
        <function-ref name="clear" scoped="" ref="0x10d865750"/>
        <function-ref name="isValid" scoped="" ref="0x10d8668d0"/>
        <function-ref name="set" scoped="" ref="0x10d865e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x10d869640" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10d869640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10d8699c0"/>
        <function-ref name="getHeader" scoped="" ref="0x10d869b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x10d869ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x10d8608b0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10d8608b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d860c30"/>
        <function-ref name="isSet" scoped="" ref="0x10d860dc0"/>
        <function-ref name="cancel" scoped="" ref="0x10d85f020"/>
        <function-ref name="set" scoped="" ref="0x10d85f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x10d85a820" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x10d85a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d85c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x10d85cb80" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x10d85cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d85b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x10d864af0" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10d864af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10d8610d0"/>
        <function-ref name="clear" scoped="" ref="0x10d861800"/>
        <function-ref name="isValid" scoped="" ref="0x10d862970"/>
        <function-ref name="set" scoped="" ref="0x10d860020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10d86ac50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10d86ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10d869020"/>
        <function-ref name="noAck" scoped="" ref="0x10d8691b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10d869340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10d8c64e0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10d8c64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d8be150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10d8be7c0" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d8be7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d8bc620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d8bb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d8bcae0"/>
        <function-ref name="overflow" scoped="" ref="0x10d8bb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10d8b67d0" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10d8b67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d8a9c40"/>
        <function-ref name="fired" scoped="" ref="0x10d8ab260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d8a9020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d8abb60"/>
        <function-ref name="getdt" scoped="" ref="0x10d8a8590"/>
        <function-ref name="gett0" scoped="" ref="0x10d8a8110"/>
        <function-ref name="isRunning" scoped="" ref="0x10d8ab6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d8b5400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d8a9630"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d8b58d0"/>
        <function-ref name="stop" scoped="" ref="0x10d8b5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10d8a8b80" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10d8a8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d9067d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d8b7110" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d8b7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d8b7490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10d8d9af0" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10d8d9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d936390"/>
        <function-ref name="fired" scoped="" ref="0x10d937360"/>
        <function-ref name="startAt" scoped="" ref="0x10d937ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x10d937820"/>
        <function-ref name="getAlarm" scoped="" ref="0x10d936850"/>
        <function-ref name="start" scoped="" ref="0x10d8d8970"/>
        <function-ref name="stop" scoped="" ref="0x10d8d8e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d8d92a0" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d8d92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d8d9620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e3ef260" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e3ef260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e3edb30"/>
        <function-ref name="fired" scoped="" ref="0x10e3eea60"/>
        <function-ref name="startAt" scoped="" ref="0x10e3ed4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x10e3ed020"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e3eb020"/>
        <function-ref name="start" scoped="" ref="0x10e3ee090"/>
        <function-ref name="stop" scoped="" ref="0x10e3ee5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e3f09d0" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e3f09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e3f0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10e3d7a80" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10e3d7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10e3d7e00"/>
        <function-ref name="setEvent" scoped="" ref="0x10e3d6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10e3d61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10e3d6340"/>
        <function-ref name="fired" scoped="" ref="0x10e3d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10e3d9020" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e3d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e3d93a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e3d9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e3d96c0"/>
        <function-ref name="get" scoped="" ref="0x10e3d9850"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e3d99e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e3d9b70"/>
        <function-ref name="getMode" scoped="" ref="0x10e3d9d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e3d8020"/>
        <function-ref name="overflow" scoped="" ref="0x10e3d81b0"/>
        <function-ref name="setMode" scoped="" ref="0x10e3d8340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e3d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10e3d8760" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e3d8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10e3d8ae0"/>
        <function-ref name="getControl" scoped="" ref="0x10e3d8c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e3d8e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10e3d7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10e3d71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e3d7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10e3d74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10e3d7660"/>
        <function-ref name="setControl" scoped="" ref="0x10e3d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x10e3cd760" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10e3cd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10e3cdae0"/>
        <function-ref name="setEvent" scoped="" ref="0x10e3cdc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10e3cde00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10e3cc020"/>
        <function-ref name="fired" scoped="" ref="0x10e3cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10e3d0dd0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e3d0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e3cf180"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e3cf310"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e3cf4a0"/>
        <function-ref name="get" scoped="" ref="0x10e3cf630"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e3cf7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e3cf950"/>
        <function-ref name="getMode" scoped="" ref="0x10e3cfae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e3cfc70"/>
        <function-ref name="overflow" scoped="" ref="0x10e3cfe00"/>
        <function-ref name="setMode" scoped="" ref="0x10e3ce020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e3ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e3d4bf0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e3d4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e3d04e0"/>
        <function-ref name="fired" scoped="" ref="0x10e3d14e0"/>
        <function-ref name="startAt" scoped="" ref="0x10e3d1e60"/>
        <function-ref name="isRunning" scoped="" ref="0x10e3d19a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e3d09a0"/>
        <function-ref name="start" scoped="" ref="0x10e3d2a80"/>
        <function-ref name="stop" scoped="" ref="0x10e3d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e3d4360" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e3d4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e3d46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10e3ce440" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e3ce440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10e3ce7c0"/>
        <function-ref name="getControl" scoped="" ref="0x10e3ce950"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e3ceae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10e3cec70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10e3cee00"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e3cd020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10e3cd1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10e3cd340"/>
        <function-ref name="setControl" scoped="" ref="0x10e3cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10d8f5080" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d8f5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d8f4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d8f49a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d8f44e0"/>
        <function-ref name="overflow" scoped="" ref="0x10d8f4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10d8ec0f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10d8ec0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d8eb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d8eb9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d8eb4e0"/>
        <function-ref name="overflow" scoped="" ref="0x10d8ebe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10d8f0cd0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d8f0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d8efb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d8ee550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d8ee090"/>
        <function-ref name="overflow" scoped="" ref="0x10d8eea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e3e95f0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e3e95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e3e7e50"/>
        <function-ref name="fired" scoped="" ref="0x10e3e8e00"/>
        <function-ref name="startAt" scoped="" ref="0x10e3e7800"/>
        <function-ref name="isRunning" scoped="" ref="0x10e3e7340"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e3e6340"/>
        <function-ref name="start" scoped="" ref="0x10e3e8430"/>
        <function-ref name="stop" scoped="" ref="0x10e3e8940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10e3e3d20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10e3e3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd40460"/>
            <typename><typedef-ref name="T32khz" ref="0x10cd407d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e3e0670"/>
        <function-ref name="fired" scoped="" ref="0x10e3e1550"/>
        <function-ref name="startAt" scoped="" ref="0x10e3e0020"/>
        <function-ref name="isRunning" scoped="" ref="0x10e3e1a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e3e0b30"/>
        <function-ref name="start" scoped="" ref="0x10e3e2b60"/>
        <function-ref name="stop" scoped="" ref="0x10e3e1090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10e3e69b0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10e3e69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e3e57e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e3e31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e3e5ca0"/>
        <function-ref name="overflow" scoped="" ref="0x10e3e3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x10d964020" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x10d964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d9643a0"/>
        <function-ref name="runTask" scoped="" ref="0x10d964530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x10d908cd0" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10d908cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d965670"/>
        <function-ref name="fired" scoped="" ref="0x10d966550"/>
        <function-ref name="startAt" scoped="" ref="0x10d965020"/>
        <function-ref name="isRunning" scoped="" ref="0x10d966a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x10d965b30"/>
        <function-ref name="start" scoped="" ref="0x10d968b60"/>
        <function-ref name="stop" scoped="" ref="0x10d966090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d90d830" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d90d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d909cf0"/>
        <function-ref name="fired" scoped="" ref="0x10d90a300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d9090d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d90ac00"/>
        <function-ref name="getdt" scoped="" ref="0x10d908660"/>
        <function-ref name="gett0" scoped="" ref="0x10d9081e0"/>
        <function-ref name="isRunning" scoped="" ref="0x10d90a780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d90c480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d9096e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d90c950"/>
        <function-ref name="stop" scoped="" ref="0x10d90ce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x10d976a00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x10d976a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d976d80"/>
        <function-ref name="runTask" scoped="" ref="0x10d974020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10d97b640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10d97b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d977c40"/>
        <function-ref name="fired" scoped="" ref="0x10d9781e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d977020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d978ae0"/>
        <function-ref name="getdt" scoped="" ref="0x10d976590"/>
        <function-ref name="gett0" scoped="" ref="0x10d976110"/>
        <function-ref name="isRunning" scoped="" ref="0x10d978660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d97a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d977630"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d97a860"/>
        <function-ref name="stop" scoped="" ref="0x10d97ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d981150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d981150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d97c700"/>
        <function-ref name="fired" scoped="" ref="0x10d97fc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d97ea50"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d97e5b0"/>
        <function-ref name="getdt" scoped="" ref="0x10d97b090"/>
        <function-ref name="gett0" scoped="" ref="0x10d97cba0"/>
        <function-ref name="isRunning" scoped="" ref="0x10d97e110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d981d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d97c0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d97f2a0"/>
        <function-ref name="stop" scoped="" ref="0x10d97f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10d9722b0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10d9722b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d971020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10d971690" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d971690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d9705b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d96f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d970a70"/>
        <function-ref name="overflow" scoped="" ref="0x10d96f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d9cb8c0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d9cb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d9b7cf0"/>
        <function-ref name="fired" scoped="" ref="0x10d9b9320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d9b70d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d9b9c20"/>
        <function-ref name="getdt" scoped="" ref="0x10d9b6660"/>
        <function-ref name="gett0" scoped="" ref="0x10d9b61e0"/>
        <function-ref name="isRunning" scoped="" ref="0x10d9b97a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d9ba4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d9b76e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d9ba9b0"/>
        <function-ref name="stop" scoped="" ref="0x10d9bae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10d9c22c0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10d9c22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10cd41b40"/>
            <typename><typedef-ref name="TMilli" ref="0x10cd40020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d9be870"/>
        <function-ref name="fired" scoped="" ref="0x10d9c1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d9c0c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d9c0780"/>
        <function-ref name="getdt" scoped="" ref="0x10d9bd1e0"/>
        <function-ref name="gett0" scoped="" ref="0x10d9becf0"/>
        <function-ref name="isRunning" scoped="" ref="0x10d9c0300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d9c1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d9be260"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d9c14f0"/>
        <function-ref name="stop" scoped="" ref="0x10d9c19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x10d9a6c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10d9a6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a5210"/>
        <function-ref name="write" scoped="" ref="0x10d9a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10d9b0020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10d9b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9b03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x10d9a9c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10d9a9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a8020"/>
        <function-ref name="write" scoped="" ref="0x10d9a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10d9a4670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10d9a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a49f0"/>
        <function-ref name="write" scoped="" ref="0x10d9a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x10d99ce50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x10d99ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99b210"/>
        <function-ref name="write" scoped="" ref="0x10d99b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10d9a4e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10d9a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a2210"/>
        <function-ref name="write" scoped="" ref="0x10d9a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10d9f42f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10d9f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f4670"/>
        <function-ref name="write" scoped="" ref="0x10d9f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10d9f62f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10d9f62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f6670"/>
        <function-ref name="write" scoped="" ref="0x10d9f6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x10d9ae370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10d9ae370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ae6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x10d9fc670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x10d9fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fc9f0"/>
        <function-ref name="write" scoped="" ref="0x10d9fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x10d9f72f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10d9f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f7670"/>
        <function-ref name="write" scoped="" ref="0x10d9f7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x10d9a8c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10d9a8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a7020"/>
        <function-ref name="write" scoped="" ref="0x10d9a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x10d9a7c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10d9a7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a6020"/>
        <function-ref name="write" scoped="" ref="0x10d9a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x10d99e670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x10d99e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99e9f0"/>
        <function-ref name="write" scoped="" ref="0x10d99eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10d9a0e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10d9a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99f210"/>
        <function-ref name="write" scoped="" ref="0x10d99f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10d9a2670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10d9a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a29f0"/>
        <function-ref name="write" scoped="" ref="0x10d9a2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10d9b2970" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10d9b2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10d9b2cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10d9b2e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10d9b1030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x10d9add00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10d9add00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x10d9ac370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x10d9ac370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x10d9fba70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10d9fba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fbdf0"/>
        <function-ref name="write" scoped="" ref="0x10d9fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x10d9acac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x10d9acac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ace40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x10d9f7ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10d9f7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f7e50"/>
        <function-ref name="write" scoped="" ref="0x10d9f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x10d9ad060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10d9ad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ad3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x10d9fde50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x10d9fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fc210"/>
        <function-ref name="write" scoped="" ref="0x10d9fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x10d9a7480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x10d9a7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a7800"/>
        <function-ref name="write" scoped="" ref="0x10d9a7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x10d9a8480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10d9a8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a8800"/>
        <function-ref name="write" scoped="" ref="0x10d9a8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10d9b1950" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10d9b1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9b1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x10d99ae50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x10d99ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fd210"/>
        <function-ref name="write" scoped="" ref="0x10d9fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x10d99b670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x10d99b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99b9f0"/>
        <function-ref name="write" scoped="" ref="0x10d99bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x10d9fd670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x10d9fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fd9f0"/>
        <function-ref name="write" scoped="" ref="0x10d9fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10d9f5ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10d9f5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f5e50"/>
        <function-ref name="write" scoped="" ref="0x10d9f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10d9f6ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10d9f6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f6e50"/>
        <function-ref name="write" scoped="" ref="0x10d9f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x10d99f670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x10d99f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99f9f0"/>
        <function-ref name="write" scoped="" ref="0x10d99fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x10d99be50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x10d99be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99a210"/>
        <function-ref name="write" scoped="" ref="0x10d99a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x10d9f8ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x10d9f8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f8e50"/>
        <function-ref name="write" scoped="" ref="0x10d9f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10d9a1670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10d9a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a19f0"/>
        <function-ref name="write" scoped="" ref="0x10d9a1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10d9f4ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10d9f4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d9f4e50"/>
        <function-ref name="writeDone" scoped="" ref="0x10d9f2020"/>
        <function-ref name="write" scoped="" ref="0x10d9f21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10d9f2340"/>
        <function-ref name="readDone" scoped="" ref="0x10d9f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10d9b1300" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10d9b1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9b1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x10d9a9490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x10d9a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a9810"/>
        <function-ref name="write" scoped="" ref="0x10d9a99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10d9a6480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10d9a6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a6800"/>
        <function-ref name="write" scoped="" ref="0x10d9a6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x10d99ee50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x10d99ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99c210"/>
        <function-ref name="write" scoped="" ref="0x10d99c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10d9a2e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10d9a2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a1210"/>
        <function-ref name="write" scoped="" ref="0x10d9a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x10d99c670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x10d99c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99c9f0"/>
        <function-ref name="write" scoped="" ref="0x10d99cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10d9a5670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10d9a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a59f0"/>
        <function-ref name="write" scoped="" ref="0x10d9a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10d9b0670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10d9b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9b09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10d9a5e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10d9a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a4210"/>
        <function-ref name="write" scoped="" ref="0x10d9a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10d9b3d00" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10d9b3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10d9b20a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10d9b2230"/>
        <function-ref name="request" scoped="" ref="0x10d9b23c0"/>
        <function-ref name="granted" scoped="" ref="0x10d9b2550"/>
        <function-ref name="isOwner" scoped="" ref="0x10d9b26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x10d9ab160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x10d9ab160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ab4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x10d9abe00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x10d9abe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9a91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x10d9f82f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10d9f82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f8670"/>
        <function-ref name="write" scoped="" ref="0x10d9f8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x10d9faad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10d9faad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fae50"/>
        <function-ref name="write" scoped="" ref="0x10d9f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x10d9ad6b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10d9ad6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ada30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x10d9fa2f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10d9fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fa670"/>
        <function-ref name="write" scoped="" ref="0x10d9fa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10d9f52f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10d9f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9f5670"/>
        <function-ref name="write" scoped="" ref="0x10d9f5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x10d99fe50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x10d99fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99e210"/>
        <function-ref name="write" scoped="" ref="0x10d99e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x10d99a670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x10d99a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d99a9f0"/>
        <function-ref name="write" scoped="" ref="0x10d99ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10d9b0cc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10d9b0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9ae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x10d9ae9c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10d9ae9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9aed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10d9a1e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10d9a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a0210"/>
        <function-ref name="write" scoped="" ref="0x10d9a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x10d9ab7b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x10d9ab7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10d9abb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10d9a0670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10d9a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9a09f0"/>
        <function-ref name="write" scoped="" ref="0x10d9a0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x10d9fce50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x10d9fce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10d9fb610"/>
        <function-ref name="write" scoped="" ref="0x10d9fb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10d9f27a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10d9f27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10d9f2b20"/>
        <function-ref name="writeDone" scoped="" ref="0x10d9f2cb0"/>
        <function-ref name="write" scoped="" ref="0x10d9f2e40"/>
        <function-ref name="beginRead" scoped="" ref="0x10d9f1020"/>
        <function-ref name="readDone" scoped="" ref="0x10d9f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x10da31a20" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10da31a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10da31da0"/>
        <function-ref name="rand32" scoped="" ref="0x10da2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x10da2f920" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x10da2f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da31560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d9cd990" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d9cd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d9cdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x10da2aa20" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10da2aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10da2ada0"/>
        <function-ref name="rand32" scoped="" ref="0x10da29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x10da2b940" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x10da2b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da2a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10da2b080" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10da2b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da2b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10da33aa0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10da33aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10da33e20"/>
        <function-ref name="toIdle" scoped="" ref="0x10da2c020"/>
        <function-ref name="isState" scoped="" ref="0x10da2c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x10da2c340"/>
        <function-ref name="requestState" scoped="" ref="0x10da2c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x10da2c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10da13020" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10da13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da133a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10da13530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da136c0"/>
        <function-ref name="cancel" scoped="" ref="0x10da13850"/>
        <function-ref name="sendDone" scoped="" ref="0x10da139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10da14220" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10da14220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da145a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10da14730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da148c0"/>
        <function-ref name="cancel" scoped="" ref="0x10da14a50"/>
        <function-ref name="sendDone" scoped="" ref="0x10da14be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10da0fe60" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10da0fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da0d210"/>
        <function-ref name="getPayload" scoped="" ref="0x10da0d3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da0d530"/>
        <function-ref name="cancel" scoped="" ref="0x10da0d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x10da0d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10da12a10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10da12a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da12d90"/>
        <function-ref name="getPayload" scoped="" ref="0x10da0f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da0f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x10da0f340"/>
        <function-ref name="sendDone" scoped="" ref="0x10da0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x10da0c8f0" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10da0c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10da0cc70"/>
        <function-ref name="rand32" scoped="" ref="0x10da0ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10da0f750" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10da0f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da0fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10da0b170" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10da0b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10da0b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x10da0b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x10da0b810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x10da0dae0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10da0dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10da0de60"/>
        <function-ref name="toIdle" scoped="" ref="0x10da0c020"/>
        <function-ref name="isState" scoped="" ref="0x10da0c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x10da0c340"/>
        <function-ref name="requestState" scoped="" ref="0x10da0c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x10da0c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10da10690" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10da10690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10da10a10"/>
        <function-ref name="toIdle" scoped="" ref="0x10da10ba0"/>
        <function-ref name="isState" scoped="" ref="0x10da10d30"/>
        <function-ref name="isIdle" scoped="" ref="0x10da5f020"/>
        <function-ref name="requestState" scoped="" ref="0x10da5f1b0"/>
        <function-ref name="forceState" scoped="" ref="0x10da5f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10da59950" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10da59950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da59cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10da5ca90" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10da5ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da5ce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x10da59200" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x10da59200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da59580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10da543f0" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10da543f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da54770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10da55b50" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10da55b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10da58e20" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10da58e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da551c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10da54a70" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10da54a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10da54df0"/>
        <function-ref name="getHeader" scoped="" ref="0x10da53020"/>
        <function-ref name="getMetadata" scoped="" ref="0x10da531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x10da55550" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x10da55550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da558d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10da8b020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10da8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10da8b6b0" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10da8b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da8ba30"/>
        <function-ref name="getPayload" scoped="" ref="0x10da8bbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da8bd50"/>
        <function-ref name="cancel" scoped="" ref="0x10da8a020"/>
        <function-ref name="sendDone" scoped="" ref="0x10da8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10da908e0" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10da908e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da90c60"/>
        <function-ref name="getPayload" scoped="" ref="0x10da90df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da8e020"/>
        <function-ref name="cancel" scoped="" ref="0x10da8e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10da8e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x10da8ec90" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x10da8ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da8d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10da8d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da8d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x10da8d550"/>
        <function-ref name="sendDone" scoped="" ref="0x10da8d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10da8e5e0" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10da8e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da8e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10da91be0" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10da91be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10da90020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10da901b0"/>
        <function-ref name="request" scoped="" ref="0x10da90340"/>
        <function-ref name="granted" scoped="" ref="0x10da904d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10da90660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x10da8da50" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x10da8da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da8ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x10da8c170" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x10da8c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10da8c4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10da8c680"/>
        <function-ref name="getPayload" scoped="" ref="0x10da8c810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da8c9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10da8cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10da81d70" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10da81d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da80180"/>
        <function-ref name="getPayload" scoped="" ref="0x10da80310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da804a0"/>
        <function-ref name="cancel" scoped="" ref="0x10da80630"/>
        <function-ref name="sendDone" scoped="" ref="0x10da807c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10da80b10" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10da80b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x10dab9db0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x10dab9db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10dab8180"/>
        <function-ref name="runTask" scoped="" ref="0x10dab8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10da7f2f0" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10da7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10da7f670"/>
        <function-ref name="setNetwork" scoped="" ref="0x10da7f800"/>
        <function-ref name="getRssi" scoped="" ref="0x10da7f990"/>
        <function-ref name="getNetwork" scoped="" ref="0x10da7fb20"/>
        <function-ref name="getPower" scoped="" ref="0x10da7fcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x10da7fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x10da84a20" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x10da84a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da84da0"/>
        <function-ref name="getPayload" scoped="" ref="0x10da83020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da831b0"/>
        <function-ref name="cancel" scoped="" ref="0x10da83340"/>
        <function-ref name="sendDone" scoped="" ref="0x10da834d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x10da7eb70" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x10da7eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10da7d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x10da7d1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10da7d340"/>
        <function-ref name="dequeue" scoped="" ref="0x10da7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10da7e170" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10da7e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10da7e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x10da7e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x10da7e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x10da84370" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x10da84370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da846f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10da867b0" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10da867b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10da86b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10da86cc0"/>
        <function-ref name="request" scoped="" ref="0x10da86e50"/>
        <function-ref name="granted" scoped="" ref="0x10da85020"/>
        <function-ref name="isOwner" scoped="" ref="0x10da851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x10da854d0" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x10da854d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da85850"/>
        <function-ref name="getPayload" scoped="" ref="0x10da859e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da85b70"/>
        <function-ref name="cancel" scoped="" ref="0x10da85d00"/>
        <function-ref name="sendDone" scoped="" ref="0x10da84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x10da83840" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x10da83840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da83bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x10da81020" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x10da81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10da813a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10da81530"/>
        <function-ref name="getPayload" scoped="" ref="0x10da816c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da81850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10da819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10db01dd0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10db01dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10db00180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x10db00410" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x10db00410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10db00790"/>
        <function-ref name="isEmpty" scoped="" ref="0x10db00920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10db00ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x10db00c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10daf5b80" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10daf5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10daf4020"/>
        <function-ref name="stopDone" scoped="" ref="0x10daf41b0"/>
        <function-ref name="start" scoped="" ref="0x10daf4340"/>
        <function-ref name="stop" scoped="" ref="0x10daf44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10daf2860" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10daf2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10daf2be0"/>
        <function-ref name="getPayload" scoped="" ref="0x10daf2d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10daf1020"/>
        <function-ref name="cancel" scoped="" ref="0x10daf11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10daf1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10daf1690" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10daf1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10daf1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10daf9ce0" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10daf9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10daf60a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10daf6230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10daf63c0"/>
        <function-ref name="cancel" scoped="" ref="0x10daf6550"/>
        <function-ref name="sendDone" scoped="" ref="0x10daf66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10daf5080" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10daf5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10daf5400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10daf5590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10daf5720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10daf58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x10daf4800" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x10daf4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10daf4b80"/>
        <function-ref name="toIdle" scoped="" ref="0x10daf4d10"/>
        <function-ref name="isState" scoped="" ref="0x10daf2020"/>
        <function-ref name="isIdle" scoped="" ref="0x10daf21b0"/>
        <function-ref name="requestState" scoped="" ref="0x10daf2340"/>
        <function-ref name="forceState" scoped="" ref="0x10daf24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x10daf1d90" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x10daf1d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10daf0180"/>
        <function-ref name="stopDone" scoped="" ref="0x10daf0310"/>
        <function-ref name="start" scoped="" ref="0x10daf04a0"/>
        <function-ref name="stop" scoped="" ref="0x10daf0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10daf6980" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10daf6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10daf6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10daed2d0" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10daed2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10daed650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10daed7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10daed970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10daedb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10daef580" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10daef580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10daef900"/>
        <function-ref name="toIdle" scoped="" ref="0x10daefa90"/>
        <function-ref name="isState" scoped="" ref="0x10daefc20"/>
        <function-ref name="isIdle" scoped="" ref="0x10daefdb0"/>
        <function-ref name="requestState" scoped="" ref="0x10daee020"/>
        <function-ref name="forceState" scoped="" ref="0x10daee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10dae0d70" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10dae0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10dadf180"/>
        <function-ref name="getPayload" scoped="" ref="0x10dadf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dadf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x10dadf630"/>
        <function-ref name="sendDone" scoped="" ref="0x10dadf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10dae3340" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10dae3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10dae36c0"/>
        <function-ref name="getPayload" scoped="" ref="0x10dae3850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dae39e0"/>
        <function-ref name="cancel" scoped="" ref="0x10dae3b70"/>
        <function-ref name="sendDone" scoped="" ref="0x10dae3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x10dae0020" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x10dae0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x10dae03a0"/>
        <function-ref name="setRetries" scoped="" ref="0x10dae0530"/>
        <function-ref name="getRetries" scoped="" ref="0x10dae06c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x10dae0850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x10dae09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x10dadb1a0" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10dadb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10dadb520"/>
        <function-ref name="noAck" scoped="" ref="0x10dadb6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10dadb840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x10dade400" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x10dade400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x10dade780"/>
        <function-ref name="setRetries" scoped="" ref="0x10dade910"/>
        <function-ref name="getRetries" scoped="" ref="0x10dadeaa0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x10dadec30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x10dadedc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10db23690" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10db23690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10db23a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10db24860" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10db24860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10db24be0"/>
        <function-ref name="getPayload" scoped="" ref="0x10db24d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10db23020"/>
        <function-ref name="cancel" scoped="" ref="0x10db231b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10db23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x10db21610" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10db21610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10db21990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10db21b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10db21cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x10db21e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10db20020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10db201b0"/>
        <function-ref name="setChannel" scoped="" ref="0x10db20340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10db204d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10db20660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10db207f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10db20980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10db20b10"/>
        <function-ref name="sync" scoped="" ref="0x10db20ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x10db1f020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10db1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10db268b0" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10db268b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10db26c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10db26dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10db24020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10db241b0"/>
        <function-ref name="setCca" scoped="" ref="0x10db24340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10db244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x10db27ce0" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x10db27ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x10db260a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x10db1e1f0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x10db1e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10db1e570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10db1e700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10db1e890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10db1ea20"/>
        <function-ref name="setCca" scoped="" ref="0x10db1ebb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10db1ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10db28a80" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10db28a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10db28e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x10db27020"/>
        <function-ref name="getPayload" scoped="" ref="0x10db271b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10db27340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10db274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10db2ee80" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10db2ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10db2b220"/>
        <function-ref name="getPayload" scoped="" ref="0x10db2b3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10db2b540"/>
        <function-ref name="cancel" scoped="" ref="0x10db2b6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x10db2b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10db2adb0" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10db2adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10db29180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10db23ce0" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10db23ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10db220a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10db22230"/>
        <function-ref name="getRssi" scoped="" ref="0x10db223c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10db22550"/>
        <function-ref name="getPower" scoped="" ref="0x10db226e0"/>
        <function-ref name="getLqi" scoped="" ref="0x10db22870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x10db1f4d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10db1f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x10db1f950"/>
        <function-ref name="changed" scoped="" ref="0x10db1fae0"/>
        <function-ref name="amGroup" scoped="" ref="0x10db1fc70"/>
        <function-ref name="setAddress" scoped="" ref="0x10db1fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10db22b70" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10db22b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10db21020"/>
        <function-ref name="getHeader" scoped="" ref="0x10db211b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10db21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10db2a1d0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10db2a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10db2a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10db1dd30" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10db1dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10db1c0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10db1c270"/>
        <function-ref name="led1On" scoped="" ref="0x10db1c400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10db1c590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10db1c720"/>
        <function-ref name="get" scoped="" ref="0x10db1c8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x10db1ca40"/>
        <function-ref name="led2Off" scoped="" ref="0x10db1b1b0"/>
        <function-ref name="set" scoped="" ref="0x10db1cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x10db1cd60"/>
        <function-ref name="led2On" scoped="" ref="0x10db1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10db29430" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10db29430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10db297b0"/>
        <function-ref name="source" scoped="" ref="0x10db29940"/>
        <function-ref name="address" scoped="" ref="0x10db29ad0"/>
        <function-ref name="destination" scoped="" ref="0x10db29c60"/>
        <function-ref name="setSource" scoped="" ref="0x10db29df0"/>
        <function-ref name="setDestination" scoped="" ref="0x10db28020"/>
        <function-ref name="type" scoped="" ref="0x10db281b0"/>
        <function-ref name="setType" scoped="" ref="0x10db28340"/>
        <function-ref name="isForMe" scoped="" ref="0x10db284d0"/>
        <function-ref name="setGroup" scoped="" ref="0x10db28660"/>
        <function-ref name="localGroup" scoped="" ref="0x10db287f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x10db1d0f0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x10db1d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10db1d470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10db1d600"/>
        <function-ref name="request" scoped="" ref="0x10db1d790"/>
        <function-ref name="granted" scoped="" ref="0x10db1d920"/>
        <function-ref name="isOwner" scoped="" ref="0x10db1dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10dc25020" loc="49:../../tos/system/AMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10dc25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10dc253a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10dc25530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dc256c0"/>
        <function-ref name="cancel" scoped="" ref="0x10dc25850"/>
        <function-ref name="sendDone" scoped="" ref="0x10dc259e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10dc25c30" loc="50:../../tos/system/AMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10dc25c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dc24020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10dc241b0"/>
        <function-ref name="getPayload" scoped="" ref="0x10dc24340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dc244d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10dc24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10dc248b0" loc="51:../../tos/system/AMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10dc248b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10dc24c30"/>
        <function-ref name="source" scoped="" ref="0x10dc24dc0"/>
        <function-ref name="address" scoped="" ref="0x10dc23020"/>
        <function-ref name="destination" scoped="" ref="0x10dc231b0"/>
        <function-ref name="setSource" scoped="" ref="0x10dc23340"/>
        <function-ref name="setDestination" scoped="" ref="0x10dc234d0"/>
        <function-ref name="type" scoped="" ref="0x10dc23660"/>
        <function-ref name="setType" scoped="" ref="0x10dc237f0"/>
        <function-ref name="isForMe" scoped="" ref="0x10dc23980"/>
        <function-ref name="setGroup" scoped="" ref="0x10dc23b10"/>
        <function-ref name="localGroup" scoped="" ref="0x10dc23ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10dc22020" loc="52:../../tos/system/AMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10dc22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10dc223a0"/>
        <function-ref name="noAck" scoped="" ref="0x10dc22530"/>
        <function-ref name="wasAcked" scoped="" ref="0x10dc226c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10e4dab60" loc="49:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10e4dab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10e4d9020"/>
        <function-ref name="getPayload" scoped="" ref="0x10e4d91b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10e4d9340"/>
        <function-ref name="cancel" scoped="" ref="0x10e4d94d0"/>
        <function-ref name="sendDone" scoped="" ref="0x10e4d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10e4d98b0" loc="50:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10e4d98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e4d9c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x10e4d9dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x10e4d8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10e4d81b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10e4d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10e4d8590" loc="51:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10e4d8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10e4d8910"/>
        <function-ref name="source" scoped="" ref="0x10e4d8aa0"/>
        <function-ref name="address" scoped="" ref="0x10e4d8c30"/>
        <function-ref name="destination" scoped="" ref="0x10e4d8dc0"/>
        <function-ref name="setSource" scoped="" ref="0x10e4d7020"/>
        <function-ref name="setDestination" scoped="" ref="0x10e4d71b0"/>
        <function-ref name="type" scoped="" ref="0x10e4d7340"/>
        <function-ref name="setType" scoped="" ref="0x10e4d74d0"/>
        <function-ref name="isForMe" scoped="" ref="0x10e4d7660"/>
        <function-ref name="setGroup" scoped="" ref="0x10e4d77f0"/>
        <function-ref name="localGroup" scoped="" ref="0x10e4d7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10e4d7c10" loc="52:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceiverAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10e4d7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10e4d6020"/>
        <function-ref name="noAck" scoped="" ref="0x10e4d61b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10e4d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10e4cd640" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceiverAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10e4cd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10e4cd9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x10e4cdb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10e4cdce0"/>
        <function-ref name="cancel" scoped="" ref="0x10e4cde70"/>
        <function-ref name="sendDone" scoped="" ref="0x10e4cc030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x10e4cc2e0" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceiverAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10e4cc2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10e4cc660"/>
        <function-ref name="getPayload" scoped="" ref="0x10e4cc7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10e4cc980"/>
        <function-ref name="cancel" scoped="" ref="0x10e4ccb10"/>
        <function-ref name="sendDone" scoped="" ref="0x10e4ccca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10e4cb020" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceiverAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10e4cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10e4cb3a0"/>
        <function-ref name="source" scoped="" ref="0x10e4cb530"/>
        <function-ref name="address" scoped="" ref="0x10e4cb6c0"/>
        <function-ref name="destination" scoped="" ref="0x10e4cb850"/>
        <function-ref name="setSource" scoped="" ref="0x10e4cb9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x10e4cbb70"/>
        <function-ref name="type" scoped="" ref="0x10e4cbd00"/>
        <function-ref name="setType" scoped="" ref="0x10e4ca020"/>
        <function-ref name="isForMe" scoped="" ref="0x10e4ca1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x10e4ca340"/>
        <function-ref name="localGroup" scoped="" ref="0x10e4ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10dbae930" loc="43:../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10dbae930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10dbaecb0"/>
        <function-ref name="getPayload" scoped="" ref="0x10dbaee40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dbab020"/>
        <function-ref name="cancel" scoped="" ref="0x10dbab1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10dbab340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10dc39400" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10dc39400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10dc397a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10dc39930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dc39ac0"/>
        <function-ref name="cancel" scoped="" ref="0x10dc39c50"/>
        <function-ref name="sendDone" scoped="" ref="0x10dc39de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10dc3b4b0" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10dc3b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10dc3b850"/>
        <function-ref name="getPayload" scoped="" ref="0x10dc3b9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dc3bb70"/>
        <function-ref name="cancel" scoped="" ref="0x10dc3bd00"/>
        <function-ref name="sendDone" scoped="" ref="0x10dc39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10dc37720" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10dc37720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dc37aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10dc37c30"/>
        <function-ref name="getPayload" scoped="" ref="0x10dc37dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dc36020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10dc361b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x10dc36480" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x10dc36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10dc36800"/>
        <function-ref name="runTask" scoped="" ref="0x10dc36990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x10dc36c60" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x10dc36c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10dc35020"/>
        <function-ref name="runTask" scoped="" ref="0x10dc351b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10dc38060" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10dc38060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10dc383e0"/>
        <function-ref name="source" scoped="" ref="0x10dc38570"/>
        <function-ref name="address" scoped="" ref="0x10dc38700"/>
        <function-ref name="destination" scoped="" ref="0x10dc38890"/>
        <function-ref name="setSource" scoped="" ref="0x10dc38a20"/>
        <function-ref name="setDestination" scoped="" ref="0x10dc38bb0"/>
        <function-ref name="type" scoped="" ref="0x10dc38d40"/>
        <function-ref name="setType" scoped="" ref="0x10dc37020"/>
        <function-ref name="isForMe" scoped="" ref="0x10dc371b0"/>
        <function-ref name="setGroup" scoped="" ref="0x10dc37340"/>
        <function-ref name="localGroup" scoped="" ref="0x10dc374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10dc18020" loc="46:../../tos/system/AMReceiverC.nc">
      <component-ref qname="ReceiverAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10dc18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dc183a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10dc18530"/>
        <function-ref name="getPayload" scoped="" ref="0x10dc186c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10dc18850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10dc189e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10dc1f910" loc="45:../../tos/system/AMReceiverC.nc">
      <component-ref qname="ReceiverAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10dc1f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10dc1fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10dc18c30" loc="47:../../tos/system/AMReceiverC.nc">
      <component-ref qname="ReceiverAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10dc18c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10dc17020"/>
        <function-ref name="source" scoped="" ref="0x10dc171b0"/>
        <function-ref name="address" scoped="" ref="0x10dc17340"/>
        <function-ref name="destination" scoped="" ref="0x10dc174d0"/>
        <function-ref name="setSource" scoped="" ref="0x10dc17660"/>
        <function-ref name="setDestination" scoped="" ref="0x10dc177f0"/>
        <function-ref name="type" scoped="" ref="0x10dc17980"/>
        <function-ref name="setType" scoped="" ref="0x10dc17b10"/>
        <function-ref name="isForMe" scoped="" ref="0x10dc17ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x10dc17e30"/>
        <function-ref name="localGroup" scoped="" ref="0x10dc16020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10c841a10" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10c83f5d0" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x10c888840" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x10c86cb00" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x10c888120" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x10c86c420" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x10c86b2b0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x10c86e600" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x10c86ece0" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x10c86b9d0" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10c73e070" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10c470670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x10c8d4020" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10c8d5cc0" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x10c8d8390" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10c8805a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x10c87e440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10c8d4890" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x10c8d37b0" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x10c8d5560" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10c8d3020" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x10c8d8b30" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x10c8d7350" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x10c8d7da0" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10c8805a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10c87e440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10c8d7b20" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10c8805a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10c87e440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10c8e70e0" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x10c8e4630" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x10c8e43b0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10c8e32a0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10c8e3020" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10c8e5be0" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10c8e53e0" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10c8e7a90" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10c8e7810" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10c8ce3e0" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x10c8ced60" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10c8ceae0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x10c8cc790" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10c8cc510" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x10c8cb2a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10c8cb020" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10c8cb990" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10c8be810" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x10c8bb2a0" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x10c8bb020" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10c8bd020" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10c8c4aa0" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10c8bd760" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10c8c09b0" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10c8be120" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10c8c0270" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10c8bf0e0" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x10c8bf9f0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10c8bf770" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x10c8bbcb0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x10c8bba30" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10c8fd1f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x10c815670" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x10c4c7910" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10c3b7020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10c3c2020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10c3b7770" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10c3c9020" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10c3c9870" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x10ca38120" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x10ca388d0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x10ca370e0" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x10ca36070" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x10ca347d0" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10ca33020" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x10ca37870" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10ca33b90" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x10ca33910" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x10ca39970" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x10ca36850" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x10ca34020" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10ca29730" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10ca29e60" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10ca2b880" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10ca28cf0" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10ca29020" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10ca285b0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10ca2ea90" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10ca2b190" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10ca6f7c0" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10ca6e020" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x10ca6ab10" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10ca6a890" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10ca70020" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10ca6d020" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x10ca69490" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10ca6e760" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10ca6f020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x10ca6b770" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x10ca707c0" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10ca72020" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x10ca6d7a0" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x10ca6a020" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x10ca6b020" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10ca72750" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x10ccea490" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10ccea210" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x10cce9550" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cce92d0" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10cce4890" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cce4290" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cce45c0" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10cce5960" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x10cce7a00" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cce7440" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cce7770" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10cce3a60" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10cce3110" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10cce3490" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cce37c0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10cd0d620" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd0d020" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cd0d350" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10cd0c6d0" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10cd0f2a0" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd0f020" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10cd0e7f0" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd0e210" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10cd0e560" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x10cd23730" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10cd234b0" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x10cd21c80" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10cd21a00" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10cd0aa80" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10cd21020" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x10cd26020" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
              <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd28680" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x10cd289d0" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cd28d00" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x10ccfcd30" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10cccd590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10ccfcab0" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x10cd05a10" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10cd05790" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x10ccaae50" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x10cd08950" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10cd086d0" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x10cd023a0" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10cd03d70" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10cd02110" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x10cd04e50" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10cd04870" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10cd04bc0" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x10cd00810" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10cd00590" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x10ccfdb90" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10ccfd5e0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x10ccfd900" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10cccd1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x10cd01600" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10cd01380" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x10ccfa2f0" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10cccd590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10ccfbcf0" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x10ccfa060" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10cccd590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x10ccf9190" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10cccd590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x10cd37920" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10cd37920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10cd37b60" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10cd37b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x10cd2c970" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10cd37b60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd2c6f0" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x10cd2bb40" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd2b8c0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x10cd2e750" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd2e4d0" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10cd2a020" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10cd37b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd5b8a0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x10cd5bc00" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10cd37b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x10cd506f0" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd500d0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x10cd50460" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x10cd4e890" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd4e610" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x10cd51860" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x10cd54e70" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x10cd54bf0" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x10cd38bf0" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd38970" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x10cd33dd0" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd33b50" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x10cd31020" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd34ce0" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x10cd8c6e0" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd8c460" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x10cd5c940" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd5c6c0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x10cd5e020" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10cd5fd40" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x10cd5f4a0" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10cd5f220" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x10cd5ea50" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x10cd5e7d0" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x10cd8d860" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd8d5e0" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x10cd7f020" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x10cd808b0" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10cd80c30" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x10cd692b0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cd6ac50" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x10cd69020" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x10cd65980" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cd65380" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x10cd656f0" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x10cd69d90" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10c12a110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cd69b10" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x10cd66880" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cd66600" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x10cd6a450" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cd6a1d0" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x10cd67990" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cd67710" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x10cd84830" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd845b0" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x10cd888f0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd882d0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x10cd88660" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x10cd85810" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd85590" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x10cd86d20" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd86700" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x10cd86a90" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x10cd83810" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd83590" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x10cd613d0" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd61150" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10cd79e10" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cd79850" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cd79b80" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10cda1620" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cda1020" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cda1350" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10cda0660" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10cda42a0" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cda4020" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10cda3750" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cda3170" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10cda34c0" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x10cd77e10" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x10cd78e20" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x10cd784b0" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x10cd77640" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x10cd768b0" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10cdb43a0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cdb9dc0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x10cdb4110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10cdb36a0" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x10cdb0e70" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x10cdb0060" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x10cdb08a0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10cdb0bd0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10cdb2840" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10cdb2260" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10cdb25b0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x10cdb4e30" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x10cdb4bb0" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x10cdac0e0" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x10cdb5860" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x10cdbfa40" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10cdb6270" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x10cdd92e0" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cdd9020" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x10cdda710" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x10cca8b30"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x10cca64f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cdda410" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x10cdd8620" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x10cca4020"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x10cca38c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10cdd8320" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x10cdbc6e0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x10cdba840" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x10cdba070" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x10cdc1e20" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x10cdbee80" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x10cdbb020" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x10cdbb840" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x10cdbe6c0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x10cdd3d00" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x10cdd4350" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x10cdd3530" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x10cdd32b0" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x10cdd4ac0" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x10cdd5020" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10cda9c80" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x10cdd5ad0" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10cdd5850" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x10ce14870" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x10ce14290" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x10ce145e0" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x10ce161f0" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x10ce17880" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x10ce17210" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x10ce175f0" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x10ce1dc10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10ce1d990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x10ce16a70" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x10ce19730" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x10ce194b0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x10ce1cd30" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x10ce1cab0" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x10ce13ae0" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x10ce189c0" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x10ce18740" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x10ce132b0" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x10ce1b4d0" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x10cd53af0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x10cd4b2e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x10ce1bcc0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x10ce1d1f0" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x10ce1c390" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x10ce18020" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x10ce114a0" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10ce114a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x10ce11d60" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10ce44ac0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10ce114a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x10ce44510" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x10ce44830" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10ce114a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x10ce50c10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10ccaccd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10ce50990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10ce4f710" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10ccaccd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10ce4f490" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x10ce39c50" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x10cd53af0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x10cd4b2e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10ce35020" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10ce35020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10ce35260" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10ce32e00" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10ce34e40" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x10ce32460" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10ce33e60" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
          </variable>
          <variable name="dt" ref="0x10ce321d0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10ce33640" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10ce30620" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10ce35dc0" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10ce35b40" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ce35260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10ce34680" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x10ce58560" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x10ce574f0" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x10ce58d40" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10cccd590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x10ce59cd0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10cccd590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x10ce596f0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10cccd590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10ce59a40" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10cccd970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x10ce4be40" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10ccaccd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x10ce55e80" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10ccaccd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x10ce55020" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10ce55890" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10ce55be0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10ce52610" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10ccaccd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x10ce53770" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10ce52020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10ce52370" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10ce5cc30" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10ce5c470" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x10ce5dce0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x10ce5d420" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10cf7b4a0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10cf7b4a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10cf7b6e0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10cf7b6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10cf7a030" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10cf7b6e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10cf79190" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10cf7a8b0" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10cf798f0" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x10d019bb0" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10d018d70" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10d0185c0" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10d018340" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x10d019350" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10d036a60" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10d033540" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10d0362d0" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x10d034cf0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x10d034a70" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x10d039b00" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x10d0342b0" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x10d164b20" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x10d160390" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x10d160bd0" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x10d17b6b0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d17b0d0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10d17b420" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x10d1769a0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d176060" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10d1763b0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10d176700" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10d1772b0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10ccaccd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d178c10" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10d177020" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x10d17c2b0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10ccaccd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d17ebf0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10d17c020" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10d17add0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d17a490" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10d17a7e0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10d17ab30" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10d19f990" loc="70:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x10d19f020" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x10d19f3b0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d19f6f0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10d19b020" loc="82:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x10d19e1d0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x10d19e560" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d19e8a0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10d19ec10" loc="83:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x10d1a18a0" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x10d1a1620" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x10d2a36f0" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10d2a1070" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x10d299710" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10d249020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10d249440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x10d29f2a0" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d29f020" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x10d29e680" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d29e400" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x10d29fb10" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10d29d2a0" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d29d020" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x10d293ca0" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x10d293480" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x10d28a2a0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d28a020" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x10d28c780" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x10d2aeaf0" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x10d2b9790" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x10d2c6610" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d220080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x10d2208c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10d2c6390" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d220080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x10d2208c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x10d2bc870" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x10d2c4a90" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d21b080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x10d21b8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10d2c4810" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d21b080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x10d21b8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x10d2b3e70" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x10d2af480" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x10d2c4070" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d21d020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x10d21d7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x10d2c22b0" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d21b080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x10d21b8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x10d2be020" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x10d2c0d30" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x10d2c0610" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x10d2b3740" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x10d2c5840" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d21d020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x10d21d7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10d2c55c0" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d21d020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x10d21d7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x10d2c1420" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x10d2b25d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x10d2c1e00" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x10d2c1b80" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x10d2bd910" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x10d2bc0e0" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x10d2b4840" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x10d2b7790" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x10d2bb7e0" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x10d2b3020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x10d2b8020" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x10d2b2cf0" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10d2be800" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10d226dc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x10d222680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x10d2b14c0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x10d2ae350" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x10d2c2c50" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x10d2c29d0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x10d2ad4d0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d2ad250" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x10d2c6df0" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10d220080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x10d2208c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x10d2bb020" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x10d2b8770" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x10d2b4020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10d27de70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x10d27c2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10d2b6cf0" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10d27de70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x10d27c2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x10d2b62a0" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10d249020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10d249440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10d2b6020" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10d249020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10d249440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x10d2add90" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x10d2b1cb0" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x10d2bd070" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x10d2afbe0" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x10d2b7020" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x10d2b9020" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10d31f600" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x10d341070" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x10d354b10" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x10d349d50" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10d349ad0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x10d35c270" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x10d345350" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x10d34ecf0" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x10d355c50" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x10d3539c0" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x10d357c00" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x10d357980" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x10d358120" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x10d350790" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x10d347c80" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x10d3428f0" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x10d349390" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x10d33db60" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x10d338270" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x10d35b0e0" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x10d350020" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x10d34f910" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x10d355500" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x10d313020" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x10d34aba0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10d34a920" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x10d3167d0" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x10d346b80" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x10d3417d0" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x10d33b350" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x10d33aa90" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x10d344270" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x10d340020" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x10d347520" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x10d33fbb0" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x10d35b800" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x10d34b020" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x10d33f020" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x10d342190" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x10d34e520" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x10d34e2a0" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x10d33baf0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x10d34a1f0" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x10d345ac0" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x10d313aa0" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10d269b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x10d268020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10d313820" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10d269b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x10d268020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x10d352870" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x10d359980" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10d359700" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x10d34f120" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10d350e70" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x10d33d3b0" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x10d357270" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x10d359020" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x10d34b9e0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x10d34b760" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c12b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x10d35c9a0" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x10d340740" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x10d3449e0" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x10d346420" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x10d34d740" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x10d34d4c0" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x10d352120" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x10d3543b0" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x10d33a2b0" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x10d358aa0" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10d358820" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x10d33c350" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x10d353270" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x10d33cb10" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x10d417780" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x10d416020" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x10d42e900" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x10d42ca20" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x10d42e070" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x10d42c1f0" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10d42b390" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x10d421b50" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10d42ab30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10d4218d0" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10d42ab30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x10d425b80" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x10d4226b0" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10d42ab30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10d422430" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10d42ab30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x10d421020" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x10d42ab30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x10d6495e0" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10d649360" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x10d635b00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x10d6351c0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x10d635530" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d635860" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10d634880" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x10d6342c0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d6345f0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d6714d0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d6714d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10d671710" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d671710"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x10d6702a0" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d671710"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10d670020" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d671710"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x10d6bb580" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x10d6e59e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x10d6e5020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x10d6e5750" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x10d6e77f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x10d6e7020" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10d6ead30" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x10d6fb3d0" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c12b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6fb150" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x10d6fc3d0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6fc150" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10d6f8350" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6f80d0" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10d6fa390" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6fa110" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10cced3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10cceba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d85d910" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d85d910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10d85a270" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d8b4020" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d8b4020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10d8aec50" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10d8b15b0" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x10d8af360" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10d8b0d60" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10d8af0d0" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x10d8b05b0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10d8acca0" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10d8ac420" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10d8b1d90" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10c3bb090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10d8b4b90" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10d8b4910" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x10d8ae2f0" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10d8afd00" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10d8ae060" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10d8b3680" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10d8b3400" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c12b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10d8b3e80" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x10da325f0" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10da325f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x10da2f2a0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10c3be980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10da325f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x10da2f020" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10da325f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
