<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="14:SenderAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x1102b1e20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x11036da00"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x11036da00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x11051b590"/></to>
    </wire>
    <wire loc="15:SenderAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1102c7b50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11036b590"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x11036b590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110551020"/></to>
    </wire>
    <wire loc="16:SenderAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1102af020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x11094a370"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x11094a370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:SenderAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x1102bf670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110944c90"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110944c90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:SenderAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x1102babe0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1109756d0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1109756d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SenderAppC.nc">
      <from><interface-ref name="ReadT" scoped="" ref="0x1102c25a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x111a21cb0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosb/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x111a21cb0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1124991e0"/></to>
    </wire>
    <wire loc="20:SenderAppC.nc">
      <from><interface-ref name="ReadL" scoped="" ref="0x1102c6e70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x11165a750"/></to>
    </wire>
    <wire loc="47:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x11165a750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x112397760"/></to>
    </wire>
    <wire loc="22:SenderAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1103239f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x111b45c30"/></to>
    </wire>
    <wire loc="65:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111b45c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x112569c30"/></to>
    </wire>
    <wire loc="23:SenderAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x110333af0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x111b448b0"/></to>
    </wire>
    <wire loc="66:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x111b448b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1125688b0"/></to>
    </wire>
    <wire loc="24:SenderAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x110349b10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x111b45020"/></to>
    </wire>
    <wire loc="64:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x111b45020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x112569020"/></to>
    </wire>
    <wire loc="25:SenderAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x110332020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11096fc20"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x11096fc20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1109ac020"/></to>
    </wire>
    <wire loc="37:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11197f150"/></to>
    </wire>
    <wire loc="96:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112406060"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1116fc660"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111587dd0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1114d9b50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111492750"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1114ae080"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111348620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11125dc60"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110b08020"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112246140"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110daf020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110a7c4a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1107bf830"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x11051bc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10fd993a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10fd993a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x110271420"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x1105396c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110366020"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110366020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110362280"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110539dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x110362990"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x110363640"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x110363640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110386780"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x1103610c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11037d3f0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x1103617a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11057ac40"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110386780"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1103b23c0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x1103a0de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x1103b2a70"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x110195510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x1103b1cc0"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x1103f6a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104a36d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x110408410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104c2b30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x1103edbb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104a8160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x110419020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104cecb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x1103ef020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104a9480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x1103fc570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104ce020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x110415020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104ddcb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x110403a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104c8220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x1103db020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104629d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x11041b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104b72f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x1103fe890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104b8610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x1104078c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104b9220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x1103ecbb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104a17a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x110418020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104c52f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x110405020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104b26d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x1103efda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104a2ac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x1103dc7b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x11044c540"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x1103fb3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104c7610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x1103da5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104ab020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x110401020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104e66d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x1103e8b60"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104b1a90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x11041a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104d57a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x1103f3140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x11048cde0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x1103fd700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104d7ac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x110416020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104e47a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x1104045a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104d0b30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x1103fa1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104e5ac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x11041c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104bfcb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x11041d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104dd020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x1103ffa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104bf020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x1104005a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104dfb30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x110449450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11044ad80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x110449aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x1104fea90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x110448120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x1104fb260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104b0930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x11044c540"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104ae020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11044ad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104a7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x11044c540"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104a67a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11044ad80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104a0610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x11044c540"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x11049fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11044ad80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x1104422f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x110442940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x1104fb9f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x110465020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x1104fa240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104beb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104bc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104b6160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104b57a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104d4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104d3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104cdb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104cb2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104ea160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104e97a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104e3610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104e2c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104dbb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104d92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110443bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x110270320"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x11026c990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10fdf9760"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11057ac40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11052c8d0"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1105497b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x110554360"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x110554360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110794020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x11054f980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x11057c6a0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x11057c6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110780b90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x11054eca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x11057b9c0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x11057b9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1107ad710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1107832f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x1105ca200"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x1105ca200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106eb740"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x11077fde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x1105c8200"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x1105c8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106e6100"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1107ac930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x1105c6200"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x1105c6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106e2d10"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x11058e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110645100"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x1105a3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11066fd10"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x1105d8560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11068ed10"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x11060a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11071a100"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x1105d6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110689740"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x11059f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110693100"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x1105b5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106bfe00"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x1105e4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106f4d10"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x1105fb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106aed10"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x1105ea570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110706100"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x110602580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110716d10"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x110588020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110663100"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x1105f9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106a9740"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x110584020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11065a740"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x110599020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110684100"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x1105af200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106b1d10"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x1105c4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106dd740"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x1105de200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110716d10"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x110568020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11064fd10"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x11057d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110678860"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x110593020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106a4100"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x1105da580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11068ed10"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x110610570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106f8100"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x110604570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110716d10"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x1105f0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106f0d10"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x1105b9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11069ba60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x1105cf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106c6100"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x1105be200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106fd740"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x11060e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106f4d10"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x1105f7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106d1d10"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x11058c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110641d10"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x1105a1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11066a740"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x1105c2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110706100"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x11059d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11068ed10"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x1105b3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106ba740"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x1105e2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11071f740"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x1105f3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106c6100"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x110575020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11062d6d0"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x110582020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110654100"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x110597020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106aed10"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x1105ad200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106da740"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x1105ee580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106a4100"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x1105e8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110702d10"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x110608570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110716d10"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x1105a9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106d1d10"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x1105ec580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106a0d10"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x110590020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11064a740"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x1105a5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110673270"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x1105bb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106a0d10"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x1105f5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106cb740"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x11060c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11071f740"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x1105b7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106c3460"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x1105cc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106f0d10"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x1105bc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106f8100"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x11058a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110668740"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x1105c0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110702d10"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x110586020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11065fd10"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x11059b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110689740"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x1105b1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106b5100"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x1105e0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11071a100"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x11056a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110628100"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x110580020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11067dd10"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x110595020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106a9740"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x1105ab200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106d5100"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x1105d2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110684100"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x1105e6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106fd740"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x1105d4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110684100"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x1105a7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106cb740"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x110606570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11071a100"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x110600580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1106dd740"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x1105dc1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110693100"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107bc610"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1107bc610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110933150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1107bf830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1108d1020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x1107b51a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x11095c790"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1108d1020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111facc40"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x11092d640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1108db2f0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1108d6850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1108d1870"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1108d1870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112037890"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x11095ba60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x11083fb50"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x11083fb50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110871cf0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x111facc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112021660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1120300a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x111faa4f0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x111faa4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112020020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x112034c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x11083fb50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11201c190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x112027340"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112027340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x11201b770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x112025a80"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112025a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11201aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x112024da0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x112024da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x110408410"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x1103ffa20"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x110405020"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x1103fd700"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x1104045a0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x1103fc570"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x110403a50"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x1103fb3e0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x110401020"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x1103fa1f0"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x1104005a0"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x11041d020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x11086e0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x11083db70"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x11083db70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110837b80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11085cc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x1109099c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x110928a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1109ac020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1109cbd80"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x11096cca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1109ab050"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1109ab050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1115b5e80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x11096a880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1109aadf0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x1109aadf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1115b0db0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x110965020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1109a8a80"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1109a8a80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1115aea80"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x110960310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1113e6550"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1113e6550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1113d8a80"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x11097f130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x11099ce70"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x11099ce70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x1109e3080"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x110964b10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1109aa210"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1109aa210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1115b01d0"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x110961020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1109a6b20"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1109a6b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1109e4020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x110965c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1109a9470"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1109a9470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1115af430"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x11098a3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1113e2660"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1113e2660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1113d4af0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1109cbd80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11157bb80"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x11099c020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1115ac8b0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x1109cc020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x1115adce0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x11099ec20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1109e5020"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1109e5020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x1109e3080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x11157b080"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1109e4020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x1113e96e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x1109c30d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x1109e3b70"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x1109e3b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x111566020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x11099bda0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1109e49d0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1109e49d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1113e7a70"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x1115a30f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1109bc210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1115ab860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x1109b5990"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x1109b5990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x111514c90"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1115a9690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x1109e7840"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x1109e7840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x111513a50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1115a54d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1111a5b20"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1115a9ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1113ddd10"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1115a8b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113d9640"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x1115a7610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x110a84dc0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x110a84dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x110a7b970"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x1115a41f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1109dd330"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x1109dd330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1109d77e0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1115a3d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11036b590"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x11157bb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x111578d90"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1113e7a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1113d8020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x111566020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x111564400"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x111514c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x111509a20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x11157b080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x1115732d0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x1109b6500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1115145e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1115145e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x111509370"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1113e96e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x1113dac50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1109bc210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111516be0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111516be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11150b7b0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x1109e66f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1115158e0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1115158e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x11150a4d0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x1109b6bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x111511170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x111511170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x111507020"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x111513a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x111508840"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x111578d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1109df390"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1109df390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1109dbe70"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1115106b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111497220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x111497220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111495a10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x111496020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111569340"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x111569340"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x111566d70"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x111566d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11157fce0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11157fce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x111579860"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x111579860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1109dfe80"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1109dfe80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1109d8990"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x111510020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11157c980"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x11157c980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x111578690"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x111578690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1114e0a90"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1114e0a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1114dce20"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1114dd950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1109deb40"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1109deb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11134c7c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x11134c7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x111346020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1109d6640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110a57950"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110a57950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110a7cb10"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x110a09b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x110a52bf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x110a52bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x110a79740"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x110a06760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11126d6c0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x110a06760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11134f5c0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x11134f5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111348ca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x11126d6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11125c320"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x1109fe2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x11126a020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x11126a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11125cbc0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x110a07060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x11126acb0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x11126acb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x11125b970"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1109fc330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1109f4920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1109fb420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1114b4a20"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1114b4a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1114ada20"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x1109f8110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1114b6aa0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1114b6aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110d6a280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1109fbbf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11036b590"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x110a26b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x110a27ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x110a29c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x110a81020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x110a78b40"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x110a74a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x110b08a10"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x110b08a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x110b402e0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x110a70c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x110b42370"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x110b42370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b751b0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x110a6fe70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x110b7fce0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x110b7fce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b66710"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x110a6d0f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x110b7c380"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x110b7c380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b9fd70"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x110a68c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x110b89210"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x110b89210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x110cd3a30"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x110a94b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111124e20"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111124e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110d13950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x110a93b60"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x1111207b0"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1111207b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x110a953b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x11111fae0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x11111fae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x110a94440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x111122ad0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111122ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x110a95ae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x11111e160"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x11111e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x110a99420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x111116870"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111116870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x110a99cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x111113880"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111113880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x110aa05d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x1111120a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1111120a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x110a98020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x11111ae50"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x11111ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x110a988f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x111119670"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111119670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x110a9ce20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x111105500"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x111105500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x110a9c4a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x111106ce0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111106ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x110a971e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x111117e50"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111117e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x110a97a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x111119e50"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111119e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x110a963c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x111118e50"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111118e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x110a91880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11114da80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11114da80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110d13950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x110a92a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1111799e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1111799e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110d13950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x110aa1390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1111a5b20"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x110a74020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1111a4d20"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1111a4d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x11118a310"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x110a852f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x110a87410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110b08020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110b41a20"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110b41a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1120b4140"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x110b402e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1120b4990"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1120b4140"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1120ac0c0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1120b4990"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1120a7b10"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1120ac0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11212ba30"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1120a03a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1120ac910"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1120ac910"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x11212a340"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1120a2020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110b2d890"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x110b2d890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110b25430"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1121264c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x112096640"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112096640"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112125a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x112095c20"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112095c20"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x112124da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x112093020"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x112093020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x110b23910"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x11083db70"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x110b826a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b71d70"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x110b819d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b6cb70"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x110b430e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b7a710"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x110b7d020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110ba31b0"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b79930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x11058e020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b74480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x1105b5200"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b6f020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x110590020"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b6bde0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x110575020"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b65930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x1105ad200"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110ba2480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x1105b7200"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b9d020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x1105af200"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x110b845a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110bb4020"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x110b89e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x110cc3a70"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110bb4ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x1104078c0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x110bb3da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x11041b020"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x110bb1c20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x1105b7200"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x110cc5610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x110be4c40"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x110be4c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x110bd1a30"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x110cc2610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x110be7e70"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x110be7e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x110bd79c0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x110bdabc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x110c09bc0"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x110be1bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x110bcda30"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x110bdfbc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x110bcba30"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x110ba8d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x110bd3a30"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x110bdcbc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x110bc8a30"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x110be3bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x110bd0a30"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x110bd9bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x110c08bc0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x110bdebc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x110bcaa30"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x110be5c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x110bd2a30"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x110bdbc40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x110bc7bc0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x110be2bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x110bcfa30"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x110be0bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x110bcca30"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x110ba9dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x110bd4a30"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x110bddbc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x110bc9a30"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111120160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111114880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x11110c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1111130a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x11115a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111103500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x11111f490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111109880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111104500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x11110f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x1111100a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111123a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x110d10670"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x110d10670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x110d0a920"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x11111ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x11111d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111108c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x11111dbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111104ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x1111090a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x111118670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x11110a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x11110c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x11110a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x11115cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111103ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111110880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x11110b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111105ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111112880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x11115ace0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111122480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x11111a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111117670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x11110d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x11110d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1111140a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x11111b2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x11111a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x11111e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111106500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x11115c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x11110f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x11110b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111120e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1111110a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x11111b940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111111880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x1111080a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1111599b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d06bb0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d03020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d03db0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110d13950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110d07810"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d02ba0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x110cfe020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110d6f770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x110d6f770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110d6a280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x110d01400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110d96c40"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110d96c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x112189c30"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x110cff080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x110d958f0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x110d958f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1121860c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x110d3d680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1110f3020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1110f3020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1121852b0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110cfedf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11036b590"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x110d38120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x110d6a280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110dafb70"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1121852b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x110e0d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1121860c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x110e10dd0"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x112189c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110e16a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1121878f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x11217d2c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x11217d2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x110f5b8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x110e10dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x110e79440"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1121866d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x110e0f480"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x110e0f480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x110e79a50"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x110e0a600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x112185a50"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x11220b760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x110e105e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x110e0c370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x11217e640"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11217e640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110f5c5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x110e066a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112213c10"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112213c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x110f61a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x110e105e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x110e7ac40"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x110e0d510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x110e78700"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110e16a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110e7be80"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x110e77e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x110e0a600"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x110e77060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x110e0c370"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x110e72de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x110e066a0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x110e76490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x110eb7860"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x110eb7860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x110eab020"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110e715a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11036b590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x110e6fc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x110ead8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x110ea6750"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x110eb03b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x110ea7dc0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x110ec6700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x1105da580"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x110ec4670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x1105d6580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x110ec2670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x1105d4580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x110ec0670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x1105f9580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x110ebe670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x1105fb580"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x110ecb5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x111052430"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x112212440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x110f5e9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x112212a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x11100a870"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x11100a870"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x111052430"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x11217c2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x110eb7860"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x11217da60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x110fad130"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x110fad130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111012060"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x110fac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x11220b760"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x110f5b8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111014bf0"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x111014bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x112242850"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x110f61a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x110fa95c0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110f5c5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111015e60"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111015e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x112243970"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x110f5e9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x110f97020"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111012060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x112241c30"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111012930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x110fac020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x110f964b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111012060"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x110f97690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x110eb03b0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x110f97e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x110ead8a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111013400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112241020"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x112240590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111012930"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x112240d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x112246750"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x11223d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x11104b250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x110eab020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x111047d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x1105da580"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x111045cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x1105d4580"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111140c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x11114bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111144b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11113e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111137e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x11113ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1111822f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1111842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111149120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111132670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1111852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111143c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111141c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111138670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x11113ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11113d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11114c760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x110d10670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111147aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111146120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111131a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111146870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111185ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111149dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111133e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x111141480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111143480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x11114b750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111134e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111136670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111133670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111183ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111184ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111139670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111136e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111187ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x11113b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111182ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x11114b100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x111144370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111140480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111138e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11113de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111137670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11113f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x11114a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11113fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111145020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111145cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1111872f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111188ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111147450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1111882f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1111832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111139e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111134670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x11114aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111149770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x11113be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111145670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x11113a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111132e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1111817a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x11116cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111176da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x11116fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111169670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111162e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111169e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1111ae2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1111b12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111174120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x11115e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1111b22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x11116ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11116dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111163670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x111166e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111168670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111178760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x110d10670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111173aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111172120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1111b5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111172870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1111b2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111174dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x11115fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11116d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11116e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111176750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111160e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111161670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x11115f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1111b0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1111b1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111165670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111161e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1111b3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111167670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1111aead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111176100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x11116f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x11116c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111163e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x111168e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111162670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11116a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111175450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11116ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111170020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111170cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1111b32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1111b4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111173450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1111b42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1111b02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111165e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111160670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111175aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111174770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x111167e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111170670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111166670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x11115ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1111ad7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1111e1880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x1111d6020"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1111d6020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x1111d0140"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x1111ccbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x1111d5c50"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x1111d5c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x1111b8150"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x1111cf530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111225a10"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x1111bc540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x1111bd590"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x1111bd590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1112239e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x11120d910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x1111bac90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x1111bac90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x1111eba90"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x1111b89f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x1111bc540"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111236020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111231530"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111231530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x11122de50"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x111229020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1103dc7b0"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x111222c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x11057d020"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x111266990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x11125a900"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x111268150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x1112590f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x111259ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x110b08a10"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x11124d500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x110b430e0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x111246820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x110b42370"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x111245b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x110b7d020"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x11124e880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x110b845a0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x111243020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111320c30"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111320c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110d13950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111243d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x11131f8f0"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11131f8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x110d10670"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x11129d6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x11131d2f0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x11131d2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x11129dde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x11131ccc0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x11131ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x11129c530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x11131b370"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x11131b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x11129cc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x11131ad00"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x11131ad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111241e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x111314c60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111314c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111242780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x11135b7a0"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x11135b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111241550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1113002f0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1113002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11129b3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x111315480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111315480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1112995e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x111311e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111311e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111298020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x111310670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111310670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x11129be80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x1113177b0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1113177b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1112979c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x1112fead0"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1112fead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111298890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x1112ff2f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1112ff2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111297130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x1112ffad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1112ffad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x111292d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x11134fdf0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x11134fdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x111347550"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x111255d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x111254bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x111253950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1113e6550"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111248be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1113de480"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1113de480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1113d08b0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1112956c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11036b590"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111313c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x11131c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111316c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111309e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111310e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1112fc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111305670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111315c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x11130a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x11130de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11130f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111319370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111303a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111319ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111300ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x11131a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111306e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x111314480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x11131d940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111307e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111308670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111306670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x11130c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111308e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111301ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x11130e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1112fcad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x111316490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111313480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x11130ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11130fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111309670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111311670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x11131c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111317160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111317e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1113012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111302ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x11131a6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1113022f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1112fe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x11130ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111307670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x11131b9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x11130ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x11130d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111305e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x11134b020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x1113467c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111331150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11036b590"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x111345020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x110b42370"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x111344380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x110b826a0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x1113436b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x110b819d0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x111342a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x110b89e30"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1113416e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111435520"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111435520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110d13950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x11133f530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x111476480"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111476480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x11133ead0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x11142f060"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x11142f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x11133e3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x11142fd00"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x11142fd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x11133d330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x11133c1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x11133ad70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1113e6550"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x11133cb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x110a84dc0"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1113353e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x111427840"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111427840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111335cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x111426060"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111426060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111336b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x11142eae0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x11142eae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1113336d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x111477c60"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x111477c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111334590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x111479c60"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111479c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111334e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x111478480"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111478480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111332020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111479480"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111479480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1113328b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x111434c20"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111434c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x1113859d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111442020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110b2d890"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x1113ce3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x111444cf0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x1113cd6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x1107b51a0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x11143d0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111428620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111433940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x11142b620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111483840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111426840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111432cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x11147e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11147ac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x11142a620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111429620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111420060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x111422840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111424060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1114342b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x110d10670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x11142f6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11147d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x11142e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1114309c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x11147f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11142ae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11142be00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1114332f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111480840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111481060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x11147f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111477480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111421060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111481840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11147a480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111423060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x11142de00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111429e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111420840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x111424840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111483060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111427060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111432020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x11142d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11147cc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11147c480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11147dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x111478c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111421840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111480060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111432670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111430370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x111423840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x11142d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111422060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x11147e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111475160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x1114b2920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x1114ae940"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1114b8990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1114ae080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x111492e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x111496020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x111491ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1114e4690"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1114e4690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110d6a280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1114908f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1114b4a20"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x11148e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x1114dd200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x1114d9550"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1114d83f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x1114dd950"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1114d8a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x111507d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1115106b0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x111506b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x111510020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1115052f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x111503170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x111503b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x111586410"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x11153fdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x11157a800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x111575580"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x111575580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110d6a280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1115611a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1109e4020"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x112397760"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x11169f390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x111a26020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x112392380"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x112392380"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x11198b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x11165a020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x111a318a0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x112394020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x111a2e300"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x11238e0e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x111a2e300"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111692020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x112394020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x111690450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112388400"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112388400"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x1117051d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x111696640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x11238a660"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11238a660"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x11188cd20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x112386660"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x112394020"/></to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x1116d3e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x112387400"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x111704960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x112387cf0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x111703920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x1118871d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1116a4cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x11241a2a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x112386660"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111886740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x11241b020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x111704960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x1116faaf0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x1117001d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x1116f7910"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x111703920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x1116f8ab0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x1117051d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x1116fb370"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1116a4cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111830520"/></to>
    </wire>
    <wire loc="98:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111830520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1124036c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x1116f6280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x11182fb20"/></to>
    </wire>
    <wire loc="100:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x11182fb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x112402cb0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x1116e70d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x1117d8020"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x1116e1be0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x1105c2200"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x1116dfc80"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x1105c0200"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x1116ddc80"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x1105be200"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x1116dbc80"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x1105bc200"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x1116d9c80"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x1105e4200"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x111748c80"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x1105e2200"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x111746c80"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x1105e0200"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x111744c80"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x1105de200"/></to>
    </wire>
    <wire loc="74:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x1116f3020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1103dc7b0"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x1116e6880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x1103db020"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x1116e5d30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x1103da5a0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x1116e2120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x1103f3140"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x1116e2e60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x1103ef020"/></to>
    </wire>
    <wire loc="99:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x11182f3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x112402530"/></to>
    </wire>
    <wire loc="101:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x112401610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1118a2570"/></to>
    </wire>
    <wire loc="103:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x112401dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x112406670"/></to>
    </wire>
    <wire loc="68:../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x112400900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x11188cd20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x111918ca0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x111914030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x1118871d0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111911020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x111886740"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x111914d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x111882240"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x1119139c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x111882e00"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x11187ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1119574e0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1119574e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x111878020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x111950020"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x111950020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x1118736c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x11194ab40"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x11194ab40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x1118809a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x1117d8020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x11190e7f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x112470280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x11238e0e0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x1119875e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x11238e0e0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111983280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x112473360"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x112473360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x11188cd20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x111986c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112472020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112472020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x1117051d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x11198b1d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x1119fccb0"/></to>
    </wire>
    <wire loc="32:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x111979b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x1119875e0"/></to>
    </wire>
    <wire loc="33:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111a488f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111983280"/></to>
    </wire>
    <wire loc="35:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x111a4cbf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x11197fe70"/></to>
    </wire>
    <wire loc="38:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x11197a1d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x111986c90"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x111976020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x111a04970"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x111a04970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x11245d020"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x1119c6380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x11195caa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x1119ce100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x111a04120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112463450"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x112463450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112448ca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x112457780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112463ca0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x112463ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1124475b0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1124593d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x11083fb50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112443710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x11244d880"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11244d880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112442da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x11244b020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x11244b020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1124400c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x11244a440"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11244a440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x112471020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x111704960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x112471910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x111703920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x1118871d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1116a4cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x1124a2120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x112470280"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111886740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x1124a5dc0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosb/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x1124991e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x112495180"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x112495180"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x11248bbd0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x11248bbd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x11169f390"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x11248f3d0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x11247fbd0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x11247fbd0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x11169c530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x112494900"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x112486840"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x112486840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x11198b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1124915e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x112480e80"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x112480e80"/></from>
      <to><interface-ref name="ResourceReadNow" scoped="" ref="0x1116972c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x1124894a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x111a7e670"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x1124825c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x111a7e670"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x112523520"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x111a7e670"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111692020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x1124894a0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x111690450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x11251c400"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x11251c400"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x1117051d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x111696640"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x11251d7a0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11251d7a0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x11188cd20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x112519660"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x1124894a0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x11251a400"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x111704960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x11251acf0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x111703920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x1118871d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1116a4cc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x11250bde0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x112519660"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111886740"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x11250cb60"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x1124fd020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x1124825c0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x1119875e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x1124825c0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111983280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x112500160"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x112500160"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x11188cd20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x111986c90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112500d70"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112500d70"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x1117051d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x1124ffd30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x111704960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x1124fe650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x111703920"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x1118871d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1116a4cc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x1124efe00"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x1124fd020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111886740"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x1124f0ba0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111692020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x112523520"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x111690450"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x1124e3de0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x1124e3de0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x1117051d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SubResourceReadNow" scoped="" ref="0x111695960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1124e31d0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1124e31d0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x11188cd20"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x1124e0020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x112523520"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x1124e2d30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x111704960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x1124e1650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x111703920"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x1118871d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1116a4cc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x1124d19e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x1124e0020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x111886740"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x1124d2670"/></to>
    </wire>
    <wire loc="63:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x112569020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x11255d9e0"/></to>
    </wire>
    <wire loc="64:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x112569c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x110965020"/></to>
    </wire>
    <wire loc="65:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1125688b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110965c90"/></to>
    </wire>
    <wire loc="67:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x111b42020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x112566020"/></to>
    </wire>
    <wire loc="66:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x112566020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x110961020"/></to>
    </wire>
    <wire loc="60:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11255c780"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111aab930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x11255b400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110965c90"/></to>
    </wire>
    <wire loc="53:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x111aab930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111adc4b0"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x111adb400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x11096cca0"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x111ada060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110965c90"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111ad8720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x110965020"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x111ad7480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x111ad7c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="SenderC" loc="9:SenderC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenderAppC.Timer" loc="44(SenderAppC.Timer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenderAppC.Timer1" loc="44(SenderAppC.Timer1):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.Timer2" loc="44(SenderAppC.Timer2):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenderAppC.LumSensor" loc="40(SenderAppC.LumSensor):../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.LumSensor.AdcReadClientC" loc="47(SenderAppC.LumSensor.AdcReadClientC):../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient" loc="43(SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenderAppC.LumSensor.AdcReadStreamClientC" loc="47(SenderAppC.LumSensor.AdcReadStreamClientC):../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenderAppC.TempSensor" loc="49(SenderAppC.TempSensor):../../tos/platforms/telosb/DemoSensorC.nc">
      <documentation loc="32:../../tos/platforms/telosb/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor" loc="43(SenderAppC.TempSensor.DemoSensor):../../tos/platforms/telosb/VoltageC.nc">
      <documentation loc="32:../../tos/platforms/telosb/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC" loc="43(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC):../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <documentation loc="32:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC" loc="47(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC):../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient" loc="43(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC" loc="47(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC):../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient" loc="43(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalVoltageP" loc="34:../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <module/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC" loc="47(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC):../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient" loc="43(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenderAppC.AMSenderC" loc="47(SenderAppC.AMSenderC):../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.AMSenderC.SenderC" loc="47(SenderAppC.AMSenderC.SenderC):../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenderAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SenderAppC.AMSenderC.SenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x110411890" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x110411c30" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x110410020" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x1104103a0" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x110410720" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x110410a90" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x110410e20" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x11040f200" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x11040f5d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x110464e70" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x110461270" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x1106279f0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x110627da0" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x1106261a0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x110626550" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x1106268c0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x11080d3b0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x11080d3b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x110838c70" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x110838c70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x110855570" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x110855570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x110855d40" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x110855d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x110854160" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x110854160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x110854940" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x110854940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x110854d10" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x110853540" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x110853540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1108446d0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1108446d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x11089c020" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x11089c020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x11089c410" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x11089c410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x11089cbf0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x11089cbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x11089b020" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1108cdcc0" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1108cdcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110904230" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110904230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x110904560" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110926dd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110926dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x110f91020" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x110fd60d0" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x110fbb7e0" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1111e9020" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1111e9020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1111e97b0" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1111e97b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x111814850" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x11180c3b0" loc="42:../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x1119fe660" loc="23:../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x1119fe9b0" loc="23:../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1119fe9b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="49:../../tos/platforms/telosb/DemoSensorC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosb/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="43:../../tos/platforms/telosb/VoltageC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosb/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430InternalVoltageC" loc="43:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadNowClientC" loc="47:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc" abstract="">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x111a50360" loc="47:../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x111ac6140" loc="47:../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x111abf020" loc="43:../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x111aa7c80" loc="45:../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="ReadL" ref="0x1102c6e70" loc="16:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadL" scoped="" ref="0x1102c6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1102c5a90"/>
        <function-ref name="readDone" scoped="" ref="0x1102df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x1102b1e20" loc="10:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x1102b1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x1102b01c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1103239f0" loc="17:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1103239f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110323d70"/>
        <function-ref name="payloadLength" scoped="" ref="0x1102dd020"/>
        <function-ref name="getPayload" scoped="" ref="0x1102dd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1102dd340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1102dd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x110349b10" loc="19:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x110349b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110334020"/>
        <function-ref name="getPayload" scoped="" ref="0x1103341b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110334340"/>
        <function-ref name="cancel" scoped="" ref="0x1103344d0"/>
        <function-ref name="sendDone" scoped="" ref="0x110334660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x110332020" loc="20:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x110332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1103323a0"/>
        <function-ref name="stopDone" scoped="" ref="0x110332530"/>
        <function-ref name="start" scoped="" ref="0x1103326c0"/>
        <function-ref name="stop" scoped="" ref="0x110332850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x1102bf670" loc="12:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x1102bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1102bcc40"/>
        <function-ref name="fired" scoped="" ref="0x1102bd1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1102bc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x1102bdae0"/>
        <function-ref name="getdt" scoped="" ref="0x1102ba590"/>
        <function-ref name="gett0" scoped="" ref="0x1102ba110"/>
        <function-ref name="isRunning" scoped="" ref="0x1102bd660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1102be390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1102bc630"/>
        <function-ref name="startOneShot" scoped="" ref="0x1102be860"/>
        <function-ref name="stop" scoped="" ref="0x1102bed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1102c7b50" loc="14:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1102c7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1102b3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1102b31b0"/>
        <function-ref name="led1On" scoped="" ref="0x1102b3340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1102b34d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1102b3660"/>
        <function-ref name="get" scoped="" ref="0x1102b37f0"/>
        <function-ref name="led1Off" scoped="" ref="0x1102b3980"/>
        <function-ref name="led2Off" scoped="" ref="0x1102d0020"/>
        <function-ref name="set" scoped="" ref="0x1102b3b10"/>
        <function-ref name="led0On" scoped="" ref="0x1102b3ca0"/>
        <function-ref name="led2On" scoped="" ref="0x1102b3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadT" ref="0x1102c25a0" loc="15:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadT" scoped="" ref="0x1102c25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1102c6200"/>
        <function-ref name="readDone" scoped="" ref="0x1102c6680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x1102babe0" loc="13:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x1102babe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1102b5110"/>
        <function-ref name="fired" scoped="" ref="0x1102b86a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1102b74a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x1102b7020"/>
        <function-ref name="getdt" scoped="" ref="0x1102b5a10"/>
        <function-ref name="gett0" scoped="" ref="0x1102b5590"/>
        <function-ref name="isRunning" scoped="" ref="0x1102b8b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1102b9860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1102b7ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x1102b9d30"/>
        <function-ref name="stop" scoped="" ref="0x1102b8220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x110333af0" loc="18:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x110333af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x110333e70"/>
        <function-ref name="source" scoped="" ref="0x1102dc030"/>
        <function-ref name="address" scoped="" ref="0x1102dc1c0"/>
        <function-ref name="destination" scoped="" ref="0x1102dc350"/>
        <function-ref name="setSource" scoped="" ref="0x1102dc4e0"/>
        <function-ref name="setDestination" scoped="" ref="0x1102dc670"/>
        <function-ref name="type" scoped="" ref="0x1102dc800"/>
        <function-ref name="setType" scoped="" ref="0x1102dc990"/>
        <function-ref name="isForMe" scoped="" ref="0x1102dcb20"/>
        <function-ref name="setGroup" scoped="" ref="0x1102dccb0"/>
        <function-ref name="localGroup" scoped="" ref="0x1102dce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1102af020" loc="11:SenderC.nc">
      <component-ref qname="SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1102af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1102c1630"/>
        <function-ref name="fired" scoped="" ref="0x1102aea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1102a4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x1102a44a0"/>
        <function-ref name="getdt" scoped="" ref="0x1102bf020"/>
        <function-ref name="gett0" scoped="" ref="0x1102c1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x1102a4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1102afc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1102c1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x1102ae110"/>
        <function-ref name="stop" scoped="" ref="0x1102ae5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x110369020" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x110369020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1103693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x11036da00" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x11036da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x11036dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110366020" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110366020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1103663a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x1103610c0" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x1103610c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110361440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110362280" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110362280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110362600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x110362990" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x110362990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110362d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x1103617a0" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x1103617a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110361b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11037d3f0" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11037d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11037d770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x110363640" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x110363640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1103639c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1103a0de0" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1103a0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x110382c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x110382310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1103824a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x110382630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x110382180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1103827c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x110382950"/>
        <function-ref name="initClocks" scoped="" ref="0x110382ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110386780" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110386780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110386b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1103b2a70" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1103b2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1103b1980"/>
        <function-ref name="initTimerB" scoped="" ref="0x1103b1020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1103b11b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x1103b1340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1103b2df0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1103b14d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1103b1660"/>
        <function-ref name="initClocks" scoped="" ref="0x1103b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x1103b1cc0" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x1103b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1103b00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1103b23c0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1103b23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1103b2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x1103f6a50" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x1103f6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103f6dd0"/>
        <function-ref name="getControl" scoped="" ref="0x1103f5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103f51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103f5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103f54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103f5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103f57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103f5980"/>
        <function-ref name="setControl" scoped="" ref="0x1103f5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x110408410" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x110408410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110408790"/>
        <function-ref name="getControl" scoped="" ref="0x110408920"/>
        <function-ref name="enableEvents" scoped="" ref="0x110408ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110408c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110408dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110407020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104071b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110407340"/>
        <function-ref name="setControl" scoped="" ref="0x1104074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x1103edbb0" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x1103edbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ec020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103ec1b0"/>
        <function-ref name="captured" scoped="" ref="0x1103ec340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103ec4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103ec660"/>
        <function-ref name="setEdge" scoped="" ref="0x1103ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x110419020" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x110419020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104193a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110419530"/>
        <function-ref name="captured" scoped="" ref="0x1104196c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110419850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104199e0"/>
        <function-ref name="setEdge" scoped="" ref="0x110419b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x1103ef020" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x1103ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ef3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1103ef530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103ef6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103ef850"/>
        <function-ref name="fired" scoped="" ref="0x1103ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x1103fc570" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x1103fc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103fc8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x1103fca80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103fcc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103fcda0"/>
        <function-ref name="fired" scoped="" ref="0x1103fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x110415020" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x110415020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104153a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110415530"/>
        <function-ref name="captured" scoped="" ref="0x1104156c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110415850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104159e0"/>
        <function-ref name="setEdge" scoped="" ref="0x110415b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x110403a50" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x110403a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110403dd0"/>
        <function-ref name="getControl" scoped="" ref="0x110402020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104021b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110402340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104024d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110402660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104027f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110402980"/>
        <function-ref name="setControl" scoped="" ref="0x110402b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x1103db020" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x1103db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103db3a0"/>
        <function-ref name="getControl" scoped="" ref="0x1103db530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103db6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103db850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103db9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103dbb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103dbd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103da020"/>
        <function-ref name="setControl" scoped="" ref="0x1103da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x11041b020" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x11041b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11041b3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11041b530"/>
        <function-ref name="captured" scoped="" ref="0x11041b6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11041b850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11041b9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x11041bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x1103fe890" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x1103fe890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103fec10"/>
        <function-ref name="setEvent" scoped="" ref="0x1103feda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103fd020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103fd1b0"/>
        <function-ref name="fired" scoped="" ref="0x1103fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x1104078c0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x1104078c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110407d40"/>
        <function-ref name="getControl" scoped="" ref="0x110406020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104061b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110406340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104064d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110406660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104067f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110406980"/>
        <function-ref name="setControl" scoped="" ref="0x110406b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x1103ecbb0" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x1103ecbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11040a020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11040a1b0"/>
        <function-ref name="captured" scoped="" ref="0x11040a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11040a4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11040a660"/>
        <function-ref name="setEdge" scoped="" ref="0x11040a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x110418020" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x110418020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104183a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110418530"/>
        <function-ref name="captured" scoped="" ref="0x1104186c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110418850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104189e0"/>
        <function-ref name="setEdge" scoped="" ref="0x110418b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x110405020" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x110405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104053a0"/>
        <function-ref name="getControl" scoped="" ref="0x110405530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104056c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110405850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104059e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110405b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110405d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110404020"/>
        <function-ref name="setControl" scoped="" ref="0x1104041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x1103efda0" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x1103efda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ee180"/>
        <function-ref name="setEvent" scoped="" ref="0x1103ee310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103ee4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103ee630"/>
        <function-ref name="fired" scoped="" ref="0x1103ee7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x1103dc7b0" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x1103dc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1103dcb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x1103dccc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103dce50"/>
        <function-ref name="get" scoped="" ref="0x1103e4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103e41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103e4340"/>
        <function-ref name="getMode" scoped="" ref="0x1103e44d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103e4660"/>
        <function-ref name="overflow" scoped="" ref="0x1103e47f0"/>
        <function-ref name="setMode" scoped="" ref="0x1103e4980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1103e4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x1103fb3e0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x1103fb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103fb760"/>
        <function-ref name="setEvent" scoped="" ref="0x1103fb8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103fba80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103fbc10"/>
        <function-ref name="fired" scoped="" ref="0x1103fbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x1103da5a0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x1103da5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103da920"/>
        <function-ref name="getControl" scoped="" ref="0x1103daab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103dac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103dadd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103f6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103f61b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103f6340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103f64d0"/>
        <function-ref name="setControl" scoped="" ref="0x1103f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x110401020" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x110401020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104013a0"/>
        <function-ref name="getControl" scoped="" ref="0x110401530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104016c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110401850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104019e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110401b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110401d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110400020"/>
        <function-ref name="setControl" scoped="" ref="0x1104001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x1103e8b60" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x1103e8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ed020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103ed1b0"/>
        <function-ref name="captured" scoped="" ref="0x1103ed340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103ed4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103ed660"/>
        <function-ref name="setEdge" scoped="" ref="0x1103ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x11041a020" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x11041a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11041a3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11041a530"/>
        <function-ref name="captured" scoped="" ref="0x11041a6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11041a850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11041a9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x11041ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x1103f3140" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x1103f3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103f34c0"/>
        <function-ref name="setEvent" scoped="" ref="0x1103f3650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103f37e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103f3970"/>
        <function-ref name="fired" scoped="" ref="0x1103f3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x1103fd700" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x1103fd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103fda80"/>
        <function-ref name="setEvent" scoped="" ref="0x1103fdc10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103fdda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103fc020"/>
        <function-ref name="fired" scoped="" ref="0x1103fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x110416020" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x110416020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104163a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110416530"/>
        <function-ref name="captured" scoped="" ref="0x1104166c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110416850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104169e0"/>
        <function-ref name="setEdge" scoped="" ref="0x110416b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x1104045a0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x1104045a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110404920"/>
        <function-ref name="getControl" scoped="" ref="0x110404ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110404c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110404dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110403020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104031b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110403340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104034d0"/>
        <function-ref name="setControl" scoped="" ref="0x110403660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x11040ab70" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x11040ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110409020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104091b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110409340"/>
        <function-ref name="get" scoped="" ref="0x1104094d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110409660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104097f0"/>
        <function-ref name="getMode" scoped="" ref="0x110409980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110409b10"/>
        <function-ref name="overflow" scoped="" ref="0x110409ca0"/>
        <function-ref name="setMode" scoped="" ref="0x110409e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110408020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x1103fa1f0" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x1103fa1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103fa570"/>
        <function-ref name="setEvent" scoped="" ref="0x1103fa700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103fa890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103faa20"/>
        <function-ref name="fired" scoped="" ref="0x1103fabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x11041c020" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x11041c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11041c3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11041c530"/>
        <function-ref name="captured" scoped="" ref="0x11041c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11041c850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11041c9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x11041cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x11041d020" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x11041d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11041d5a0"/>
        <function-ref name="setEvent" scoped="" ref="0x11041d730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11041d8c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11041da50"/>
        <function-ref name="fired" scoped="" ref="0x11041dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x1103ffa20" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x1103ffa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ffda0"/>
        <function-ref name="setEvent" scoped="" ref="0x1103fe020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103fe1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103fe340"/>
        <function-ref name="fired" scoped="" ref="0x1103fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x1104005a0" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x1104005a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110400920"/>
        <function-ref name="getControl" scoped="" ref="0x110400ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110400c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110400dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103ff020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103ff1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103ff340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103ff4d0"/>
        <function-ref name="setControl" scoped="" ref="0x1103ff660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x110449aa0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x110449aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110449e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x110449450" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x110449450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104497d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x110448120" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x110448120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104484a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x11044ad80" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x11044ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110449180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x11044c540" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11044c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11044c8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x11044ca50"/>
        <function-ref name="enableEvents" scoped="" ref="0x11044cbe0"/>
        <function-ref name="get" scoped="" ref="0x11044cd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x11044a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11044a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x11044a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11044a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x11044a660"/>
        <function-ref name="setMode" scoped="" ref="0x11044a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11044a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x110442940" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x110442940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110442cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x1104422f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x1104422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110442670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x110465020" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x110465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x110443bf0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110443bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110442020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1104443e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104443e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110444760"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104448f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110444a80"/>
        <function-ref name="get" scoped="" ref="0x110444c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x110444da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110443020"/>
        <function-ref name="getMode" scoped="" ref="0x1104431b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110443340"/>
        <function-ref name="overflow" scoped="" ref="0x1104434d0"/>
        <function-ref name="setMode" scoped="" ref="0x110443660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104b1a90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104b1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104b1e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104b0020"/>
        <function-ref name="captured" scoped="" ref="0x1104b01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104b0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104b04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104629d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104629d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110462d50"/>
        <function-ref name="getControl" scoped="" ref="0x11048c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x11048c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11048c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11048c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x11048c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11048c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11048c980"/>
        <function-ref name="setControl" scoped="" ref="0x11048cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104ae020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x11048cde0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x11048cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104b1180"/>
        <function-ref name="setEvent" scoped="" ref="0x1104b1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104b14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104b1630"/>
        <function-ref name="fired" scoped="" ref="0x1104b17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104b0930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104b0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104b0cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104b0e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104af020"/>
        <function-ref name="get" scoped="" ref="0x1104af1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104af340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104af4d0"/>
        <function-ref name="getMode" scoped="" ref="0x1104af660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104af7f0"/>
        <function-ref name="overflow" scoped="" ref="0x1104af980"/>
        <function-ref name="setMode" scoped="" ref="0x1104afb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104afca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104a8160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104a8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104a84e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104a8670"/>
        <function-ref name="captured" scoped="" ref="0x1104a8800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104a8990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104a8b20"/>
        <function-ref name="setEdge" scoped="" ref="0x1104a8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104ab020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104ab3a0"/>
        <function-ref name="getControl" scoped="" ref="0x1104ab530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104ab6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104ab850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104ab9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104abb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104abd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104a9020"/>
        <function-ref name="setControl" scoped="" ref="0x1104a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104a67a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104a67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104a6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104a9480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104a9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104a9800"/>
        <function-ref name="setEvent" scoped="" ref="0x1104a9990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104a9b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104a9cb0"/>
        <function-ref name="fired" scoped="" ref="0x1104a9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104a7020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104a73a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104a7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104a76c0"/>
        <function-ref name="get" scoped="" ref="0x1104a7850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104a79e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104a7b70"/>
        <function-ref name="getMode" scoped="" ref="0x1104a7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104a6020"/>
        <function-ref name="overflow" scoped="" ref="0x1104a61b0"/>
        <function-ref name="setMode" scoped="" ref="0x1104a6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104a17a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104a17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104a1b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104a1cb0"/>
        <function-ref name="captured" scoped="" ref="0x1104a1e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104a0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104a01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104a36d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104a36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104a3a50"/>
        <function-ref name="getControl" scoped="" ref="0x1104a3be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104a3d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104a2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104a21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104a2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104a24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104a2660"/>
        <function-ref name="setControl" scoped="" ref="0x1104a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x11049fc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x11049fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104a2ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104a2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104a2e40"/>
        <function-ref name="setEvent" scoped="" ref="0x1104a1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104a11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104a1340"/>
        <function-ref name="fired" scoped="" ref="0x1104a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104a0610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104a0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104a0990"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104a0b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104a0cb0"/>
        <function-ref name="get" scoped="" ref="0x1104a0e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x11049f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11049f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x11049f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11049f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x11049f660"/>
        <function-ref name="setMode" scoped="" ref="0x11049f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11049f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104bfcb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104bfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104be0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104be230"/>
        <function-ref name="captured" scoped="" ref="0x1104be3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104be550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104be6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104be870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104c2b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104c2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104c0020"/>
        <function-ref name="getControl" scoped="" ref="0x1104c01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104c0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104c04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104c0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104c07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104c0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104c0b10"/>
        <function-ref name="setControl" scoped="" ref="0x1104c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104bc2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104bc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104bf020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104bf3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1104bf530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104bf6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104bf850"/>
        <function-ref name="fired" scoped="" ref="0x1104bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104beb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104beb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104bd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104bd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104bd340"/>
        <function-ref name="get" scoped="" ref="0x1104bd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104bd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104bd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x1104bd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104bdb10"/>
        <function-ref name="overflow" scoped="" ref="0x1104bdca0"/>
        <function-ref name="setMode" scoped="" ref="0x1104bde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104b72f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104b7670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104b7800"/>
        <function-ref name="captured" scoped="" ref="0x1104b7990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104b7b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104b7cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104b7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104b9220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104b9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104b95a0"/>
        <function-ref name="getControl" scoped="" ref="0x1104b9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104b98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104b9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104b9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104b9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104b8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104b81b0"/>
        <function-ref name="setControl" scoped="" ref="0x1104b8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104b57a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104b57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104b5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104b8610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104b8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104b8990"/>
        <function-ref name="setEvent" scoped="" ref="0x1104b8b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104b8cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104b8e40"/>
        <function-ref name="fired" scoped="" ref="0x1104b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104b6160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104b6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104b64e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104b6670"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104b6800"/>
        <function-ref name="get" scoped="" ref="0x1104b6990"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104b6b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104b6cb0"/>
        <function-ref name="getMode" scoped="" ref="0x1104b6e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104b5020"/>
        <function-ref name="overflow" scoped="" ref="0x1104b51b0"/>
        <function-ref name="setMode" scoped="" ref="0x1104b5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104b54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104d57a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104d57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104d5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104d5cb0"/>
        <function-ref name="captured" scoped="" ref="0x1104d5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104d4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104d41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104b26d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104b26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104b2a50"/>
        <function-ref name="getControl" scoped="" ref="0x1104b2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104b2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104d7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104d71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104d7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104d74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104d7660"/>
        <function-ref name="setControl" scoped="" ref="0x1104d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104d3c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104d3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104d7ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104d7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104d7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x1104d5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104d51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104d5340"/>
        <function-ref name="fired" scoped="" ref="0x1104d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104d4610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104d4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104d4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104d4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104d4cb0"/>
        <function-ref name="get" scoped="" ref="0x1104d4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104d3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104d31b0"/>
        <function-ref name="getMode" scoped="" ref="0x1104d3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104d34d0"/>
        <function-ref name="overflow" scoped="" ref="0x1104d3660"/>
        <function-ref name="setMode" scoped="" ref="0x1104d37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104d3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104cecb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104cecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104cd0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104cd230"/>
        <function-ref name="captured" scoped="" ref="0x1104cd3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104cd550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104cd6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104cd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104d0b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104d0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104cf020"/>
        <function-ref name="getControl" scoped="" ref="0x1104cf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104cf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104cf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104cf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104cf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104cf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104cfb10"/>
        <function-ref name="setControl" scoped="" ref="0x1104cfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104cb2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104cb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104ce020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104ce3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1104ce530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104ce6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104ce850"/>
        <function-ref name="fired" scoped="" ref="0x1104ce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104cdb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104cdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104cc020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104cc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104cc340"/>
        <function-ref name="get" scoped="" ref="0x1104cc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104cc660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104cc7f0"/>
        <function-ref name="getMode" scoped="" ref="0x1104cc980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104ccb10"/>
        <function-ref name="overflow" scoped="" ref="0x1104ccca0"/>
        <function-ref name="setMode" scoped="" ref="0x1104cce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104c52f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104c5670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104c5800"/>
        <function-ref name="captured" scoped="" ref="0x1104c5990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104c5b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104c5cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104c5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104c8220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104c8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104c85a0"/>
        <function-ref name="getControl" scoped="" ref="0x1104c8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104c88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104c8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104c8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104c8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104c7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104c71b0"/>
        <function-ref name="setControl" scoped="" ref="0x1104c7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104e97a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104e97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104e9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104c7610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104c7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104c7990"/>
        <function-ref name="setEvent" scoped="" ref="0x1104c7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104c7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104c7e40"/>
        <function-ref name="fired" scoped="" ref="0x1104c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104ea160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104ea160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104ea4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104ea670"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104ea800"/>
        <function-ref name="get" scoped="" ref="0x1104ea990"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104eab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104eacb0"/>
        <function-ref name="getMode" scoped="" ref="0x1104eae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104e9020"/>
        <function-ref name="overflow" scoped="" ref="0x1104e91b0"/>
        <function-ref name="setMode" scoped="" ref="0x1104e9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104e47a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104e47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104e4b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104e4cb0"/>
        <function-ref name="captured" scoped="" ref="0x1104e4e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104e3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104e31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104e66d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104e66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104e6a50"/>
        <function-ref name="getControl" scoped="" ref="0x1104e6be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104e6d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104e5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104e51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104e5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104e54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104e5660"/>
        <function-ref name="setControl" scoped="" ref="0x1104e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104e2c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104e2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104e5ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104e5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104e5e40"/>
        <function-ref name="setEvent" scoped="" ref="0x1104e4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104e41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104e4340"/>
        <function-ref name="fired" scoped="" ref="0x1104e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104e3610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104e3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104e3990"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104e3b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104e3cb0"/>
        <function-ref name="get" scoped="" ref="0x1104e3e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104e2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104e21b0"/>
        <function-ref name="getMode" scoped="" ref="0x1104e2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104e24d0"/>
        <function-ref name="overflow" scoped="" ref="0x1104e2660"/>
        <function-ref name="setMode" scoped="" ref="0x1104e27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104ddcb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104ddcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104db0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104db230"/>
        <function-ref name="captured" scoped="" ref="0x1104db3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104db550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104db6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x1104db870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104dfb30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104dfb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104de020"/>
        <function-ref name="getControl" scoped="" ref="0x1104de1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104de340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104de4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104de660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104de7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104de980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104deb10"/>
        <function-ref name="setControl" scoped="" ref="0x1104deca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104d92f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104d9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104dd020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104dd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1104dd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104dd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104dd850"/>
        <function-ref name="fired" scoped="" ref="0x1104dd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104dbb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104dbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104da020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104da1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104da340"/>
        <function-ref name="get" scoped="" ref="0x1104da4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104da660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104da7f0"/>
        <function-ref name="getMode" scoped="" ref="0x1104da980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104dab10"/>
        <function-ref name="overflow" scoped="" ref="0x1104daca0"/>
        <function-ref name="setMode" scoped="" ref="0x1104dae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x1104fa240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x1104fa240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104fa5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x1104fea90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x1104fea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104fee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x1104fb260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x1104fb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104fb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x1104fb9f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x1104fb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104fbd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x110195510" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x110195510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x110195890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10fdf9760" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10fdf9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10fdf9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x10fe9ecc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x10fe9ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x10ff330a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x110384b40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x110384b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x11051ab10"/>
        <function-ref name="initTimerB" scoped="" ref="0x11051a1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x11051a340"/>
        <function-ref name="initTimerA" scoped="" ref="0x11051a4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x11051a020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x11051a660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x11051a7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x11051a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x110539dc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x110539dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110538180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x11051b590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x11051b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x11051b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x1105396c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x1105396c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110539a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x11051bc00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x11051bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110539020"/>
        <function-ref name="taskLoop" scoped="" ref="0x1105391b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x110539340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10fd251d0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10fd251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fd25550"/>
        <function-ref name="runTask" scoped="" ref="0x10fd256e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10fd993a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10fd993a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10fd99720"/>
        <function-ref name="taskLoop" scoped="" ref="0x10fd998b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10fd99a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x110270320" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x110270320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1102706a0"/>
        <function-ref name="runTask" scoped="" ref="0x110270830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x11026c990" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x11026c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x11026cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x110271420" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x110271420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1102717a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x110271930"/>
        <function-ref name="runNextTask" scoped="" ref="0x110271ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x11036b590" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x11036b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x11036b910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x11036baa0"/>
        <function-ref name="led1On" scoped="" ref="0x11036bc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x11036bdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x11052d020"/>
        <function-ref name="get" scoped="" ref="0x11052d1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x11052d340"/>
        <function-ref name="led2Off" scoped="" ref="0x11052d980"/>
        <function-ref name="set" scoped="" ref="0x11052d4d0"/>
        <function-ref name="led0On" scoped="" ref="0x11052d660"/>
        <function-ref name="led2On" scoped="" ref="0x11052d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x1105497b0" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x1105497b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110549b30"/>
        <function-ref name="isInput" scoped="" ref="0x110549cc0"/>
        <function-ref name="toggle" scoped="" ref="0x110549e50"/>
        <function-ref name="isOutput" scoped="" ref="0x11054f020"/>
        <function-ref name="get" scoped="" ref="0x11054f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11054f340"/>
        <function-ref name="set" scoped="" ref="0x11054f4d0"/>
        <function-ref name="clr" scoped="" ref="0x11054f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11052c8d0" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11052c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11052cc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x11054f980" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x11054f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11054fd00"/>
        <function-ref name="isInput" scoped="" ref="0x11054e020"/>
        <function-ref name="toggle" scoped="" ref="0x11054e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x11054e340"/>
        <function-ref name="get" scoped="" ref="0x11054e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11054e660"/>
        <function-ref name="set" scoped="" ref="0x11054e7f0"/>
        <function-ref name="clr" scoped="" ref="0x11054e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x110551020" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110551020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1105513a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110551530"/>
        <function-ref name="led1On" scoped="" ref="0x1105516c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110551850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1105519e0"/>
        <function-ref name="get" scoped="" ref="0x110551b70"/>
        <function-ref name="led1Off" scoped="" ref="0x110551d00"/>
        <function-ref name="led2Off" scoped="" ref="0x1105504d0"/>
        <function-ref name="set" scoped="" ref="0x110550020"/>
        <function-ref name="led0On" scoped="" ref="0x1105501b0"/>
        <function-ref name="led2On" scoped="" ref="0x110550340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x11054eca0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x11054eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105480a0"/>
        <function-ref name="isInput" scoped="" ref="0x110548230"/>
        <function-ref name="toggle" scoped="" ref="0x1105483c0"/>
        <function-ref name="isOutput" scoped="" ref="0x110548550"/>
        <function-ref name="get" scoped="" ref="0x1105486e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110548870"/>
        <function-ref name="set" scoped="" ref="0x110548a00"/>
        <function-ref name="clr" scoped="" ref="0x110548b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x110554360" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x110554360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105546e0"/>
        <function-ref name="isInput" scoped="" ref="0x110554870"/>
        <function-ref name="toggle" scoped="" ref="0x110554a00"/>
        <function-ref name="isOutput" scoped="" ref="0x110554b90"/>
        <function-ref name="get" scoped="" ref="0x110554d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x11057c020"/>
        <function-ref name="set" scoped="" ref="0x11057c1b0"/>
        <function-ref name="clr" scoped="" ref="0x11057c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x11057c6a0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x11057c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11057ca20"/>
        <function-ref name="isInput" scoped="" ref="0x11057cbb0"/>
        <function-ref name="toggle" scoped="" ref="0x11057cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x11057b020"/>
        <function-ref name="get" scoped="" ref="0x11057b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11057b340"/>
        <function-ref name="set" scoped="" ref="0x11057b4d0"/>
        <function-ref name="clr" scoped="" ref="0x11057b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x11057ac40" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11057ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110579020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x11057b9c0" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x11057b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11057bd40"/>
        <function-ref name="isInput" scoped="" ref="0x11057a020"/>
        <function-ref name="toggle" scoped="" ref="0x11057a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x11057a340"/>
        <function-ref name="get" scoped="" ref="0x11057a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11057a660"/>
        <function-ref name="set" scoped="" ref="0x11057a7f0"/>
        <function-ref name="clr" scoped="" ref="0x11057a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x11058e020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x11058e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11058e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11058e530"/>
        <function-ref name="setResistor" scoped="" ref="0x11058e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11058e850"/>
        <function-ref name="isOutput" scoped="" ref="0x11058e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11058eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11058ed00"/>
        <function-ref name="get" scoped="" ref="0x11058d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11058d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11058d340"/>
        <function-ref name="set" scoped="" ref="0x11058d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11058d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11058d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11058da80"/>
        <function-ref name="clr" scoped="" ref="0x11058dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x1105a3020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x1105a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105a33a0"/>
        <function-ref name="isInput" scoped="" ref="0x1105a3530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105a36c0"/>
        <function-ref name="toggle" scoped="" ref="0x1105a3850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105a39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105a3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105a3d00"/>
        <function-ref name="get" scoped="" ref="0x1105a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1105a2340"/>
        <function-ref name="set" scoped="" ref="0x1105a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105a2a80"/>
        <function-ref name="clr" scoped="" ref="0x1105a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x1105d8560" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x1105d8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105d88e0"/>
        <function-ref name="isInput" scoped="" ref="0x1105d8a70"/>
        <function-ref name="setResistor" scoped="" ref="0x1105d8c00"/>
        <function-ref name="toggle" scoped="" ref="0x1105d8d90"/>
        <function-ref name="isOutput" scoped="" ref="0x1105d7020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105d7340"/>
        <function-ref name="get" scoped="" ref="0x1105d74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105d7660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105d77f0"/>
        <function-ref name="set" scoped="" ref="0x1105d7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105d7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105d7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105d6020"/>
        <function-ref name="clr" scoped="" ref="0x1105d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x11060a570" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x11060a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11060a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x11060aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x11060ac10"/>
        <function-ref name="toggle" scoped="" ref="0x11060ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x110609020"/>
        <function-ref name="getResistor" scoped="" ref="0x1106091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110609340"/>
        <function-ref name="get" scoped="" ref="0x1106094d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110609660"/>
        <function-ref name="getRaw" scoped="" ref="0x1106097f0"/>
        <function-ref name="set" scoped="" ref="0x110609980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110609b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110609ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110608020"/>
        <function-ref name="clr" scoped="" ref="0x1106081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x1105d6580" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x1105d6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105d6900"/>
        <function-ref name="isInput" scoped="" ref="0x1105d6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105d6c20"/>
        <function-ref name="toggle" scoped="" ref="0x1105d6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105d5020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105d51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105d5340"/>
        <function-ref name="get" scoped="" ref="0x1105d54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105d5660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105d57f0"/>
        <function-ref name="set" scoped="" ref="0x1105d5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105d5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105d5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105d4020"/>
        <function-ref name="clr" scoped="" ref="0x1105d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x11059f020" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x11059f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11059f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11059f530"/>
        <function-ref name="setResistor" scoped="" ref="0x11059f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11059f850"/>
        <function-ref name="isOutput" scoped="" ref="0x11059f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11059fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11059fd00"/>
        <function-ref name="get" scoped="" ref="0x11059e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11059e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11059e340"/>
        <function-ref name="set" scoped="" ref="0x11059e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11059e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11059e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11059ea80"/>
        <function-ref name="clr" scoped="" ref="0x11059ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x1105b5200" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x1105b5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105b5580"/>
        <function-ref name="isInput" scoped="" ref="0x1105b5710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105b58a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105b5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105b5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105b5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105b4020"/>
        <function-ref name="get" scoped="" ref="0x1105b41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105b4340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105b44d0"/>
        <function-ref name="set" scoped="" ref="0x1105b4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105b47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105b4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105b4c10"/>
        <function-ref name="clr" scoped="" ref="0x1105b4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x1105ca200" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x1105ca200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105ca580"/>
        <function-ref name="isInput" scoped="" ref="0x1105ca710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105ca8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105caa30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105cabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105cad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105c9020"/>
        <function-ref name="get" scoped="" ref="0x1105c91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105c9340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105c94d0"/>
        <function-ref name="set" scoped="" ref="0x1105c9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105c97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105c9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105c9c10"/>
        <function-ref name="clr" scoped="" ref="0x1105c9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x1105e4200" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x1105e4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105e4580"/>
        <function-ref name="isInput" scoped="" ref="0x1105e4710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105e48a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105e4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105e4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105e4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105e3020"/>
        <function-ref name="get" scoped="" ref="0x1105e31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105e3340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105e34d0"/>
        <function-ref name="set" scoped="" ref="0x1105e3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105e37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105e3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105e3c10"/>
        <function-ref name="clr" scoped="" ref="0x1105e3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x1105fb580" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x1105fb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105fb900"/>
        <function-ref name="isInput" scoped="" ref="0x1105fba90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105fbc20"/>
        <function-ref name="toggle" scoped="" ref="0x1105fbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105fa020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105fa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105fa340"/>
        <function-ref name="get" scoped="" ref="0x1105fa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105fa660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105fa7f0"/>
        <function-ref name="set" scoped="" ref="0x1105fa980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105fab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105faca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105f9020"/>
        <function-ref name="clr" scoped="" ref="0x1105f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x1105ea570" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x1105ea570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105ea8f0"/>
        <function-ref name="isInput" scoped="" ref="0x1105eaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x1105eac10"/>
        <function-ref name="toggle" scoped="" ref="0x1105eada0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105e9020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105e9340"/>
        <function-ref name="get" scoped="" ref="0x1105e94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105e9660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105e97f0"/>
        <function-ref name="set" scoped="" ref="0x1105e9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105e9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105e9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105e8020"/>
        <function-ref name="clr" scoped="" ref="0x1105e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x110602580" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x110602580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110602900"/>
        <function-ref name="isInput" scoped="" ref="0x110602a90"/>
        <function-ref name="setResistor" scoped="" ref="0x110602c20"/>
        <function-ref name="toggle" scoped="" ref="0x110602db0"/>
        <function-ref name="isOutput" scoped="" ref="0x110601020"/>
        <function-ref name="getResistor" scoped="" ref="0x1106011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110601340"/>
        <function-ref name="get" scoped="" ref="0x1106014d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110601660"/>
        <function-ref name="getRaw" scoped="" ref="0x1106017f0"/>
        <function-ref name="set" scoped="" ref="0x110601980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110601b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110601ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110600020"/>
        <function-ref name="clr" scoped="" ref="0x1106001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x110588020" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x110588020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105883a0"/>
        <function-ref name="isInput" scoped="" ref="0x110588530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105886c0"/>
        <function-ref name="toggle" scoped="" ref="0x110588850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105889e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110588b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110588d00"/>
        <function-ref name="get" scoped="" ref="0x110587020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110587340"/>
        <function-ref name="set" scoped="" ref="0x1105874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110587660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110587a80"/>
        <function-ref name="clr" scoped="" ref="0x110587c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x1105f9580" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x1105f9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105f9900"/>
        <function-ref name="isInput" scoped="" ref="0x1105f9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105f9c20"/>
        <function-ref name="toggle" scoped="" ref="0x1105f9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105f8020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105f8340"/>
        <function-ref name="get" scoped="" ref="0x1105f84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105f8660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105f87f0"/>
        <function-ref name="set" scoped="" ref="0x1105f8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105f8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105f8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105f7020"/>
        <function-ref name="clr" scoped="" ref="0x1105f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x110584020" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x110584020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105843a0"/>
        <function-ref name="isInput" scoped="" ref="0x110584530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105846c0"/>
        <function-ref name="toggle" scoped="" ref="0x110584850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105849e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110584b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110584d00"/>
        <function-ref name="get" scoped="" ref="0x110583020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110583340"/>
        <function-ref name="set" scoped="" ref="0x1105834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110583660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110583a80"/>
        <function-ref name="clr" scoped="" ref="0x110583c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x110599020" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x110599020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105993a0"/>
        <function-ref name="isInput" scoped="" ref="0x110599530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105996c0"/>
        <function-ref name="toggle" scoped="" ref="0x110599850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105999e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110599b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110599d00"/>
        <function-ref name="get" scoped="" ref="0x110598020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110598340"/>
        <function-ref name="set" scoped="" ref="0x1105984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110598660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110598a80"/>
        <function-ref name="clr" scoped="" ref="0x110598c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x1105af200" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x1105af200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105af580"/>
        <function-ref name="isInput" scoped="" ref="0x1105af710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105af8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105afa30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105afbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105afd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105ae020"/>
        <function-ref name="get" scoped="" ref="0x1105ae1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105ae340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105ae4d0"/>
        <function-ref name="set" scoped="" ref="0x1105ae660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105ae7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105ae980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105aec10"/>
        <function-ref name="clr" scoped="" ref="0x1105aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x1105c4200" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x1105c4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105c4580"/>
        <function-ref name="isInput" scoped="" ref="0x1105c4710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105c48a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105c4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105c4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105c4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105c3020"/>
        <function-ref name="get" scoped="" ref="0x1105c31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105c3340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105c34d0"/>
        <function-ref name="set" scoped="" ref="0x1105c3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105c37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105c3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105c3c10"/>
        <function-ref name="clr" scoped="" ref="0x1105c3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x1105de200" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x1105de200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105de580"/>
        <function-ref name="isInput" scoped="" ref="0x1105de710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105de8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105dea30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105debc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105ded50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105dd020"/>
        <function-ref name="get" scoped="" ref="0x1105dd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105dd340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105dd4d0"/>
        <function-ref name="set" scoped="" ref="0x1105dd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105dd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105dd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105ddc10"/>
        <function-ref name="clr" scoped="" ref="0x1105ddda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x110568020" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x110568020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105683a0"/>
        <function-ref name="isInput" scoped="" ref="0x110568530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105686c0"/>
        <function-ref name="toggle" scoped="" ref="0x110568850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105689e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110568b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110568d00"/>
        <function-ref name="get" scoped="" ref="0x110591020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110591340"/>
        <function-ref name="set" scoped="" ref="0x1105914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110591660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110591a80"/>
        <function-ref name="clr" scoped="" ref="0x110591c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x11057d020" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x11057d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11057d4a0"/>
        <function-ref name="isInput" scoped="" ref="0x11057d630"/>
        <function-ref name="setResistor" scoped="" ref="0x11057d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x11057d950"/>
        <function-ref name="isOutput" scoped="" ref="0x11057dae0"/>
        <function-ref name="getResistor" scoped="" ref="0x11057dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11057de00"/>
        <function-ref name="get" scoped="" ref="0x1105a6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105a61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1105a6340"/>
        <function-ref name="set" scoped="" ref="0x1105a64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105a6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105a67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105a6a80"/>
        <function-ref name="clr" scoped="" ref="0x1105a6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x110593020" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x110593020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105933a0"/>
        <function-ref name="isInput" scoped="" ref="0x110593530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105936c0"/>
        <function-ref name="toggle" scoped="" ref="0x110593850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105939e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110593b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110593d00"/>
        <function-ref name="get" scoped="" ref="0x110592020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110592340"/>
        <function-ref name="set" scoped="" ref="0x1105924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110592660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110592a80"/>
        <function-ref name="clr" scoped="" ref="0x110592c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x1105da580" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x1105da580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105da900"/>
        <function-ref name="isInput" scoped="" ref="0x1105daa90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105dac20"/>
        <function-ref name="toggle" scoped="" ref="0x1105dadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105d9020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105d9340"/>
        <function-ref name="get" scoped="" ref="0x1105d94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105d9660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105d97f0"/>
        <function-ref name="set" scoped="" ref="0x1105d9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105d9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105d9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105d8020"/>
        <function-ref name="clr" scoped="" ref="0x1105d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x110610570" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x110610570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106108f0"/>
        <function-ref name="isInput" scoped="" ref="0x110610a80"/>
        <function-ref name="setResistor" scoped="" ref="0x110610c10"/>
        <function-ref name="toggle" scoped="" ref="0x110610da0"/>
        <function-ref name="isOutput" scoped="" ref="0x11060f020"/>
        <function-ref name="getResistor" scoped="" ref="0x11060f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11060f340"/>
        <function-ref name="get" scoped="" ref="0x11060f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11060f660"/>
        <function-ref name="getRaw" scoped="" ref="0x11060f7f0"/>
        <function-ref name="set" scoped="" ref="0x11060f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11060fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11060fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11060e020"/>
        <function-ref name="clr" scoped="" ref="0x11060e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x110604570" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x110604570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106048f0"/>
        <function-ref name="isInput" scoped="" ref="0x110604a80"/>
        <function-ref name="setResistor" scoped="" ref="0x110604c10"/>
        <function-ref name="toggle" scoped="" ref="0x110604da0"/>
        <function-ref name="isOutput" scoped="" ref="0x110603020"/>
        <function-ref name="getResistor" scoped="" ref="0x1106031b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110603340"/>
        <function-ref name="get" scoped="" ref="0x1106034d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110603660"/>
        <function-ref name="getRaw" scoped="" ref="0x1106037f0"/>
        <function-ref name="set" scoped="" ref="0x110603980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110603b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110603ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110602020"/>
        <function-ref name="clr" scoped="" ref="0x1106021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x1105f0580" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x1105f0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105f0900"/>
        <function-ref name="isInput" scoped="" ref="0x1105f0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105f0c20"/>
        <function-ref name="toggle" scoped="" ref="0x1105f0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105ef020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105ef340"/>
        <function-ref name="get" scoped="" ref="0x1105ef4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105ef660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105ef7f0"/>
        <function-ref name="set" scoped="" ref="0x1105ef980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105efb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105efca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105ee020"/>
        <function-ref name="clr" scoped="" ref="0x1105ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x1105b9020" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x1105b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105b95a0"/>
        <function-ref name="isInput" scoped="" ref="0x1105b9730"/>
        <function-ref name="setResistor" scoped="" ref="0x1105b98c0"/>
        <function-ref name="toggle" scoped="" ref="0x1105b9a50"/>
        <function-ref name="isOutput" scoped="" ref="0x1105b9be0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105b9d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105b8020"/>
        <function-ref name="get" scoped="" ref="0x1105b81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105b8340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105b84d0"/>
        <function-ref name="set" scoped="" ref="0x1105b8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105b87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105b8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105b8c10"/>
        <function-ref name="clr" scoped="" ref="0x1105b8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x1105cf200" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x1105cf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105cf580"/>
        <function-ref name="isInput" scoped="" ref="0x1105cf710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105cf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105cfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105cfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105cfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105ce020"/>
        <function-ref name="get" scoped="" ref="0x1105ce1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105ce340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105ce4d0"/>
        <function-ref name="set" scoped="" ref="0x1105ce660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105ce7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105ce980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105cec10"/>
        <function-ref name="clr" scoped="" ref="0x1105ceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x1105be200" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x1105be200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105be580"/>
        <function-ref name="isInput" scoped="" ref="0x1105be710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105be8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105bea30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105bebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105bed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105bd020"/>
        <function-ref name="get" scoped="" ref="0x1105bd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105bd340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105bd4d0"/>
        <function-ref name="set" scoped="" ref="0x1105bd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105bd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105bd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105bdc10"/>
        <function-ref name="clr" scoped="" ref="0x1105bdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x11060e570" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x11060e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11060e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x11060ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x11060ec10"/>
        <function-ref name="toggle" scoped="" ref="0x11060eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x11060d020"/>
        <function-ref name="getResistor" scoped="" ref="0x11060d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11060d340"/>
        <function-ref name="get" scoped="" ref="0x11060d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11060d660"/>
        <function-ref name="getRaw" scoped="" ref="0x11060d7f0"/>
        <function-ref name="set" scoped="" ref="0x11060d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11060db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11060dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11060c020"/>
        <function-ref name="clr" scoped="" ref="0x11060c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x1105f7570" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x1105f7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105f78f0"/>
        <function-ref name="isInput" scoped="" ref="0x1105f7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x1105f7c10"/>
        <function-ref name="toggle" scoped="" ref="0x1105f7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105f6020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105f6340"/>
        <function-ref name="get" scoped="" ref="0x1105f64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105f6660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105f67f0"/>
        <function-ref name="set" scoped="" ref="0x1105f6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105f6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105f6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105f5020"/>
        <function-ref name="clr" scoped="" ref="0x1105f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x11058c020" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x11058c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11058c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11058c530"/>
        <function-ref name="setResistor" scoped="" ref="0x11058c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11058c850"/>
        <function-ref name="isOutput" scoped="" ref="0x11058c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11058cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11058cd00"/>
        <function-ref name="get" scoped="" ref="0x11058b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11058b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11058b340"/>
        <function-ref name="set" scoped="" ref="0x11058b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11058b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11058b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11058ba80"/>
        <function-ref name="clr" scoped="" ref="0x11058bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x1105a1020" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x1105a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105a13a0"/>
        <function-ref name="isInput" scoped="" ref="0x1105a1530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105a16c0"/>
        <function-ref name="toggle" scoped="" ref="0x1105a1850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105a19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105a1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105a1d00"/>
        <function-ref name="get" scoped="" ref="0x1105a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105a01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1105a0340"/>
        <function-ref name="set" scoped="" ref="0x1105a04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105a0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105a07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105a0a80"/>
        <function-ref name="clr" scoped="" ref="0x1105a0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x1105c2200" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x1105c2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105c2580"/>
        <function-ref name="isInput" scoped="" ref="0x1105c2710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105c28a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105c2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105c2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105c2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105c1020"/>
        <function-ref name="get" scoped="" ref="0x1105c11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105c1340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105c14d0"/>
        <function-ref name="set" scoped="" ref="0x1105c1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105c17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105c1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105c1c10"/>
        <function-ref name="clr" scoped="" ref="0x1105c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x11059d020" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x11059d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11059d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11059d530"/>
        <function-ref name="setResistor" scoped="" ref="0x11059d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11059d850"/>
        <function-ref name="isOutput" scoped="" ref="0x11059d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11059db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11059dd00"/>
        <function-ref name="get" scoped="" ref="0x11059c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11059c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11059c340"/>
        <function-ref name="set" scoped="" ref="0x11059c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11059c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11059c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11059ca80"/>
        <function-ref name="clr" scoped="" ref="0x11059cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x1105b3200" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x1105b3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105b3580"/>
        <function-ref name="isInput" scoped="" ref="0x1105b3710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105b38a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105b3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105b3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105b3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105b2020"/>
        <function-ref name="get" scoped="" ref="0x1105b21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105b2340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105b24d0"/>
        <function-ref name="set" scoped="" ref="0x1105b2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105b27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105b2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105b2c10"/>
        <function-ref name="clr" scoped="" ref="0x1105b2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x1105c8200" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x1105c8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105c8580"/>
        <function-ref name="isInput" scoped="" ref="0x1105c8710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105c88a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105c8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105c8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105c8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105c7020"/>
        <function-ref name="get" scoped="" ref="0x1105c71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105c7340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105c74d0"/>
        <function-ref name="set" scoped="" ref="0x1105c7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105c77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105c7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105c7c10"/>
        <function-ref name="clr" scoped="" ref="0x1105c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x1105e2200" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x1105e2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105e2580"/>
        <function-ref name="isInput" scoped="" ref="0x1105e2710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105e28a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105e2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105e2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105e2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105e1020"/>
        <function-ref name="get" scoped="" ref="0x1105e11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105e1340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105e14d0"/>
        <function-ref name="set" scoped="" ref="0x1105e1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105e17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105e1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105e1c10"/>
        <function-ref name="clr" scoped="" ref="0x1105e1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x1105f3580" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x1105f3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105f3900"/>
        <function-ref name="isInput" scoped="" ref="0x1105f3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105f3c20"/>
        <function-ref name="toggle" scoped="" ref="0x1105f3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105f1020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105f1340"/>
        <function-ref name="get" scoped="" ref="0x1105f14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105f1660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105f17f0"/>
        <function-ref name="set" scoped="" ref="0x1105f1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105f1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105f1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105f0020"/>
        <function-ref name="clr" scoped="" ref="0x1105f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x110575020" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x110575020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105753a0"/>
        <function-ref name="isInput" scoped="" ref="0x110575530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105756c0"/>
        <function-ref name="toggle" scoped="" ref="0x110575850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105759e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110575b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110575d00"/>
        <function-ref name="get" scoped="" ref="0x110574020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110574340"/>
        <function-ref name="set" scoped="" ref="0x1105744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110574660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110574a80"/>
        <function-ref name="clr" scoped="" ref="0x110574c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x110582020" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x110582020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105823a0"/>
        <function-ref name="isInput" scoped="" ref="0x110582530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105826c0"/>
        <function-ref name="toggle" scoped="" ref="0x110582850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105829e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110582b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110582d00"/>
        <function-ref name="get" scoped="" ref="0x110581020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110581340"/>
        <function-ref name="set" scoped="" ref="0x1105814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110581660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110581a80"/>
        <function-ref name="clr" scoped="" ref="0x110581c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x110597020" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x110597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105973a0"/>
        <function-ref name="isInput" scoped="" ref="0x110597530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105976c0"/>
        <function-ref name="toggle" scoped="" ref="0x110597850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105979e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110597b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110597d00"/>
        <function-ref name="get" scoped="" ref="0x110596020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110596340"/>
        <function-ref name="set" scoped="" ref="0x1105964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110596660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110596a80"/>
        <function-ref name="clr" scoped="" ref="0x110596c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x1105ad200" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x1105ad200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105ad580"/>
        <function-ref name="isInput" scoped="" ref="0x1105ad710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105ad8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105ada30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105adbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105add50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105ac020"/>
        <function-ref name="get" scoped="" ref="0x1105ac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105ac340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105ac4d0"/>
        <function-ref name="set" scoped="" ref="0x1105ac660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105ac7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105ac980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105acc10"/>
        <function-ref name="clr" scoped="" ref="0x1105acda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x1105ee580" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x1105ee580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105ee900"/>
        <function-ref name="isInput" scoped="" ref="0x1105eea90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105eec20"/>
        <function-ref name="toggle" scoped="" ref="0x1105eedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105ed020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105ed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105ed340"/>
        <function-ref name="get" scoped="" ref="0x1105ed4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105ed660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105ed7f0"/>
        <function-ref name="set" scoped="" ref="0x1105ed980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105edb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105edca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105ec020"/>
        <function-ref name="clr" scoped="" ref="0x1105ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x1105e8570" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x1105e8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105e88f0"/>
        <function-ref name="isInput" scoped="" ref="0x1105e8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x1105e8c10"/>
        <function-ref name="toggle" scoped="" ref="0x1105e8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105e7020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105e7340"/>
        <function-ref name="get" scoped="" ref="0x1105e74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105e7660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105e77f0"/>
        <function-ref name="set" scoped="" ref="0x1105e7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105e7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105e7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105e6020"/>
        <function-ref name="clr" scoped="" ref="0x1105e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x110608570" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x110608570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106088f0"/>
        <function-ref name="isInput" scoped="" ref="0x110608a80"/>
        <function-ref name="setResistor" scoped="" ref="0x110608c10"/>
        <function-ref name="toggle" scoped="" ref="0x110608da0"/>
        <function-ref name="isOutput" scoped="" ref="0x110607020"/>
        <function-ref name="getResistor" scoped="" ref="0x1106071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110607340"/>
        <function-ref name="get" scoped="" ref="0x1106074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110607660"/>
        <function-ref name="getRaw" scoped="" ref="0x1106077f0"/>
        <function-ref name="set" scoped="" ref="0x110607980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110607b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110607ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110606020"/>
        <function-ref name="clr" scoped="" ref="0x1106061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x1105a9200" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x1105a9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105a9580"/>
        <function-ref name="isInput" scoped="" ref="0x1105a9710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105a98a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105a9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105a9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105a9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105a8020"/>
        <function-ref name="get" scoped="" ref="0x1105a81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105a8340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105a84d0"/>
        <function-ref name="set" scoped="" ref="0x1105a8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105a87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105a8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105a8c10"/>
        <function-ref name="clr" scoped="" ref="0x1105a8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x1105ec580" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x1105ec580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105ec900"/>
        <function-ref name="isInput" scoped="" ref="0x1105eca90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105ecc20"/>
        <function-ref name="toggle" scoped="" ref="0x1105ecdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105eb020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105eb340"/>
        <function-ref name="get" scoped="" ref="0x1105eb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105eb660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105eb7f0"/>
        <function-ref name="set" scoped="" ref="0x1105eb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105ebb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105ebca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105ea020"/>
        <function-ref name="clr" scoped="" ref="0x1105ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x110590020" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x110590020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105903a0"/>
        <function-ref name="isInput" scoped="" ref="0x110590530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105906c0"/>
        <function-ref name="toggle" scoped="" ref="0x110590850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105909e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110590b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110590d00"/>
        <function-ref name="get" scoped="" ref="0x11058f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11058f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11058f340"/>
        <function-ref name="set" scoped="" ref="0x11058f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11058f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11058f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11058fa80"/>
        <function-ref name="clr" scoped="" ref="0x11058fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x1105a5020" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x1105a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105a53a0"/>
        <function-ref name="isInput" scoped="" ref="0x1105a5530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105a56c0"/>
        <function-ref name="toggle" scoped="" ref="0x1105a5850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105a59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105a5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105a5d00"/>
        <function-ref name="get" scoped="" ref="0x1105a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105a41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1105a4340"/>
        <function-ref name="set" scoped="" ref="0x1105a44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105a4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105a47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105a4a80"/>
        <function-ref name="clr" scoped="" ref="0x1105a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x1105bb020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x1105bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105bb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1105bb530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105bb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1105bb850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105bb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105bbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105bbd00"/>
        <function-ref name="get" scoped="" ref="0x1105ba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105ba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1105ba340"/>
        <function-ref name="set" scoped="" ref="0x1105ba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105ba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105ba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105baa80"/>
        <function-ref name="clr" scoped="" ref="0x1105bac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x1105f5580" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x1105f5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105f5900"/>
        <function-ref name="isInput" scoped="" ref="0x1105f5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105f5c20"/>
        <function-ref name="toggle" scoped="" ref="0x1105f5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105f4340"/>
        <function-ref name="get" scoped="" ref="0x1105f44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105f4660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105f47f0"/>
        <function-ref name="set" scoped="" ref="0x1105f4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105f4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105f4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105f3020"/>
        <function-ref name="clr" scoped="" ref="0x1105f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x11060c570" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x11060c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11060c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x11060ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x11060cc10"/>
        <function-ref name="toggle" scoped="" ref="0x11060cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x11060b020"/>
        <function-ref name="getResistor" scoped="" ref="0x11060b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11060b340"/>
        <function-ref name="get" scoped="" ref="0x11060b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11060b660"/>
        <function-ref name="getRaw" scoped="" ref="0x11060b7f0"/>
        <function-ref name="set" scoped="" ref="0x11060b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11060bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11060bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11060a020"/>
        <function-ref name="clr" scoped="" ref="0x11060a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x1105b7200" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x1105b7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105b7580"/>
        <function-ref name="isInput" scoped="" ref="0x1105b7710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105b78a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105b7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105b7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105b7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105b6020"/>
        <function-ref name="get" scoped="" ref="0x1105b61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105b6340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105b64d0"/>
        <function-ref name="set" scoped="" ref="0x1105b6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105b67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105b6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105b6c10"/>
        <function-ref name="clr" scoped="" ref="0x1105b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x1105cc200" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x1105cc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105cc580"/>
        <function-ref name="isInput" scoped="" ref="0x1105cc710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105cc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105cca30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105ccbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105ccd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105cb020"/>
        <function-ref name="get" scoped="" ref="0x1105cb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105cb4d0"/>
        <function-ref name="set" scoped="" ref="0x1105cb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105cb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105cb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105cbc10"/>
        <function-ref name="clr" scoped="" ref="0x1105cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x1105bc200" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x1105bc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105bc580"/>
        <function-ref name="isInput" scoped="" ref="0x1105bc710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105bc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105bca30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105bcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105bcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105e5020"/>
        <function-ref name="get" scoped="" ref="0x1105e51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105e5340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105e54d0"/>
        <function-ref name="set" scoped="" ref="0x1105e5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105e57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105e5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105e5c10"/>
        <function-ref name="clr" scoped="" ref="0x1105e5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x11058a020" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x11058a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11058a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11058a530"/>
        <function-ref name="setResistor" scoped="" ref="0x11058a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11058a850"/>
        <function-ref name="isOutput" scoped="" ref="0x11058a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11058ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11058ad00"/>
        <function-ref name="get" scoped="" ref="0x110589020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110589340"/>
        <function-ref name="set" scoped="" ref="0x1105894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110589660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110589a80"/>
        <function-ref name="clr" scoped="" ref="0x110589c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x1105c0200" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x1105c0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105c0580"/>
        <function-ref name="isInput" scoped="" ref="0x1105c0710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105c08a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105c0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105c0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105c0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105bf020"/>
        <function-ref name="get" scoped="" ref="0x1105bf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105bf340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105bf4d0"/>
        <function-ref name="set" scoped="" ref="0x1105bf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105bf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105bf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105bfc10"/>
        <function-ref name="clr" scoped="" ref="0x1105bfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x110586020" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x110586020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105863a0"/>
        <function-ref name="isInput" scoped="" ref="0x110586530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105866c0"/>
        <function-ref name="toggle" scoped="" ref="0x110586850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105869e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110586b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110586d00"/>
        <function-ref name="get" scoped="" ref="0x110585020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110585340"/>
        <function-ref name="set" scoped="" ref="0x1105854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110585660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110585a80"/>
        <function-ref name="clr" scoped="" ref="0x110585c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x11059b020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x11059b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11059b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11059b530"/>
        <function-ref name="setResistor" scoped="" ref="0x11059b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11059b850"/>
        <function-ref name="isOutput" scoped="" ref="0x11059b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11059bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11059bd00"/>
        <function-ref name="get" scoped="" ref="0x11059a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11059a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11059a340"/>
        <function-ref name="set" scoped="" ref="0x11059a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11059a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11059a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11059aa80"/>
        <function-ref name="clr" scoped="" ref="0x11059ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x1105b1200" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x1105b1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105b1580"/>
        <function-ref name="isInput" scoped="" ref="0x1105b1710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105b18a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105b1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105b1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105b1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105b0020"/>
        <function-ref name="get" scoped="" ref="0x1105b01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105b0340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105b04d0"/>
        <function-ref name="set" scoped="" ref="0x1105b0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105b07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105b0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105b0c10"/>
        <function-ref name="clr" scoped="" ref="0x1105b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x1105c6200" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x1105c6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105c6580"/>
        <function-ref name="isInput" scoped="" ref="0x1105c6710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105c68a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105c6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105c6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105c6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105c5020"/>
        <function-ref name="get" scoped="" ref="0x1105c51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105c5340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105c54d0"/>
        <function-ref name="set" scoped="" ref="0x1105c5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105c57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105c5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105c5c10"/>
        <function-ref name="clr" scoped="" ref="0x1105c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x1105e0200" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x1105e0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105e0580"/>
        <function-ref name="isInput" scoped="" ref="0x1105e0710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105e08a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105e0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105e0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105e0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105df020"/>
        <function-ref name="get" scoped="" ref="0x1105df1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105df340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105df4d0"/>
        <function-ref name="set" scoped="" ref="0x1105df660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105df7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105df980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105dfc10"/>
        <function-ref name="clr" scoped="" ref="0x1105dfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x11056a020" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x11056a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11056a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11056a530"/>
        <function-ref name="setResistor" scoped="" ref="0x11056a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11056a850"/>
        <function-ref name="isOutput" scoped="" ref="0x11056a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11056ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11056ad00"/>
        <function-ref name="get" scoped="" ref="0x110569020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105691b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110569340"/>
        <function-ref name="set" scoped="" ref="0x1105694d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110569660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105697f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110569a80"/>
        <function-ref name="clr" scoped="" ref="0x110569c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x110580020" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x110580020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105803a0"/>
        <function-ref name="isInput" scoped="" ref="0x110580530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105806c0"/>
        <function-ref name="toggle" scoped="" ref="0x110580850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105809e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110580b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110580d00"/>
        <function-ref name="get" scoped="" ref="0x11057f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11057f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11057f340"/>
        <function-ref name="set" scoped="" ref="0x11057f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11057f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11057f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11057fa80"/>
        <function-ref name="clr" scoped="" ref="0x11057fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x110595020" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x110595020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105953a0"/>
        <function-ref name="isInput" scoped="" ref="0x110595530"/>
        <function-ref name="setResistor" scoped="" ref="0x1105956c0"/>
        <function-ref name="toggle" scoped="" ref="0x110595850"/>
        <function-ref name="isOutput" scoped="" ref="0x1105959e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110595b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110595d00"/>
        <function-ref name="get" scoped="" ref="0x110594020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110594340"/>
        <function-ref name="set" scoped="" ref="0x1105944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110594660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110594a80"/>
        <function-ref name="clr" scoped="" ref="0x110594c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x1105ab200" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x1105ab200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105ab580"/>
        <function-ref name="isInput" scoped="" ref="0x1105ab710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105ab8a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105aba30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105abbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105abd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105aa020"/>
        <function-ref name="get" scoped="" ref="0x1105aa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105aa340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105aa4d0"/>
        <function-ref name="set" scoped="" ref="0x1105aa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105aa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105aa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105aac10"/>
        <function-ref name="clr" scoped="" ref="0x1105aada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x1105d2560" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x1105d2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105d28e0"/>
        <function-ref name="isInput" scoped="" ref="0x1105d2a70"/>
        <function-ref name="setResistor" scoped="" ref="0x1105d2c00"/>
        <function-ref name="toggle" scoped="" ref="0x1105d2d90"/>
        <function-ref name="isOutput" scoped="" ref="0x1105d1020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105d11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105d1340"/>
        <function-ref name="get" scoped="" ref="0x1105d14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105d1660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105d17f0"/>
        <function-ref name="set" scoped="" ref="0x1105d1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105d1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105d1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105fb020"/>
        <function-ref name="clr" scoped="" ref="0x1105fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x1105e6570" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x1105e6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105e68f0"/>
        <function-ref name="isInput" scoped="" ref="0x1105e6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x1105e6c10"/>
        <function-ref name="toggle" scoped="" ref="0x1105e6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x110611020"/>
        <function-ref name="getResistor" scoped="" ref="0x1106111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110611340"/>
        <function-ref name="get" scoped="" ref="0x1106114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110611660"/>
        <function-ref name="getRaw" scoped="" ref="0x1106117f0"/>
        <function-ref name="set" scoped="" ref="0x110611980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110611b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110611ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110610020"/>
        <function-ref name="clr" scoped="" ref="0x1106101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x1105d4580" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x1105d4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105d4900"/>
        <function-ref name="isInput" scoped="" ref="0x1105d4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x1105d4c20"/>
        <function-ref name="toggle" scoped="" ref="0x1105d4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105d3020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105d3340"/>
        <function-ref name="get" scoped="" ref="0x1105d34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105d3660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105d37f0"/>
        <function-ref name="set" scoped="" ref="0x1105d3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105d3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105d3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105d2020"/>
        <function-ref name="clr" scoped="" ref="0x1105d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x1105a7200" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x1105a7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105a7580"/>
        <function-ref name="isInput" scoped="" ref="0x1105a7710"/>
        <function-ref name="setResistor" scoped="" ref="0x1105a78a0"/>
        <function-ref name="toggle" scoped="" ref="0x1105a7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x1105a7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x1105a7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105d0020"/>
        <function-ref name="get" scoped="" ref="0x1105d01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105d0340"/>
        <function-ref name="getRaw" scoped="" ref="0x1105d04d0"/>
        <function-ref name="set" scoped="" ref="0x1105d0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105d07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105d0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105d0c10"/>
        <function-ref name="clr" scoped="" ref="0x1105d0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x110606570" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x110606570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106068f0"/>
        <function-ref name="isInput" scoped="" ref="0x110606a80"/>
        <function-ref name="setResistor" scoped="" ref="0x110606c10"/>
        <function-ref name="toggle" scoped="" ref="0x110606da0"/>
        <function-ref name="isOutput" scoped="" ref="0x110605020"/>
        <function-ref name="getResistor" scoped="" ref="0x1106051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110605340"/>
        <function-ref name="get" scoped="" ref="0x1106054d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110605660"/>
        <function-ref name="getRaw" scoped="" ref="0x1106057f0"/>
        <function-ref name="set" scoped="" ref="0x110605980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110605b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110605ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110604020"/>
        <function-ref name="clr" scoped="" ref="0x1106041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x110600580" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x110600580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110600900"/>
        <function-ref name="isInput" scoped="" ref="0x110600a90"/>
        <function-ref name="setResistor" scoped="" ref="0x110600c20"/>
        <function-ref name="toggle" scoped="" ref="0x110600db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1105ff020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105ff340"/>
        <function-ref name="get" scoped="" ref="0x1105ff4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105ff660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105ff7f0"/>
        <function-ref name="set" scoped="" ref="0x1105ff980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105ffb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105ffca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105fe020"/>
        <function-ref name="clr" scoped="" ref="0x1105fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x1105dc1f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x1105dc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105dc970"/>
        <function-ref name="isInput" scoped="" ref="0x1105dcb00"/>
        <function-ref name="setResistor" scoped="" ref="0x1105dcc90"/>
        <function-ref name="toggle" scoped="" ref="0x1105dce20"/>
        <function-ref name="isOutput" scoped="" ref="0x1105db020"/>
        <function-ref name="getResistor" scoped="" ref="0x1105db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1105db340"/>
        <function-ref name="get" scoped="" ref="0x1105db4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1105db660"/>
        <function-ref name="getRaw" scoped="" ref="0x1105db7f0"/>
        <function-ref name="set" scoped="" ref="0x1105db980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1105dbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1105dbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1105da020"/>
        <function-ref name="clr" scoped="" ref="0x1105da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11062d6d0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11062d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11062da50"/>
        <function-ref name="isInput" scoped="" ref="0x11062dbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x11062dd70"/>
        <function-ref name="toggle" scoped="" ref="0x11062c020"/>
        <function-ref name="isOutput" scoped="" ref="0x11062c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x11062c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x11062c4d0"/>
        <function-ref name="get" scoped="" ref="0x11062c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11062c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x11062c980"/>
        <function-ref name="set" scoped="" ref="0x11062cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11062cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11062ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11062b120"/>
        <function-ref name="clr" scoped="" ref="0x11062b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110628100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110628100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110628480"/>
        <function-ref name="isInput" scoped="" ref="0x110628610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106287a0"/>
        <function-ref name="toggle" scoped="" ref="0x110628930"/>
        <function-ref name="isOutput" scoped="" ref="0x110628ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x110628c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110628de0"/>
        <function-ref name="get" scoped="" ref="0x110652020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110652340"/>
        <function-ref name="set" scoped="" ref="0x1106524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110652660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110652a80"/>
        <function-ref name="clr" scoped="" ref="0x110652c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11064fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11064fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11064e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11064e270"/>
        <function-ref name="setResistor" scoped="" ref="0x11064e400"/>
        <function-ref name="toggle" scoped="" ref="0x11064e590"/>
        <function-ref name="isOutput" scoped="" ref="0x11064e720"/>
        <function-ref name="getResistor" scoped="" ref="0x11064e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11064ea40"/>
        <function-ref name="get" scoped="" ref="0x11064ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11064ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x11064d020"/>
        <function-ref name="set" scoped="" ref="0x11064d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11064d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11064d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11064d760"/>
        <function-ref name="clr" scoped="" ref="0x11064d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11064a740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11064a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11064aac0"/>
        <function-ref name="isInput" scoped="" ref="0x11064ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x11064ade0"/>
        <function-ref name="toggle" scoped="" ref="0x110649020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106491b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110649340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106494d0"/>
        <function-ref name="get" scoped="" ref="0x110649660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110649980"/>
        <function-ref name="set" scoped="" ref="0x110649b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110649ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110649e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110648120"/>
        <function-ref name="clr" scoped="" ref="0x1106482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110645100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110645100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110645480"/>
        <function-ref name="isInput" scoped="" ref="0x110645610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106457a0"/>
        <function-ref name="toggle" scoped="" ref="0x110645930"/>
        <function-ref name="isOutput" scoped="" ref="0x110645ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x110645c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110645de0"/>
        <function-ref name="get" scoped="" ref="0x110644020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110644340"/>
        <function-ref name="set" scoped="" ref="0x1106444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110644660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110644a80"/>
        <function-ref name="clr" scoped="" ref="0x110644c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110641d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110641d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106400e0"/>
        <function-ref name="isInput" scoped="" ref="0x110640270"/>
        <function-ref name="setResistor" scoped="" ref="0x110640400"/>
        <function-ref name="toggle" scoped="" ref="0x110640590"/>
        <function-ref name="isOutput" scoped="" ref="0x110640720"/>
        <function-ref name="getResistor" scoped="" ref="0x1106408b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110640a40"/>
        <function-ref name="get" scoped="" ref="0x110640bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110640d60"/>
        <function-ref name="getRaw" scoped="" ref="0x11063f020"/>
        <function-ref name="set" scoped="" ref="0x11063f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11063f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11063f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11063f760"/>
        <function-ref name="clr" scoped="" ref="0x11063f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110668740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110668740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110668ac0"/>
        <function-ref name="isInput" scoped="" ref="0x110668c50"/>
        <function-ref name="setResistor" scoped="" ref="0x110668de0"/>
        <function-ref name="toggle" scoped="" ref="0x110667020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106671b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110667340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106674d0"/>
        <function-ref name="get" scoped="" ref="0x110667660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106677f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110667980"/>
        <function-ref name="set" scoped="" ref="0x110667b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110667ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110667e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110666120"/>
        <function-ref name="clr" scoped="" ref="0x1106662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110663100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110663100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110663480"/>
        <function-ref name="isInput" scoped="" ref="0x110663610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106637a0"/>
        <function-ref name="toggle" scoped="" ref="0x110663930"/>
        <function-ref name="isOutput" scoped="" ref="0x110663ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x110663c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110663de0"/>
        <function-ref name="get" scoped="" ref="0x110662020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110662340"/>
        <function-ref name="set" scoped="" ref="0x1106624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110662660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110662a80"/>
        <function-ref name="clr" scoped="" ref="0x110662c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11065fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11065fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11065e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11065e270"/>
        <function-ref name="setResistor" scoped="" ref="0x11065e400"/>
        <function-ref name="toggle" scoped="" ref="0x11065e590"/>
        <function-ref name="isOutput" scoped="" ref="0x11065e720"/>
        <function-ref name="getResistor" scoped="" ref="0x11065e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11065ea40"/>
        <function-ref name="get" scoped="" ref="0x11065ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11065ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x11065d020"/>
        <function-ref name="set" scoped="" ref="0x11065d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11065d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11065d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11065d760"/>
        <function-ref name="clr" scoped="" ref="0x11065d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11065a740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11065a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11065aac0"/>
        <function-ref name="isInput" scoped="" ref="0x11065ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x11065ade0"/>
        <function-ref name="toggle" scoped="" ref="0x110658020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106581b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110658340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106584d0"/>
        <function-ref name="get" scoped="" ref="0x110658660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106587f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110658980"/>
        <function-ref name="set" scoped="" ref="0x110658b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110658ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110658e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110657120"/>
        <function-ref name="clr" scoped="" ref="0x1106572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110654100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110654100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110654480"/>
        <function-ref name="isInput" scoped="" ref="0x110654610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106547a0"/>
        <function-ref name="toggle" scoped="" ref="0x110654930"/>
        <function-ref name="isOutput" scoped="" ref="0x110654ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x110654c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110654de0"/>
        <function-ref name="get" scoped="" ref="0x110680020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106801b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110680340"/>
        <function-ref name="set" scoped="" ref="0x1106804d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110680660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106807f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110680a80"/>
        <function-ref name="clr" scoped="" ref="0x110680c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11067dd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11067dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11067c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11067c270"/>
        <function-ref name="setResistor" scoped="" ref="0x11067c400"/>
        <function-ref name="toggle" scoped="" ref="0x11067c590"/>
        <function-ref name="isOutput" scoped="" ref="0x11067c720"/>
        <function-ref name="getResistor" scoped="" ref="0x11067c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11067ca40"/>
        <function-ref name="get" scoped="" ref="0x11067cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11067cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x11067b020"/>
        <function-ref name="set" scoped="" ref="0x11067b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11067b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11067b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11067b760"/>
        <function-ref name="clr" scoped="" ref="0x11067b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110678860" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110678860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110678be0"/>
        <function-ref name="isInput" scoped="" ref="0x110678d70"/>
        <function-ref name="setResistor" scoped="" ref="0x110677020"/>
        <function-ref name="toggle" scoped="" ref="0x1106771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110677340"/>
        <function-ref name="getResistor" scoped="" ref="0x1106774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110677660"/>
        <function-ref name="get" scoped="" ref="0x1106777f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110677980"/>
        <function-ref name="getRaw" scoped="" ref="0x110677b10"/>
        <function-ref name="set" scoped="" ref="0x110677ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110677e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110676020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106762b0"/>
        <function-ref name="clr" scoped="" ref="0x110676440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110673270" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110673270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106735f0"/>
        <function-ref name="isInput" scoped="" ref="0x110673780"/>
        <function-ref name="setResistor" scoped="" ref="0x110673910"/>
        <function-ref name="toggle" scoped="" ref="0x110673aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x110673c30"/>
        <function-ref name="getResistor" scoped="" ref="0x110673dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110672020"/>
        <function-ref name="get" scoped="" ref="0x1106721b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110672340"/>
        <function-ref name="getRaw" scoped="" ref="0x1106724d0"/>
        <function-ref name="set" scoped="" ref="0x110672660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106727f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110672980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110672c10"/>
        <function-ref name="clr" scoped="" ref="0x110672da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11066fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11066fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11066e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11066e270"/>
        <function-ref name="setResistor" scoped="" ref="0x11066e400"/>
        <function-ref name="toggle" scoped="" ref="0x11066e590"/>
        <function-ref name="isOutput" scoped="" ref="0x11066e720"/>
        <function-ref name="getResistor" scoped="" ref="0x11066e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11066ea40"/>
        <function-ref name="get" scoped="" ref="0x11066ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11066ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x11066d020"/>
        <function-ref name="set" scoped="" ref="0x11066d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11066d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11066d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11066d760"/>
        <function-ref name="clr" scoped="" ref="0x11066d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11066a740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11066a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11066aac0"/>
        <function-ref name="isInput" scoped="" ref="0x11066ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x11066ade0"/>
        <function-ref name="toggle" scoped="" ref="0x110697020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110697340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106974d0"/>
        <function-ref name="get" scoped="" ref="0x110697660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110697980"/>
        <function-ref name="set" scoped="" ref="0x110697b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110697ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110697e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110696120"/>
        <function-ref name="clr" scoped="" ref="0x1106962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110693100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110693100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110693480"/>
        <function-ref name="isInput" scoped="" ref="0x110693610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106937a0"/>
        <function-ref name="toggle" scoped="" ref="0x110693930"/>
        <function-ref name="isOutput" scoped="" ref="0x110693ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x110693c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110693de0"/>
        <function-ref name="get" scoped="" ref="0x110692020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110692340"/>
        <function-ref name="set" scoped="" ref="0x1106924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110692660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110692a80"/>
        <function-ref name="clr" scoped="" ref="0x110692c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11068ed10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11068ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11068d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11068d270"/>
        <function-ref name="setResistor" scoped="" ref="0x11068d400"/>
        <function-ref name="toggle" scoped="" ref="0x11068d590"/>
        <function-ref name="isOutput" scoped="" ref="0x11068d720"/>
        <function-ref name="getResistor" scoped="" ref="0x11068d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11068da40"/>
        <function-ref name="get" scoped="" ref="0x11068dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11068dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x11068c020"/>
        <function-ref name="set" scoped="" ref="0x11068c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11068c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11068c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11068c760"/>
        <function-ref name="clr" scoped="" ref="0x11068c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110689740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110689740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110689ac0"/>
        <function-ref name="isInput" scoped="" ref="0x110689c50"/>
        <function-ref name="setResistor" scoped="" ref="0x110689de0"/>
        <function-ref name="toggle" scoped="" ref="0x110688020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110688340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106884d0"/>
        <function-ref name="get" scoped="" ref="0x110688660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110688980"/>
        <function-ref name="set" scoped="" ref="0x110688b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110688ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110688e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110687120"/>
        <function-ref name="clr" scoped="" ref="0x1106872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110684100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110684100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110684480"/>
        <function-ref name="isInput" scoped="" ref="0x110684610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106847a0"/>
        <function-ref name="toggle" scoped="" ref="0x110684930"/>
        <function-ref name="isOutput" scoped="" ref="0x110684ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x110684c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110684de0"/>
        <function-ref name="get" scoped="" ref="0x110683020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110683340"/>
        <function-ref name="set" scoped="" ref="0x1106834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110683660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110683a80"/>
        <function-ref name="clr" scoped="" ref="0x110683c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106aed10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1106ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x1106ad400"/>
        <function-ref name="toggle" scoped="" ref="0x1106ad590"/>
        <function-ref name="isOutput" scoped="" ref="0x1106ad720"/>
        <function-ref name="getResistor" scoped="" ref="0x1106ad8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106ada40"/>
        <function-ref name="get" scoped="" ref="0x1106adbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106add60"/>
        <function-ref name="getRaw" scoped="" ref="0x1106ac020"/>
        <function-ref name="set" scoped="" ref="0x1106ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106ac760"/>
        <function-ref name="clr" scoped="" ref="0x1106ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106a9740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106a9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1106a9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1106a9de0"/>
        <function-ref name="toggle" scoped="" ref="0x1106a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106a84d0"/>
        <function-ref name="get" scoped="" ref="0x1106a8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106a8980"/>
        <function-ref name="set" scoped="" ref="0x1106a8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106a8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106a8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106a7120"/>
        <function-ref name="clr" scoped="" ref="0x1106a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106a4100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106a4480"/>
        <function-ref name="isInput" scoped="" ref="0x1106a4610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106a47a0"/>
        <function-ref name="toggle" scoped="" ref="0x1106a4930"/>
        <function-ref name="isOutput" scoped="" ref="0x1106a4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106a4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106a4de0"/>
        <function-ref name="get" scoped="" ref="0x1106a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106a31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106a3340"/>
        <function-ref name="set" scoped="" ref="0x1106a34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106a3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106a37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106a3a80"/>
        <function-ref name="clr" scoped="" ref="0x1106a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106a0d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106a0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11069f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11069f270"/>
        <function-ref name="setResistor" scoped="" ref="0x11069f400"/>
        <function-ref name="toggle" scoped="" ref="0x11069f590"/>
        <function-ref name="isOutput" scoped="" ref="0x11069f720"/>
        <function-ref name="getResistor" scoped="" ref="0x11069f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11069fa40"/>
        <function-ref name="get" scoped="" ref="0x11069fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11069fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x11069e020"/>
        <function-ref name="set" scoped="" ref="0x11069e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11069e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11069e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11069e760"/>
        <function-ref name="clr" scoped="" ref="0x11069e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11069ba60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11069ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11069bde0"/>
        <function-ref name="isInput" scoped="" ref="0x110699020"/>
        <function-ref name="setResistor" scoped="" ref="0x1106991b0"/>
        <function-ref name="toggle" scoped="" ref="0x110699340"/>
        <function-ref name="isOutput" scoped="" ref="0x1106994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x110699660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106997f0"/>
        <function-ref name="get" scoped="" ref="0x110699980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110699b10"/>
        <function-ref name="getRaw" scoped="" ref="0x110699ca0"/>
        <function-ref name="set" scoped="" ref="0x110699e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110698020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106981b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110698440"/>
        <function-ref name="clr" scoped="" ref="0x1106985d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106c3460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106c3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106c37e0"/>
        <function-ref name="isInput" scoped="" ref="0x1106c3970"/>
        <function-ref name="setResistor" scoped="" ref="0x1106c3b00"/>
        <function-ref name="toggle" scoped="" ref="0x1106c3c90"/>
        <function-ref name="isOutput" scoped="" ref="0x1106c3e20"/>
        <function-ref name="getResistor" scoped="" ref="0x1106c2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106c21b0"/>
        <function-ref name="get" scoped="" ref="0x1106c2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106c24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106c2660"/>
        <function-ref name="set" scoped="" ref="0x1106c27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106c2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106c2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106c2da0"/>
        <function-ref name="clr" scoped="" ref="0x1106c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106bfe00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106bfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106be1c0"/>
        <function-ref name="isInput" scoped="" ref="0x1106be350"/>
        <function-ref name="setResistor" scoped="" ref="0x1106be4e0"/>
        <function-ref name="toggle" scoped="" ref="0x1106be670"/>
        <function-ref name="isOutput" scoped="" ref="0x1106be800"/>
        <function-ref name="getResistor" scoped="" ref="0x1106be990"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106beb20"/>
        <function-ref name="get" scoped="" ref="0x1106becb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106bee40"/>
        <function-ref name="getRaw" scoped="" ref="0x1106bd020"/>
        <function-ref name="set" scoped="" ref="0x1106bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106bd760"/>
        <function-ref name="clr" scoped="" ref="0x1106bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106ba740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106ba740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106baac0"/>
        <function-ref name="isInput" scoped="" ref="0x1106bac50"/>
        <function-ref name="setResistor" scoped="" ref="0x1106bade0"/>
        <function-ref name="toggle" scoped="" ref="0x1106b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106b91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106b9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106b94d0"/>
        <function-ref name="get" scoped="" ref="0x1106b9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106b97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106b9980"/>
        <function-ref name="set" scoped="" ref="0x1106b9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106b9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106b9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106b8120"/>
        <function-ref name="clr" scoped="" ref="0x1106b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106b5100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106b5480"/>
        <function-ref name="isInput" scoped="" ref="0x1106b5610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106b57a0"/>
        <function-ref name="toggle" scoped="" ref="0x1106b5930"/>
        <function-ref name="isOutput" scoped="" ref="0x1106b5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106b5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106b5de0"/>
        <function-ref name="get" scoped="" ref="0x1106b4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106b41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106b4340"/>
        <function-ref name="set" scoped="" ref="0x1106b44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106b4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106b47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106b4a80"/>
        <function-ref name="clr" scoped="" ref="0x1106b4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106b1d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106b1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106b00e0"/>
        <function-ref name="isInput" scoped="" ref="0x1106b0270"/>
        <function-ref name="setResistor" scoped="" ref="0x1106b0400"/>
        <function-ref name="toggle" scoped="" ref="0x1106b0590"/>
        <function-ref name="isOutput" scoped="" ref="0x1106b0720"/>
        <function-ref name="getResistor" scoped="" ref="0x1106b08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106b0a40"/>
        <function-ref name="get" scoped="" ref="0x1106b0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106b0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x1106af020"/>
        <function-ref name="set" scoped="" ref="0x1106af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106af760"/>
        <function-ref name="clr" scoped="" ref="0x1106af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106da740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106da740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106daac0"/>
        <function-ref name="isInput" scoped="" ref="0x1106dac50"/>
        <function-ref name="setResistor" scoped="" ref="0x1106dade0"/>
        <function-ref name="toggle" scoped="" ref="0x1106d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106d94d0"/>
        <function-ref name="get" scoped="" ref="0x1106d9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106d9980"/>
        <function-ref name="set" scoped="" ref="0x1106d9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106d9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106d9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106d8120"/>
        <function-ref name="clr" scoped="" ref="0x1106d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106d5100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106d5480"/>
        <function-ref name="isInput" scoped="" ref="0x1106d5610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106d57a0"/>
        <function-ref name="toggle" scoped="" ref="0x1106d5930"/>
        <function-ref name="isOutput" scoped="" ref="0x1106d5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106d5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106d5de0"/>
        <function-ref name="get" scoped="" ref="0x1106d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106d41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106d4340"/>
        <function-ref name="set" scoped="" ref="0x1106d44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106d4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106d47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106d4a80"/>
        <function-ref name="clr" scoped="" ref="0x1106d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106d1d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106d1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106cf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1106cf270"/>
        <function-ref name="setResistor" scoped="" ref="0x1106cf400"/>
        <function-ref name="toggle" scoped="" ref="0x1106cf590"/>
        <function-ref name="isOutput" scoped="" ref="0x1106cf720"/>
        <function-ref name="getResistor" scoped="" ref="0x1106cf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106cfa40"/>
        <function-ref name="get" scoped="" ref="0x1106cfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106cfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x1106ce020"/>
        <function-ref name="set" scoped="" ref="0x1106ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106ce760"/>
        <function-ref name="clr" scoped="" ref="0x1106ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106cb740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106cb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106cbac0"/>
        <function-ref name="isInput" scoped="" ref="0x1106cbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x1106cbde0"/>
        <function-ref name="toggle" scoped="" ref="0x1106ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106ca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106ca4d0"/>
        <function-ref name="get" scoped="" ref="0x1106ca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106ca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106ca980"/>
        <function-ref name="set" scoped="" ref="0x1106cab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106caca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106cae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106c9120"/>
        <function-ref name="clr" scoped="" ref="0x1106c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106c6100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106c6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106c6480"/>
        <function-ref name="isInput" scoped="" ref="0x1106c6610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106c67a0"/>
        <function-ref name="toggle" scoped="" ref="0x1106c6930"/>
        <function-ref name="isOutput" scoped="" ref="0x1106c6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106c6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106c6de0"/>
        <function-ref name="get" scoped="" ref="0x1106f3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106f31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106f3340"/>
        <function-ref name="set" scoped="" ref="0x1106f34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106f3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106f37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106f3a80"/>
        <function-ref name="clr" scoped="" ref="0x1106f3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106f0d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106f0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106ef0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1106ef270"/>
        <function-ref name="setResistor" scoped="" ref="0x1106ef400"/>
        <function-ref name="toggle" scoped="" ref="0x1106ef590"/>
        <function-ref name="isOutput" scoped="" ref="0x1106ef720"/>
        <function-ref name="getResistor" scoped="" ref="0x1106ef8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106efa40"/>
        <function-ref name="get" scoped="" ref="0x1106efbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106efd60"/>
        <function-ref name="getRaw" scoped="" ref="0x1106ee020"/>
        <function-ref name="set" scoped="" ref="0x1106ee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106ee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106ee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106ee760"/>
        <function-ref name="clr" scoped="" ref="0x1106ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106eb740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106eb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106ebac0"/>
        <function-ref name="isInput" scoped="" ref="0x1106ebc50"/>
        <function-ref name="setResistor" scoped="" ref="0x1106ebde0"/>
        <function-ref name="toggle" scoped="" ref="0x1106ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106ea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106ea340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106ea4d0"/>
        <function-ref name="get" scoped="" ref="0x1106ea660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106ea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106ea980"/>
        <function-ref name="set" scoped="" ref="0x1106eab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106eaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106eae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106e9120"/>
        <function-ref name="clr" scoped="" ref="0x1106e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106e6100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106e6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106e6480"/>
        <function-ref name="isInput" scoped="" ref="0x1106e6610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106e67a0"/>
        <function-ref name="toggle" scoped="" ref="0x1106e6930"/>
        <function-ref name="isOutput" scoped="" ref="0x1106e6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106e6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106e6de0"/>
        <function-ref name="get" scoped="" ref="0x1106e5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106e51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106e5340"/>
        <function-ref name="set" scoped="" ref="0x1106e54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106e5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106e57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106e5a80"/>
        <function-ref name="clr" scoped="" ref="0x1106e5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106e2d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106e2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106e10e0"/>
        <function-ref name="isInput" scoped="" ref="0x1106e1270"/>
        <function-ref name="setResistor" scoped="" ref="0x1106e1400"/>
        <function-ref name="toggle" scoped="" ref="0x1106e1590"/>
        <function-ref name="isOutput" scoped="" ref="0x1106e1720"/>
        <function-ref name="getResistor" scoped="" ref="0x1106e18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106e1a40"/>
        <function-ref name="get" scoped="" ref="0x1106e1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106e1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x1106e0020"/>
        <function-ref name="set" scoped="" ref="0x1106e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106e0760"/>
        <function-ref name="clr" scoped="" ref="0x1106e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106dd740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106dd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106ddac0"/>
        <function-ref name="isInput" scoped="" ref="0x1106ddc50"/>
        <function-ref name="setResistor" scoped="" ref="0x1106ddde0"/>
        <function-ref name="toggle" scoped="" ref="0x11070b020"/>
        <function-ref name="isOutput" scoped="" ref="0x11070b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x11070b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x11070b4d0"/>
        <function-ref name="get" scoped="" ref="0x11070b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11070b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x11070b980"/>
        <function-ref name="set" scoped="" ref="0x11070bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11070bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11070be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11070a120"/>
        <function-ref name="clr" scoped="" ref="0x11070a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110706100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110706100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110706480"/>
        <function-ref name="isInput" scoped="" ref="0x110706610"/>
        <function-ref name="setResistor" scoped="" ref="0x1107067a0"/>
        <function-ref name="toggle" scoped="" ref="0x110706930"/>
        <function-ref name="isOutput" scoped="" ref="0x110706ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x110706c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110706de0"/>
        <function-ref name="get" scoped="" ref="0x110705020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1107051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110705340"/>
        <function-ref name="set" scoped="" ref="0x1107054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110705660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1107057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110705a80"/>
        <function-ref name="clr" scoped="" ref="0x110705c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110702d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110702d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1107010e0"/>
        <function-ref name="isInput" scoped="" ref="0x110701270"/>
        <function-ref name="setResistor" scoped="" ref="0x110701400"/>
        <function-ref name="toggle" scoped="" ref="0x110701590"/>
        <function-ref name="isOutput" scoped="" ref="0x110701720"/>
        <function-ref name="getResistor" scoped="" ref="0x1107018b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110701a40"/>
        <function-ref name="get" scoped="" ref="0x110701bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110701d60"/>
        <function-ref name="getRaw" scoped="" ref="0x110700020"/>
        <function-ref name="set" scoped="" ref="0x1107001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110700340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1107004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110700760"/>
        <function-ref name="clr" scoped="" ref="0x1107008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106fd740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106fd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106fdac0"/>
        <function-ref name="isInput" scoped="" ref="0x1106fdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x1106fdde0"/>
        <function-ref name="toggle" scoped="" ref="0x1106fc020"/>
        <function-ref name="isOutput" scoped="" ref="0x1106fc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106fc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106fc4d0"/>
        <function-ref name="get" scoped="" ref="0x1106fc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106fc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106fc980"/>
        <function-ref name="set" scoped="" ref="0x1106fcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106fcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106fce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106fb120"/>
        <function-ref name="clr" scoped="" ref="0x1106fb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106f8100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1106f8480"/>
        <function-ref name="isInput" scoped="" ref="0x1106f8610"/>
        <function-ref name="setResistor" scoped="" ref="0x1106f87a0"/>
        <function-ref name="toggle" scoped="" ref="0x1106f8930"/>
        <function-ref name="isOutput" scoped="" ref="0x1106f8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1106f8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1106f8de0"/>
        <function-ref name="get" scoped="" ref="0x1106f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1106f71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1106f7340"/>
        <function-ref name="set" scoped="" ref="0x1106f74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1106f7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1106f77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1106f7a80"/>
        <function-ref name="clr" scoped="" ref="0x1106f7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1106f4d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1106f4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1107230e0"/>
        <function-ref name="isInput" scoped="" ref="0x110723270"/>
        <function-ref name="setResistor" scoped="" ref="0x110723400"/>
        <function-ref name="toggle" scoped="" ref="0x110723590"/>
        <function-ref name="isOutput" scoped="" ref="0x110723720"/>
        <function-ref name="getResistor" scoped="" ref="0x1107238b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110723a40"/>
        <function-ref name="get" scoped="" ref="0x110723bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110723d60"/>
        <function-ref name="getRaw" scoped="" ref="0x110722020"/>
        <function-ref name="set" scoped="" ref="0x1107221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110722340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1107224d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110722760"/>
        <function-ref name="clr" scoped="" ref="0x1107228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11071f740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11071f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11071fac0"/>
        <function-ref name="isInput" scoped="" ref="0x11071fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x11071fde0"/>
        <function-ref name="toggle" scoped="" ref="0x11071e020"/>
        <function-ref name="isOutput" scoped="" ref="0x11071e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x11071e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x11071e4d0"/>
        <function-ref name="get" scoped="" ref="0x11071e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11071e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x11071e980"/>
        <function-ref name="set" scoped="" ref="0x11071eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11071eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11071ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11071d120"/>
        <function-ref name="clr" scoped="" ref="0x11071d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11071a100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11071a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11071a480"/>
        <function-ref name="isInput" scoped="" ref="0x11071a610"/>
        <function-ref name="setResistor" scoped="" ref="0x11071a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x11071a930"/>
        <function-ref name="isOutput" scoped="" ref="0x11071aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x11071ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11071ade0"/>
        <function-ref name="get" scoped="" ref="0x110719020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1107191b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110719340"/>
        <function-ref name="set" scoped="" ref="0x1107194d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110719660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1107197f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110719a80"/>
        <function-ref name="clr" scoped="" ref="0x110719c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110716d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110716d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1107140e0"/>
        <function-ref name="isInput" scoped="" ref="0x110714270"/>
        <function-ref name="setResistor" scoped="" ref="0x110714400"/>
        <function-ref name="toggle" scoped="" ref="0x110714590"/>
        <function-ref name="isOutput" scoped="" ref="0x110714720"/>
        <function-ref name="getResistor" scoped="" ref="0x1107148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110714a40"/>
        <function-ref name="get" scoped="" ref="0x110714bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110714d60"/>
        <function-ref name="getRaw" scoped="" ref="0x110713020"/>
        <function-ref name="set" scoped="" ref="0x1107131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110713340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1107134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110713760"/>
        <function-ref name="clr" scoped="" ref="0x1107138f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1107832f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1107832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110783670"/>
        <function-ref name="isInput" scoped="" ref="0x110783800"/>
        <function-ref name="setResistor" scoped="" ref="0x110783990"/>
        <function-ref name="toggle" scoped="" ref="0x110783b20"/>
        <function-ref name="isOutput" scoped="" ref="0x110783cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x110783e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x110782020"/>
        <function-ref name="get" scoped="" ref="0x1107821b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110782340"/>
        <function-ref name="getRaw" scoped="" ref="0x1107824d0"/>
        <function-ref name="set" scoped="" ref="0x110782660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1107827f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110782980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110782c10"/>
        <function-ref name="clr" scoped="" ref="0x110782da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110794020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110794020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1107943a0"/>
        <function-ref name="isInput" scoped="" ref="0x110794530"/>
        <function-ref name="toggle" scoped="" ref="0x1107946c0"/>
        <function-ref name="isOutput" scoped="" ref="0x110794850"/>
        <function-ref name="get" scoped="" ref="0x1107949e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110794b70"/>
        <function-ref name="set" scoped="" ref="0x110794d00"/>
        <function-ref name="clr" scoped="" ref="0x110783020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x11077fde0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x11077fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1107b0180"/>
        <function-ref name="isInput" scoped="" ref="0x1107b0310"/>
        <function-ref name="setResistor" scoped="" ref="0x1107b04a0"/>
        <function-ref name="toggle" scoped="" ref="0x1107b0630"/>
        <function-ref name="isOutput" scoped="" ref="0x1107b07c0"/>
        <function-ref name="getResistor" scoped="" ref="0x1107b0950"/>
        <function-ref name="makeOutput" scoped="" ref="0x1107b0ae0"/>
        <function-ref name="get" scoped="" ref="0x1107b0c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1107b0e00"/>
        <function-ref name="getRaw" scoped="" ref="0x1107af020"/>
        <function-ref name="set" scoped="" ref="0x1107af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1107af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1107af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1107af760"/>
        <function-ref name="clr" scoped="" ref="0x1107af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110780b90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110780b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11077f020"/>
        <function-ref name="isInput" scoped="" ref="0x11077f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x11077f340"/>
        <function-ref name="isOutput" scoped="" ref="0x11077f4d0"/>
        <function-ref name="get" scoped="" ref="0x11077f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x11077f7f0"/>
        <function-ref name="set" scoped="" ref="0x11077f980"/>
        <function-ref name="clr" scoped="" ref="0x11077fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1107ac930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1107ac930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1107accb0"/>
        <function-ref name="isInput" scoped="" ref="0x1107ace40"/>
        <function-ref name="setResistor" scoped="" ref="0x1107ab020"/>
        <function-ref name="toggle" scoped="" ref="0x1107ab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1107ab340"/>
        <function-ref name="getResistor" scoped="" ref="0x1107ab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1107ab660"/>
        <function-ref name="get" scoped="" ref="0x1107ab7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1107ab980"/>
        <function-ref name="getRaw" scoped="" ref="0x1107abb10"/>
        <function-ref name="set" scoped="" ref="0x1107abca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1107abe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1107aa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1107aa2b0"/>
        <function-ref name="clr" scoped="" ref="0x1107aa440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1107ad710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1107ad710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1107ada90"/>
        <function-ref name="isInput" scoped="" ref="0x1107adc20"/>
        <function-ref name="toggle" scoped="" ref="0x1107addb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1107ac020"/>
        <function-ref name="get" scoped="" ref="0x1107ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1107ac340"/>
        <function-ref name="set" scoped="" ref="0x1107ac4d0"/>
        <function-ref name="clr" scoped="" ref="0x1107ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x11094a370" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SenderAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11094a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110947870"/>
        <function-ref name="fired" scoped="" ref="0x110949e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110948c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x110948780"/>
        <function-ref name="getdt" scoped="" ref="0x1109451e0"/>
        <function-ref name="gett0" scoped="" ref="0x110947cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x110948300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110949020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110947260"/>
        <function-ref name="startOneShot" scoped="" ref="0x1109494f0"/>
        <function-ref name="stop" scoped="" ref="0x1109499c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1107c6610" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x1107c6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1107c2c40"/>
        <function-ref name="fired" scoped="" ref="0x1107c31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1107c2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x1107c3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x1107c1590"/>
        <function-ref name="gett0" scoped="" ref="0x1107c1110"/>
        <function-ref name="isRunning" scoped="" ref="0x1107c3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1107c4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1107c2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x1107c4860"/>
        <function-ref name="stop" scoped="" ref="0x1107c4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1107bc610" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x1107bc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1107b8c40"/>
        <function-ref name="fired" scoped="" ref="0x1107ba1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1107b8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x1107baae0"/>
        <function-ref name="getdt" scoped="" ref="0x1107b7590"/>
        <function-ref name="gett0" scoped="" ref="0x1107b7110"/>
        <function-ref name="isRunning" scoped="" ref="0x1107ba660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1107bb390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1107b8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x1107bb860"/>
        <function-ref name="stop" scoped="" ref="0x1107bbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1107b51a0" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1107b51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1107b5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1107bf830" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1107bf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1107bfbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1108d1870" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1108d1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1108ce090"/>
        <function-ref name="fired" scoped="" ref="0x1108cf090"/>
        <function-ref name="startAt" scoped="" ref="0x1108cfa10"/>
        <function-ref name="isRunning" scoped="" ref="0x1108cf550"/>
        <function-ref name="getAlarm" scoped="" ref="0x1108ce550"/>
        <function-ref name="start" scoped="" ref="0x1108d06a0"/>
        <function-ref name="stop" scoped="" ref="0x1108d0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1108d1020" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1108d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1108d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x111faa4f0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111faa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111fa7db0"/>
        <function-ref name="fired" scoped="" ref="0x111fa9da0"/>
        <function-ref name="startAt" scoped="" ref="0x111fa7760"/>
        <function-ref name="isRunning" scoped="" ref="0x111fa72a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x111fa62a0"/>
        <function-ref name="start" scoped="" ref="0x111fa93d0"/>
        <function-ref name="stop" scoped="" ref="0x111fa98e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111facc40" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111facc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111faa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x112024da0" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x112024da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112023180"/>
        <function-ref name="setEvent" scoped="" ref="0x112023310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1120234a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112023630"/>
        <function-ref name="fired" scoped="" ref="0x1120237c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x112027340" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112027340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1120276c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x112027850"/>
        <function-ref name="enableEvents" scoped="" ref="0x1120279e0"/>
        <function-ref name="get" scoped="" ref="0x112027b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x112027d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112025020"/>
        <function-ref name="getMode" scoped="" ref="0x1120251b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112025340"/>
        <function-ref name="overflow" scoped="" ref="0x1120254d0"/>
        <function-ref name="setMode" scoped="" ref="0x112025660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1120257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x112025a80" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112025a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112025e00"/>
        <function-ref name="getControl" scoped="" ref="0x112024020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1120241b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112024340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1120244d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112024660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1120247f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112024980"/>
        <function-ref name="setControl" scoped="" ref="0x112024b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1107f4210" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1107f4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1107f4590"/>
        <function-ref name="setEvent" scoped="" ref="0x1107f4720"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1107f48b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1107f4a40"/>
        <function-ref name="fired" scoped="" ref="0x1107f4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1107fbbf0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1107fbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1107f8020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1107f81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1107f8340"/>
        <function-ref name="get" scoped="" ref="0x1107f84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1107f8660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1107f87f0"/>
        <function-ref name="getMode" scoped="" ref="0x1107f8980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1107f8b10"/>
        <function-ref name="overflow" scoped="" ref="0x1107f8ca0"/>
        <function-ref name="setMode" scoped="" ref="0x1107f8e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1107f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1107f78b0" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1107f78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1107f7c30"/>
        <function-ref name="getControl" scoped="" ref="0x1107f7dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1107f6020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1107f61b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1107f6340"/>
        <function-ref name="disableEvents" scoped="" ref="0x1107f64d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1107f6660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1107f67f0"/>
        <function-ref name="setControl" scoped="" ref="0x1107f6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x11201aa80" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x11201aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11201ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x112019020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1120191b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112019340"/>
        <function-ref name="fired" scoped="" ref="0x1120194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x11201c190" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11201c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11201c510"/>
        <function-ref name="setClockSource" scoped="" ref="0x11201c6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x11201c830"/>
        <function-ref name="get" scoped="" ref="0x11201c9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x11201cb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11201cce0"/>
        <function-ref name="getMode" scoped="" ref="0x11201ce70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11201b030"/>
        <function-ref name="overflow" scoped="" ref="0x11201b1c0"/>
        <function-ref name="setMode" scoped="" ref="0x11201b350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11201b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112020020" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112020020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11201e870"/>
        <function-ref name="fired" scoped="" ref="0x11201f840"/>
        <function-ref name="startAt" scoped="" ref="0x11201e220"/>
        <function-ref name="isRunning" scoped="" ref="0x11201fd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x11201ed30"/>
        <function-ref name="start" scoped="" ref="0x112020e30"/>
        <function-ref name="stop" scoped="" ref="0x11201f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112021660" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112021660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120219e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x11201b770" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x11201b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11201baf0"/>
        <function-ref name="getControl" scoped="" ref="0x11201bc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x11201be10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11201a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11201a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x11201a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11201a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11201a660"/>
        <function-ref name="setControl" scoped="" ref="0x11201a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x11083fb50" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11083fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1108439b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110842360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110843e70"/>
        <function-ref name="overflow" scoped="" ref="0x110842820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x11083db70" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x11083db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11083a9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110839360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11083ae70"/>
        <function-ref name="overflow" scoped="" ref="0x110839820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x11085cc50" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11085cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11085b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x11085b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x11085b340"/>
        <function-ref name="get" scoped="" ref="0x11085b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x11085b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11085b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x11085b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11085bb10"/>
        <function-ref name="overflow" scoped="" ref="0x11085bca0"/>
        <function-ref name="setMode" scoped="" ref="0x11085be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11085a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110837b80" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110837b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1108369b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11085c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110836e70"/>
        <function-ref name="overflow" scoped="" ref="0x11085c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x11086e0f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x11086e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11086c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11086c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11086c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x11086ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110871cf0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110871cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110870b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11086f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11086f090"/>
        <function-ref name="overflow" scoped="" ref="0x11086fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112037890" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112037890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1120340d0"/>
        <function-ref name="fired" scoped="" ref="0x1120350d0"/>
        <function-ref name="startAt" scoped="" ref="0x112035a50"/>
        <function-ref name="isRunning" scoped="" ref="0x112035590"/>
        <function-ref name="getAlarm" scoped="" ref="0x112034590"/>
        <function-ref name="start" scoped="" ref="0x1120366e0"/>
        <function-ref name="stop" scoped="" ref="0x112036bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1120300a0" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x1120300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11202eb30"/>
        <function-ref name="fired" scoped="" ref="0x11202f9f0"/>
        <function-ref name="startAt" scoped="" ref="0x11202e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x11202e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x11202c020"/>
        <function-ref name="start" scoped="" ref="0x11202f020"/>
        <function-ref name="stop" scoped="" ref="0x11202f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x112034c00" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x112034c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112032a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1120314e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112031020"/>
        <function-ref name="overflow" scoped="" ref="0x1120319a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x1109099c0" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x1109099c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110909d40"/>
        <function-ref name="runTask" scoped="" ref="0x110908020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x1108d6850" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1108d6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110909090"/>
        <function-ref name="fired" scoped="" ref="0x1108d3090"/>
        <function-ref name="startAt" scoped="" ref="0x1108d3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x1108d3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x110909550"/>
        <function-ref name="start" scoped="" ref="0x1108d56a0"/>
        <function-ref name="stop" scoped="" ref="0x1108d5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1108db2f0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1108db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1108d7870"/>
        <function-ref name="fired" scoped="" ref="0x1108dae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1108d8c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x1108d8780"/>
        <function-ref name="getdt" scoped="" ref="0x1108d61e0"/>
        <function-ref name="gett0" scoped="" ref="0x1108d7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x1108d8300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1108da020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1108d7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x1108da4f0"/>
        <function-ref name="stop" scoped="" ref="0x1108da9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x110928a00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x110928a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110928d80"/>
        <function-ref name="runTask" scoped="" ref="0x110927020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x11092d640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x11092d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110929c40"/>
        <function-ref name="fired" scoped="" ref="0x11092a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110929020"/>
        <function-ref name="isOneShot" scoped="" ref="0x11092aae0"/>
        <function-ref name="getdt" scoped="" ref="0x110928590"/>
        <function-ref name="gett0" scoped="" ref="0x110928110"/>
        <function-ref name="isRunning" scoped="" ref="0x11092a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x11092c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110929630"/>
        <function-ref name="startOneShot" scoped="" ref="0x11092c860"/>
        <function-ref name="stop" scoped="" ref="0x11092cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110933150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110933150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11092e700"/>
        <function-ref name="fired" scoped="" ref="0x110932c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110930a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x1109305b0"/>
        <function-ref name="getdt" scoped="" ref="0x11092d090"/>
        <function-ref name="gett0" scoped="" ref="0x11092eba0"/>
        <function-ref name="isRunning" scoped="" ref="0x110930110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110933d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x11092e0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x1109322a0"/>
        <function-ref name="stop" scoped="" ref="0x110932790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x11095c790" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x11095c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11095b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x11095ba60" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11095ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110951890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110950260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110951d50"/>
        <function-ref name="overflow" scoped="" ref="0x110950720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110944c90" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SenderAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110944c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110977170"/>
        <function-ref name="fired" scoped="" ref="0x110942720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110979510"/>
        <function-ref name="isOneShot" scoped="" ref="0x110979090"/>
        <function-ref name="getdt" scoped="" ref="0x110977a70"/>
        <function-ref name="gett0" scoped="" ref="0x1109775f0"/>
        <function-ref name="isRunning" scoped="" ref="0x110942ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1109438a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110979b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x110943d70"/>
        <function-ref name="stop" scoped="" ref="0x1109422a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1109756d0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SenderAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1109756d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110971c40"/>
        <function-ref name="fired" scoped="" ref="0x1109731e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110971020"/>
        <function-ref name="isOneShot" scoped="" ref="0x110973ae0"/>
        <function-ref name="getdt" scoped="" ref="0x110970590"/>
        <function-ref name="gett0" scoped="" ref="0x110970110"/>
        <function-ref name="isRunning" scoped="" ref="0x110973660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110974390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110971630"/>
        <function-ref name="startOneShot" scoped="" ref="0x110974860"/>
        <function-ref name="stop" scoped="" ref="0x110974d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x11096fc20" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x11096fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x11096c020"/>
        <function-ref name="stopDone" scoped="" ref="0x11096c1b0"/>
        <function-ref name="start" scoped="" ref="0x11096c340"/>
        <function-ref name="stop" scoped="" ref="0x11096c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x11096cca0" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x11096cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11096b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x11096b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11096b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x11096b550"/>
        <function-ref name="sendDone" scoped="" ref="0x11096b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x11096a880" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x11096a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11096ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x110965020" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x110965020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1109653a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x110965530"/>
        <function-ref name="getPayload" scoped="" ref="0x1109656c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110965850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1109659e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x110960310" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x110960310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x110994880"/>
        <function-ref name="clear" scoped="" ref="0x11098d020"/>
        <function-ref name="isValid" scoped="" ref="0x110994150"/>
        <function-ref name="set" scoped="" ref="0x11098d750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x11097f130" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x11097f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x11097f4b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x11097f640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x11097f7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x11097f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x110964b10" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x110964b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11096a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x110961020" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x110961020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1109613a0"/>
        <function-ref name="noAck" scoped="" ref="0x110961530"/>
        <function-ref name="wasAcked" scoped="" ref="0x1109616c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x110965c90" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x110965c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1109630a0"/>
        <function-ref name="source" scoped="" ref="0x110963230"/>
        <function-ref name="address" scoped="" ref="0x1109633c0"/>
        <function-ref name="destination" scoped="" ref="0x110963550"/>
        <function-ref name="setSource" scoped="" ref="0x1109636e0"/>
        <function-ref name="setDestination" scoped="" ref="0x110963870"/>
        <function-ref name="type" scoped="" ref="0x110963a00"/>
        <function-ref name="setType" scoped="" ref="0x110963b90"/>
        <function-ref name="isForMe" scoped="" ref="0x110963d20"/>
        <function-ref name="setGroup" scoped="" ref="0x110962020"/>
        <function-ref name="localGroup" scoped="" ref="0x1109621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x11098a3f0" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x11098a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x110989970"/>
        <function-ref name="clear" scoped="" ref="0x1109880d0"/>
        <function-ref name="isValid" scoped="" ref="0x110989240"/>
        <function-ref name="set" scoped="" ref="0x110988800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1109ac020" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1109ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1109ac3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x1109ac530"/>
        <function-ref name="start" scoped="" ref="0x1109ac6c0"/>
        <function-ref name="stop" scoped="" ref="0x1109ac850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x11099c020" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x11099c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x11099c3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x11099c530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x11099c6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x11099c850"/>
        <function-ref name="setCca" scoped="" ref="0x11099c9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x11099cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1109cc020" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1109cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x1109cc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1109a8a80" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1109a8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1109a8e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x1109a7020"/>
        <function-ref name="getPayload" scoped="" ref="0x1109a71b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1109a7340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1109a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1109ab050" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1109ab050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1109ab3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x1109ab560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1109ab6f0"/>
        <function-ref name="cancel" scoped="" ref="0x1109ab880"/>
        <function-ref name="sendDone" scoped="" ref="0x1109aba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1109aadf0" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1109aadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1109a91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x11099ec20" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x11099ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1109a6020"/>
        <function-ref name="setNetwork" scoped="" ref="0x1109a61b0"/>
        <function-ref name="getRssi" scoped="" ref="0x1109a6340"/>
        <function-ref name="getNetwork" scoped="" ref="0x1109a64d0"/>
        <function-ref name="getPower" scoped="" ref="0x1109a6660"/>
        <function-ref name="getLqi" scoped="" ref="0x1109a67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x11099ce70" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x11099ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x11099a220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x11099a3b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x11099a540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x11099a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1109aa210" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1109aa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1109aa590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1109a6b20" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1109a6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1109a5020"/>
        <function-ref name="noAck" scoped="" ref="0x1109a51b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1109a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x1109c30d0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x1109c30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x1109c3450"/>
        <function-ref name="setRetries" scoped="" ref="0x1109c35e0"/>
        <function-ref name="getRetries" scoped="" ref="0x1109c3770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x1109c3900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x1109c3a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1109a9470" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1109a9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1109a97f0"/>
        <function-ref name="source" scoped="" ref="0x1109a9980"/>
        <function-ref name="address" scoped="" ref="0x1109a9b10"/>
        <function-ref name="destination" scoped="" ref="0x1109a9ca0"/>
        <function-ref name="setSource" scoped="" ref="0x1109a9e30"/>
        <function-ref name="setDestination" scoped="" ref="0x1109a8020"/>
        <function-ref name="type" scoped="" ref="0x1109a81b0"/>
        <function-ref name="setType" scoped="" ref="0x1109a8340"/>
        <function-ref name="isForMe" scoped="" ref="0x1109a84d0"/>
        <function-ref name="setGroup" scoped="" ref="0x1109a8660"/>
        <function-ref name="localGroup" scoped="" ref="0x1109a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x11099bda0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x11099bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x11099d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1109cbd80" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1109cbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1109bd180"/>
        <function-ref name="stopDone" scoped="" ref="0x1109bd310"/>
        <function-ref name="start" scoped="" ref="0x1109bd4a0"/>
        <function-ref name="stop" scoped="" ref="0x1109bd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1109e49d0" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1109e49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1109e4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x1109e3b70" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x1109e3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x1109e2020"/>
        <function-ref name="setRetries" scoped="" ref="0x1109e21b0"/>
        <function-ref name="getRetries" scoped="" ref="0x1109e2340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x1109e24d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x1109e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1109e5020" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1109e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1109e53a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1109e5530"/>
        <function-ref name="getRssi" scoped="" ref="0x1109e56c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x1109e5850"/>
        <function-ref name="getPower" scoped="" ref="0x1109e59e0"/>
        <function-ref name="getLqi" scoped="" ref="0x1109e5b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x1109b5990" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x1109b5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1109b5d10"/>
        <function-ref name="getPayload" scoped="" ref="0x1109e7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1109e71b0"/>
        <function-ref name="cancel" scoped="" ref="0x1109e7340"/>
        <function-ref name="sendDone" scoped="" ref="0x1109e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x1109e3080" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x1109e3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x1109e3400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x1109e3590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x1109e3720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x1109e38b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x1109b6500" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x1109b6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1109b6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1109e4020" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1109e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1109e43a0"/>
        <function-ref name="noAck" scoped="" ref="0x1109e4530"/>
        <function-ref name="wasAcked" scoped="" ref="0x1109e46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1109bc210" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1109bc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1109bc590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1109bc720"/>
        <function-ref name="request" scoped="" ref="0x1109bc8b0"/>
        <function-ref name="granted" scoped="" ref="0x1109bca40"/>
        <function-ref name="isOwner" scoped="" ref="0x1109bcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x1109e66f0" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x1109e66f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1109e6a70"/>
        <function-ref name="getPayload" scoped="" ref="0x1109e6c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1109e6d90"/>
        <function-ref name="cancel" scoped="" ref="0x1109b6020"/>
        <function-ref name="sendDone" scoped="" ref="0x1109b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x1109b6bc0" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x1109b6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1109b5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x1109b51b0"/>
        <function-ref name="getPayload" scoped="" ref="0x1109b5340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1109b54d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1109b5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x1109e7840" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x1109e7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1109e7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1109df390" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1109df390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1109df710"/>
        <function-ref name="stopDone" scoped="" ref="0x1109df8a0"/>
        <function-ref name="start" scoped="" ref="0x1109dfa30"/>
        <function-ref name="stop" scoped="" ref="0x1109dfbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1109dd330" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1109dd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1109dd6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1109dd840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1109dd9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1109ddb60"/>
        <function-ref name="setCca" scoped="" ref="0x1109ddcf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1109dde80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1109dfe80" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1109dfe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1109de220"/>
        <function-ref name="getPayload" scoped="" ref="0x1109de3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1109de540"/>
        <function-ref name="cancel" scoped="" ref="0x1109de6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x1109de860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1109deb40" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1109deb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1109dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1109dbe70" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1109dbe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1109d8220"/>
        <function-ref name="stopDone" scoped="" ref="0x1109d83b0"/>
        <function-ref name="start" scoped="" ref="0x1109d8540"/>
        <function-ref name="stop" scoped="" ref="0x1109d86d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1109d77e0" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1109d77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1109d7b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1109d7cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1109d7e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1109d6030"/>
        <function-ref name="setCca" scoped="" ref="0x1109d61c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1109d6350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x110a07060" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x110a07060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x110a073e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x110a07570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x110a07700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x110a07890"/>
        <function-ref name="setCca" scoped="" ref="0x110a07a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x110a07bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x1109fc330" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1109fc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1109fc6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1109fc840"/>
        <function-ref name="getRssi" scoped="" ref="0x1109fc9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x1109fcb60"/>
        <function-ref name="getPower" scoped="" ref="0x1109fccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x1109fce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x1109fe2a0" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x1109fe2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1109fe620"/>
        <function-ref name="cancel" scoped="" ref="0x1109fe7b0"/>
        <function-ref name="modify" scoped="" ref="0x1109fe940"/>
        <function-ref name="sendDone" scoped="" ref="0x1109fead0"/>
        <function-ref name="resend" scoped="" ref="0x1109fec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1109d8990" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1109d8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1109d8d10"/>
        <function-ref name="getPayload" scoped="" ref="0x1109d7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1109d71b0"/>
        <function-ref name="cancel" scoped="" ref="0x1109d7340"/>
        <function-ref name="sendDone" scoped="" ref="0x1109d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x1109fb420" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1109fb420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1109fb7a0"/>
        <function-ref name="rand32" scoped="" ref="0x1109fb930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x110a06760" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x110a06760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x110a06ae0"/>
        <function-ref name="stop" scoped="" ref="0x110a06c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1109f4920" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1109f4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1109f4ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x1109f4e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x1109f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x110a09b50" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x110a09b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1109d4020"/>
        <function-ref name="rfOff" scoped="" ref="0x1109d41b0"/>
        <function-ref name="rxOn" scoped="" ref="0x1109d4340"/>
        <function-ref name="startVReg" scoped="" ref="0x1109d44d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x1109d4660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1109d47f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1109d4980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1109d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1109fbbf0" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1109fbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1109fd020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1109fd1b0"/>
        <function-ref name="led1On" scoped="" ref="0x1109fd340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1109fd4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1109fd660"/>
        <function-ref name="get" scoped="" ref="0x1109fd7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x1109fd980"/>
        <function-ref name="led2Off" scoped="" ref="0x1109fc020"/>
        <function-ref name="set" scoped="" ref="0x1109fdb10"/>
        <function-ref name="led0On" scoped="" ref="0x1109fdca0"/>
        <function-ref name="led2On" scoped="" ref="0x1109fde30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x1109d6640" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1109d6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1109d69c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1109d6b50"/>
        <function-ref name="request" scoped="" ref="0x1109d6ce0"/>
        <function-ref name="granted" scoped="" ref="0x1109d6e70"/>
        <function-ref name="isOwner" scoped="" ref="0x1109d5030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x1109f8110" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x1109f8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1109f8590"/>
        <function-ref name="toIdle" scoped="" ref="0x1109f8720"/>
        <function-ref name="isState" scoped="" ref="0x1109f88b0"/>
        <function-ref name="isIdle" scoped="" ref="0x1109f8a40"/>
        <function-ref name="requestState" scoped="" ref="0x1109f8bd0"/>
        <function-ref name="forceState" scoped="" ref="0x1109f8d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x110a26b70" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x110a26b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110a25020"/>
        <function-ref name="runTask" scoped="" ref="0x110a251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x110a27ba0" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x110a27ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110a26020"/>
        <function-ref name="runTask" scoped="" ref="0x110a261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x110a29c20" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x110a29c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110a27020"/>
        <function-ref name="runTask" scoped="" ref="0x110a271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x110a84dc0" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x110a84dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x110a53180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x110a53310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x110a534a0"/>
        <function-ref name="syncDone" scoped="" ref="0x110a53630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x110a537c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x110a53950"/>
        <function-ref name="setChannel" scoped="" ref="0x110a53ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x110a53c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x110a53e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x110a52020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x110a521b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x110a52340"/>
        <function-ref name="sync" scoped="" ref="0x110a524d0"/>
        <function-ref name="getChannel" scoped="" ref="0x110a52760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x110a528f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x110a81020" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x110a81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a81c10"/>
        <function-ref name="readDone" scoped="" ref="0x110a800d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x110a52bf0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x110a52bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x110a82020"/>
        <function-ref name="rfOff" scoped="" ref="0x110a821b0"/>
        <function-ref name="rxOn" scoped="" ref="0x110a82340"/>
        <function-ref name="startVReg" scoped="" ref="0x110a824d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x110a82660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x110a827f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x110a82980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x110a82b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110a57950" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110a57950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110a57cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110a57e60"/>
        <function-ref name="request" scoped="" ref="0x110a54020"/>
        <function-ref name="granted" scoped="" ref="0x110a541b0"/>
        <function-ref name="isOwner" scoped="" ref="0x110a54340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x110a7b970" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x110a7b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x110a7bcf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x110a7be80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x110a7a030"/>
        <function-ref name="syncDone" scoped="" ref="0x110a7a1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x110a7a350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x110a7a4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x110a7a670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x110a7a800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x110a7a990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x110a7ab20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x110a7acb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x110a7ae40"/>
        <function-ref name="sync" scoped="" ref="0x110a79020"/>
        <function-ref name="getChannel" scoped="" ref="0x110a792b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x110a79440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x110a971e0" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x110a971e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a97560"/>
        <function-ref name="write" scoped="" ref="0x110a976f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x110a74020" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x110a74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x110a743a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x110a74a10" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x110a74a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110a702a0"/>
        <function-ref name="fired" scoped="" ref="0x110a722a0"/>
        <function-ref name="startAt" scoped="" ref="0x110a72c20"/>
        <function-ref name="isRunning" scoped="" ref="0x110a72760"/>
        <function-ref name="getAlarm" scoped="" ref="0x110a70760"/>
        <function-ref name="start" scoped="" ref="0x110a73890"/>
        <function-ref name="stop" scoped="" ref="0x110a73da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x110a98020" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x110a98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a983a0"/>
        <function-ref name="write" scoped="" ref="0x110a98530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x110a6fe70" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x110a6fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a6e220"/>
        <function-ref name="isInput" scoped="" ref="0x110a6e3b0"/>
        <function-ref name="toggle" scoped="" ref="0x110a6e540"/>
        <function-ref name="isOutput" scoped="" ref="0x110a6e6d0"/>
        <function-ref name="get" scoped="" ref="0x110a6e860"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a6e9f0"/>
        <function-ref name="set" scoped="" ref="0x110a6eb80"/>
        <function-ref name="clr" scoped="" ref="0x110a6ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x110a78b40" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x110a78b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a77750"/>
        <function-ref name="readDone" scoped="" ref="0x110a77bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x110a852f0" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x110a852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110a85670"/>
        <function-ref name="runTask" scoped="" ref="0x110a85800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x110a97a80" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x110a97a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a97e00"/>
        <function-ref name="write" scoped="" ref="0x110a96020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x110a963c0" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x110a963c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a96740"/>
        <function-ref name="write" scoped="" ref="0x110a968d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x110a99cd0" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x110a99cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110aa00a0"/>
        <function-ref name="write" scoped="" ref="0x110aa0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x110aa1390" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x110aa1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x110aa1710"/>
        <function-ref name="changed" scoped="" ref="0x110aa18a0"/>
        <function-ref name="amGroup" scoped="" ref="0x110aa1a30"/>
        <function-ref name="setAddress" scoped="" ref="0x110aa1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x110a70c50" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x110a70c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a6f020"/>
        <function-ref name="isInput" scoped="" ref="0x110a6f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x110a6f340"/>
        <function-ref name="isOutput" scoped="" ref="0x110a6f4d0"/>
        <function-ref name="get" scoped="" ref="0x110a6f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a6f7f0"/>
        <function-ref name="set" scoped="" ref="0x110a6f980"/>
        <function-ref name="clr" scoped="" ref="0x110a6fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x110a95ae0" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x110a95ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110a940a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x110a6d0f0" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x110a6d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a6d470"/>
        <function-ref name="isInput" scoped="" ref="0x110a6d600"/>
        <function-ref name="toggle" scoped="" ref="0x110a6d790"/>
        <function-ref name="isOutput" scoped="" ref="0x110a6d920"/>
        <function-ref name="get" scoped="" ref="0x110a6dab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a6dc40"/>
        <function-ref name="set" scoped="" ref="0x110a6ddd0"/>
        <function-ref name="clr" scoped="" ref="0x110a6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110a7c4a0" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110a7c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110a7c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x110a988f0" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x110a988f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a98c70"/>
        <function-ref name="write" scoped="" ref="0x110a98e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x110a94440" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x110a94440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110a947c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x110a94b60" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x110a94b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110a92020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110a921b0"/>
        <function-ref name="request" scoped="" ref="0x110a92340"/>
        <function-ref name="granted" scoped="" ref="0x110a924d0"/>
        <function-ref name="isOwner" scoped="" ref="0x110a92660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x110a91880" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x110a91880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110a91c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110a91d90"/>
        <function-ref name="request" scoped="" ref="0x110a90020"/>
        <function-ref name="granted" scoped="" ref="0x110a901b0"/>
        <function-ref name="isOwner" scoped="" ref="0x110a90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x110a79740" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x110a79740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x110a79ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x110a79c50"/>
        <function-ref name="rxOn" scoped="" ref="0x110a79de0"/>
        <function-ref name="startVReg" scoped="" ref="0x110a78020"/>
        <function-ref name="stopVReg" scoped="" ref="0x110a781b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x110a78340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x110a784d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x110a78660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x110aa05d0" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x110aa05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110aa0950"/>
        <function-ref name="write" scoped="" ref="0x110aa0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x110a99420" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x110a99420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a997a0"/>
        <function-ref name="write" scoped="" ref="0x110a99930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x110a93b60" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x110a93b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110a95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110a90600" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110a90600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110a90980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110a90b10"/>
        <function-ref name="led1On" scoped="" ref="0x110a90ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110a90e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110a8f020"/>
        <function-ref name="get" scoped="" ref="0x110a8f1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x110a8f340"/>
        <function-ref name="led2Off" scoped="" ref="0x110a8f980"/>
        <function-ref name="set" scoped="" ref="0x110a8f4d0"/>
        <function-ref name="led0On" scoped="" ref="0x110a8f660"/>
        <function-ref name="led2On" scoped="" ref="0x110a8f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x110a87410" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x110a87410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110a87790"/>
        <function-ref name="runTask" scoped="" ref="0x110a87920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110a7cb10" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110a7cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110a7b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110a7b1b0"/>
        <function-ref name="request" scoped="" ref="0x110a7b340"/>
        <function-ref name="granted" scoped="" ref="0x110a7b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x110a7b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x110a9ce20" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x110a9ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a661c0"/>
        <function-ref name="write" scoped="" ref="0x110a66350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x110a9c4a0" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x110a9c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110a9c920"/>
        <function-ref name="write" scoped="" ref="0x110a9cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x110a68c00" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x110a68c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110a6b020"/>
        <function-ref name="disable" scoped="" ref="0x110a6b1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x110a6b340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x110a6b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x110a92a10" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x110a92a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110a92d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110a91020"/>
        <function-ref name="request" scoped="" ref="0x110a911b0"/>
        <function-ref name="granted" scoped="" ref="0x110a91340"/>
        <function-ref name="isOwner" scoped="" ref="0x110a914d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x110a953b0" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x110a953b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110a95730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110b08020" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110b08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110b083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x110b08a10" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x110b08a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110b042a0"/>
        <function-ref name="fired" scoped="" ref="0x110b052a0"/>
        <function-ref name="startAt" scoped="" ref="0x110b05c20"/>
        <function-ref name="isRunning" scoped="" ref="0x110b05760"/>
        <function-ref name="getAlarm" scoped="" ref="0x110b04760"/>
        <function-ref name="start" scoped="" ref="0x110b06890"/>
        <function-ref name="stop" scoped="" ref="0x110b06da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110b41a20" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110b41a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110b41da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x110b402e0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x110b402e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110b47b30"/>
        <function-ref name="fired" scoped="" ref="0x110b48ae0"/>
        <function-ref name="startAt" scoped="" ref="0x110b474e0"/>
        <function-ref name="isRunning" scoped="" ref="0x110b47020"/>
        <function-ref name="getAlarm" scoped="" ref="0x110b46020"/>
        <function-ref name="start" scoped="" ref="0x110b48110"/>
        <function-ref name="stop" scoped="" ref="0x110b48620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1120b4990" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1120b4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1120b01b0"/>
        <function-ref name="fired" scoped="" ref="0x1120b21b0"/>
        <function-ref name="startAt" scoped="" ref="0x1120b2b30"/>
        <function-ref name="isRunning" scoped="" ref="0x1120b2670"/>
        <function-ref name="getAlarm" scoped="" ref="0x1120b0670"/>
        <function-ref name="start" scoped="" ref="0x1120b37c0"/>
        <function-ref name="stop" scoped="" ref="0x1120b3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1120b4140" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1120b4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120b44c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1120ac910" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1120ac910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1120a91b0"/>
        <function-ref name="fired" scoped="" ref="0x1120aa1b0"/>
        <function-ref name="startAt" scoped="" ref="0x1120aab30"/>
        <function-ref name="isRunning" scoped="" ref="0x1120aa670"/>
        <function-ref name="getAlarm" scoped="" ref="0x1120a9670"/>
        <function-ref name="start" scoped="" ref="0x1120ab780"/>
        <function-ref name="stop" scoped="" ref="0x1120abc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1120ac0c0" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1120ac0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120ac440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x112093020" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x112093020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1120933a0"/>
        <function-ref name="setEvent" scoped="" ref="0x112093530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1120936c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112093850"/>
        <function-ref name="fired" scoped="" ref="0x1120939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x112096640" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112096640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1120969c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x112096b50"/>
        <function-ref name="enableEvents" scoped="" ref="0x112096ce0"/>
        <function-ref name="get" scoped="" ref="0x112096e70"/>
        <function-ref name="disableEvents" scoped="" ref="0x112095030"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1120951c0"/>
        <function-ref name="getMode" scoped="" ref="0x112095350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1120954e0"/>
        <function-ref name="overflow" scoped="" ref="0x112095670"/>
        <function-ref name="setMode" scoped="" ref="0x112095800"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112095990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x112095c20" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112095c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112094020"/>
        <function-ref name="getControl" scoped="" ref="0x1120941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x112094340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1120944d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x112094660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1120947f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112094980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112094b10"/>
        <function-ref name="setControl" scoped="" ref="0x112094ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x112124da0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x112124da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112123180"/>
        <function-ref name="setEvent" scoped="" ref="0x112123310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1121234a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112123630"/>
        <function-ref name="fired" scoped="" ref="0x1121237c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1121264c0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1121264c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112126840"/>
        <function-ref name="setClockSource" scoped="" ref="0x1121269d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x112126b60"/>
        <function-ref name="get" scoped="" ref="0x112126cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112126e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112125030"/>
        <function-ref name="getMode" scoped="" ref="0x1121251c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112125350"/>
        <function-ref name="overflow" scoped="" ref="0x1121254e0"/>
        <function-ref name="setMode" scoped="" ref="0x112125670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112125800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x11212a340" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x11212a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112127ba0"/>
        <function-ref name="fired" scoped="" ref="0x112129b80"/>
        <function-ref name="startAt" scoped="" ref="0x112127550"/>
        <function-ref name="isRunning" scoped="" ref="0x112127090"/>
        <function-ref name="getAlarm" scoped="" ref="0x112126090"/>
        <function-ref name="start" scoped="" ref="0x1121291b0"/>
        <function-ref name="stop" scoped="" ref="0x1121296c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11212ba30" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11212ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11212bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x112125a90" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112125a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112125e10"/>
        <function-ref name="getControl" scoped="" ref="0x112124020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1121241b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112124340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1121244d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112124660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1121247f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112124980"/>
        <function-ref name="setControl" scoped="" ref="0x112124b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110b2d890" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110b2d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110b2a6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110b29090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110b2aba0"/>
        <function-ref name="overflow" scoped="" ref="0x110b29550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x110b23910" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x110b23910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110b61780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110b60150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110b61c40"/>
        <function-ref name="overflow" scoped="" ref="0x110b60610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110b25430" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110b25430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110b243d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110b24d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110b24890"/>
        <function-ref name="overflow" scoped="" ref="0x110b23260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1120a7b10" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1120a7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1120a3390"/>
        <function-ref name="fired" scoped="" ref="0x1120a4360"/>
        <function-ref name="startAt" scoped="" ref="0x1120a4ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x1120a4820"/>
        <function-ref name="getAlarm" scoped="" ref="0x1120a3850"/>
        <function-ref name="start" scoped="" ref="0x1120a6970"/>
        <function-ref name="stop" scoped="" ref="0x1120a6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1120a03a0" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x1120a03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11209dbe0"/>
        <function-ref name="fired" scoped="" ref="0x11209ebc0"/>
        <function-ref name="startAt" scoped="" ref="0x11209d590"/>
        <function-ref name="isRunning" scoped="" ref="0x11209d0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x11209c0d0"/>
        <function-ref name="start" scoped="" ref="0x11209e1f0"/>
        <function-ref name="stop" scoped="" ref="0x11209e700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1120a2020" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1120a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1120a2e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1120a1800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1120a1340"/>
        <function-ref name="overflow" scoped="" ref="0x1120a1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x110b826a0" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x110b826a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b82a20"/>
        <function-ref name="isInput" scoped="" ref="0x110b82bb0"/>
        <function-ref name="toggle" scoped="" ref="0x110b82d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110b81020"/>
        <function-ref name="get" scoped="" ref="0x110b811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b81340"/>
        <function-ref name="set" scoped="" ref="0x110b814d0"/>
        <function-ref name="clr" scoped="" ref="0x110b81660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x110b819d0" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x110b819d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b81d50"/>
        <function-ref name="isInput" scoped="" ref="0x110b7f020"/>
        <function-ref name="toggle" scoped="" ref="0x110b7f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b7f340"/>
        <function-ref name="get" scoped="" ref="0x110b7f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b7f660"/>
        <function-ref name="set" scoped="" ref="0x110b7f7f0"/>
        <function-ref name="clr" scoped="" ref="0x110b7f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x110b7fce0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x110b7fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b7e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x110b7e230"/>
        <function-ref name="toggle" scoped="" ref="0x110b7e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b7e550"/>
        <function-ref name="get" scoped="" ref="0x110b7e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b7e870"/>
        <function-ref name="set" scoped="" ref="0x110b7ea00"/>
        <function-ref name="clr" scoped="" ref="0x110b7eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x110b42370" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x110b42370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b426f0"/>
        <function-ref name="isInput" scoped="" ref="0x110b42880"/>
        <function-ref name="toggle" scoped="" ref="0x110b42a10"/>
        <function-ref name="isOutput" scoped="" ref="0x110b42ba0"/>
        <function-ref name="get" scoped="" ref="0x110b42d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b82020"/>
        <function-ref name="set" scoped="" ref="0x110b821b0"/>
        <function-ref name="clr" scoped="" ref="0x110b82340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x110b7c380" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x110b7c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b7c700"/>
        <function-ref name="isInput" scoped="" ref="0x110b7c890"/>
        <function-ref name="toggle" scoped="" ref="0x110b7ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x110b7cbb0"/>
        <function-ref name="get" scoped="" ref="0x110b7cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b7b020"/>
        <function-ref name="set" scoped="" ref="0x110b7b1b0"/>
        <function-ref name="clr" scoped="" ref="0x110b7b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x110b430e0" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x110b430e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b43460"/>
        <function-ref name="isInput" scoped="" ref="0x110b435f0"/>
        <function-ref name="toggle" scoped="" ref="0x110b43780"/>
        <function-ref name="isOutput" scoped="" ref="0x110b43910"/>
        <function-ref name="get" scoped="" ref="0x110b43aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b43c30"/>
        <function-ref name="set" scoped="" ref="0x110b43dc0"/>
        <function-ref name="clr" scoped="" ref="0x110b42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x110b7d020" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x110b7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b7d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110b7d530"/>
        <function-ref name="toggle" scoped="" ref="0x110b7d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b7d850"/>
        <function-ref name="get" scoped="" ref="0x110b7d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b7db70"/>
        <function-ref name="set" scoped="" ref="0x110b7dd00"/>
        <function-ref name="clr" scoped="" ref="0x110b7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b79930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b79930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b79cb0"/>
        <function-ref name="isInput" scoped="" ref="0x110b79e40"/>
        <function-ref name="setResistor" scoped="" ref="0x110b78020"/>
        <function-ref name="toggle" scoped="" ref="0x110b781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b78340"/>
        <function-ref name="getResistor" scoped="" ref="0x110b784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b78660"/>
        <function-ref name="get" scoped="" ref="0x110b787f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b78980"/>
        <function-ref name="getRaw" scoped="" ref="0x110b78b10"/>
        <function-ref name="set" scoped="" ref="0x110b78ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b78e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b77020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b772b0"/>
        <function-ref name="clr" scoped="" ref="0x110b77440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b7a710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b7a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b7aa90"/>
        <function-ref name="isInput" scoped="" ref="0x110b7ac20"/>
        <function-ref name="toggle" scoped="" ref="0x110b7adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b79020"/>
        <function-ref name="get" scoped="" ref="0x110b791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b79340"/>
        <function-ref name="set" scoped="" ref="0x110b794d0"/>
        <function-ref name="clr" scoped="" ref="0x110b79660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b74480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b74800"/>
        <function-ref name="isInput" scoped="" ref="0x110b74990"/>
        <function-ref name="setResistor" scoped="" ref="0x110b74b20"/>
        <function-ref name="toggle" scoped="" ref="0x110b74cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b74e40"/>
        <function-ref name="getResistor" scoped="" ref="0x110b73020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b731b0"/>
        <function-ref name="get" scoped="" ref="0x110b73340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b734d0"/>
        <function-ref name="getRaw" scoped="" ref="0x110b73660"/>
        <function-ref name="set" scoped="" ref="0x110b737f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b73980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b73b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b73da0"/>
        <function-ref name="clr" scoped="" ref="0x110b72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b751b0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b751b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b75530"/>
        <function-ref name="isInput" scoped="" ref="0x110b756c0"/>
        <function-ref name="toggle" scoped="" ref="0x110b75850"/>
        <function-ref name="isOutput" scoped="" ref="0x110b759e0"/>
        <function-ref name="get" scoped="" ref="0x110b75b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b75d00"/>
        <function-ref name="set" scoped="" ref="0x110b74020"/>
        <function-ref name="clr" scoped="" ref="0x110b741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b6f020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b6f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110b6f530"/>
        <function-ref name="setResistor" scoped="" ref="0x110b6f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110b6f850"/>
        <function-ref name="isOutput" scoped="" ref="0x110b6f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110b6fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b6fd00"/>
        <function-ref name="get" scoped="" ref="0x110b6e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b6e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110b6e340"/>
        <function-ref name="set" scoped="" ref="0x110b6e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b6e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b6e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b6ea80"/>
        <function-ref name="clr" scoped="" ref="0x110b6ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b71d70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b71d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b70180"/>
        <function-ref name="isInput" scoped="" ref="0x110b70310"/>
        <function-ref name="toggle" scoped="" ref="0x110b704a0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b70630"/>
        <function-ref name="get" scoped="" ref="0x110b707c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b70950"/>
        <function-ref name="set" scoped="" ref="0x110b70ae0"/>
        <function-ref name="clr" scoped="" ref="0x110b70c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b6bde0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b6bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b69180"/>
        <function-ref name="isInput" scoped="" ref="0x110b69310"/>
        <function-ref name="setResistor" scoped="" ref="0x110b694a0"/>
        <function-ref name="toggle" scoped="" ref="0x110b69630"/>
        <function-ref name="isOutput" scoped="" ref="0x110b697c0"/>
        <function-ref name="getResistor" scoped="" ref="0x110b69950"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b69ae0"/>
        <function-ref name="get" scoped="" ref="0x110b69c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b69e00"/>
        <function-ref name="getRaw" scoped="" ref="0x110b68020"/>
        <function-ref name="set" scoped="" ref="0x110b681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b68340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b68760"/>
        <function-ref name="clr" scoped="" ref="0x110b688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b6cb70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b6cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b6b020"/>
        <function-ref name="isInput" scoped="" ref="0x110b6b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x110b6b340"/>
        <function-ref name="isOutput" scoped="" ref="0x110b6b4d0"/>
        <function-ref name="get" scoped="" ref="0x110b6b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b6b7f0"/>
        <function-ref name="set" scoped="" ref="0x110b6b980"/>
        <function-ref name="clr" scoped="" ref="0x110b6bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b65930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b65930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b65cb0"/>
        <function-ref name="isInput" scoped="" ref="0x110b65e40"/>
        <function-ref name="setResistor" scoped="" ref="0x110b64020"/>
        <function-ref name="toggle" scoped="" ref="0x110b641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b64340"/>
        <function-ref name="getResistor" scoped="" ref="0x110b644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b64660"/>
        <function-ref name="get" scoped="" ref="0x110b647f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b64980"/>
        <function-ref name="getRaw" scoped="" ref="0x110b64b10"/>
        <function-ref name="set" scoped="" ref="0x110b64ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b64e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b63020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b632b0"/>
        <function-ref name="clr" scoped="" ref="0x110b63440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b66710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b66710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b66a90"/>
        <function-ref name="isInput" scoped="" ref="0x110b66c20"/>
        <function-ref name="toggle" scoped="" ref="0x110b66db0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b65020"/>
        <function-ref name="get" scoped="" ref="0x110b651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b65340"/>
        <function-ref name="set" scoped="" ref="0x110b654d0"/>
        <function-ref name="clr" scoped="" ref="0x110b65660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110ba2480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110ba2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ba2800"/>
        <function-ref name="isInput" scoped="" ref="0x110ba2990"/>
        <function-ref name="setResistor" scoped="" ref="0x110ba2b20"/>
        <function-ref name="toggle" scoped="" ref="0x110ba2cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x110ba2e40"/>
        <function-ref name="getResistor" scoped="" ref="0x110ba1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ba11b0"/>
        <function-ref name="get" scoped="" ref="0x110ba1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ba14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ba1660"/>
        <function-ref name="set" scoped="" ref="0x110ba17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ba1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ba1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ba1da0"/>
        <function-ref name="clr" scoped="" ref="0x110ba0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110ba31b0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110ba31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ba3530"/>
        <function-ref name="isInput" scoped="" ref="0x110ba36c0"/>
        <function-ref name="toggle" scoped="" ref="0x110ba3850"/>
        <function-ref name="isOutput" scoped="" ref="0x110ba39e0"/>
        <function-ref name="get" scoped="" ref="0x110ba3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ba3d00"/>
        <function-ref name="set" scoped="" ref="0x110ba2020"/>
        <function-ref name="clr" scoped="" ref="0x110ba21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b9d020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b9d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110b9d530"/>
        <function-ref name="setResistor" scoped="" ref="0x110b9d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110b9d850"/>
        <function-ref name="isOutput" scoped="" ref="0x110b9d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110b9db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b9dd00"/>
        <function-ref name="get" scoped="" ref="0x110b9c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b9c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110b9c340"/>
        <function-ref name="set" scoped="" ref="0x110b9c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b9c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b9c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b9ca80"/>
        <function-ref name="clr" scoped="" ref="0x110b9cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b9fd70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b9fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b9e180"/>
        <function-ref name="isInput" scoped="" ref="0x110b9e310"/>
        <function-ref name="toggle" scoped="" ref="0x110b9e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b9e630"/>
        <function-ref name="get" scoped="" ref="0x110b9e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b9e950"/>
        <function-ref name="set" scoped="" ref="0x110b9eae0"/>
        <function-ref name="clr" scoped="" ref="0x110b9ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x110b845a0" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x110b845a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x110b84920"/>
        <function-ref name="disable" scoped="" ref="0x110b84ab0"/>
        <function-ref name="captured" scoped="" ref="0x110b84c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x110b84dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x110b89210" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x110b89210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110b89590"/>
        <function-ref name="disable" scoped="" ref="0x110b89720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x110b898b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x110b89a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x110b89e30" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x110b89e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110b881e0"/>
        <function-ref name="disable" scoped="" ref="0x110b88370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x110b88500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x110b88690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x110bb3da0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x110bb3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110bb1180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110bb1310"/>
        <function-ref name="captured" scoped="" ref="0x110bb14a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110bb1630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110bb17c0"/>
        <function-ref name="setEdge" scoped="" ref="0x110bb1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110bb4020" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110bb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x110bb43a0"/>
        <function-ref name="disable" scoped="" ref="0x110bb4530"/>
        <function-ref name="captured" scoped="" ref="0x110bb46c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x110bb4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x110bb4ae0" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x110bb4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110bb4e60"/>
        <function-ref name="getControl" scoped="" ref="0x110bb3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x110bb31b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110bb3340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110bb34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110bb3660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110bb37f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110bb3980"/>
        <function-ref name="setControl" scoped="" ref="0x110bb3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x110bb1c20" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110bb1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110bb0020"/>
        <function-ref name="isInput" scoped="" ref="0x110bb01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110bb0340"/>
        <function-ref name="toggle" scoped="" ref="0x110bb04d0"/>
        <function-ref name="isOutput" scoped="" ref="0x110bb0660"/>
        <function-ref name="getResistor" scoped="" ref="0x110bb07f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110bb0980"/>
        <function-ref name="get" scoped="" ref="0x110bb0b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110bb0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x110bb0e30"/>
        <function-ref name="set" scoped="" ref="0x110baf020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110baf1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110baf340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110baf5d0"/>
        <function-ref name="clr" scoped="" ref="0x110baf760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x110be4c40" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x110be4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110be3020"/>
        <function-ref name="fired" scoped="" ref="0x110be31b0"/>
        <function-ref name="disable" scoped="" ref="0x110be3340"/>
        <function-ref name="edge" scoped="" ref="0x110be34d0"/>
        <function-ref name="enable" scoped="" ref="0x110be3660"/>
        <function-ref name="getValue" scoped="" ref="0x110be37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x110bdabc0" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x110bdabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd9020"/>
        <function-ref name="fired" scoped="" ref="0x110bd91b0"/>
        <function-ref name="disable" scoped="" ref="0x110bd9340"/>
        <function-ref name="edge" scoped="" ref="0x110bd94d0"/>
        <function-ref name="enable" scoped="" ref="0x110bd9660"/>
        <function-ref name="getValue" scoped="" ref="0x110bd97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x110be1bc0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x110be1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110be0020"/>
        <function-ref name="fired" scoped="" ref="0x110be01b0"/>
        <function-ref name="disable" scoped="" ref="0x110be0340"/>
        <function-ref name="edge" scoped="" ref="0x110be04d0"/>
        <function-ref name="enable" scoped="" ref="0x110be0660"/>
        <function-ref name="getValue" scoped="" ref="0x110be07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x110bdfbc0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x110bdfbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bde020"/>
        <function-ref name="fired" scoped="" ref="0x110bde1b0"/>
        <function-ref name="disable" scoped="" ref="0x110bde340"/>
        <function-ref name="edge" scoped="" ref="0x110bde4d0"/>
        <function-ref name="enable" scoped="" ref="0x110bde660"/>
        <function-ref name="getValue" scoped="" ref="0x110bde7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x110ba8d20" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x110ba8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110be50e0"/>
        <function-ref name="fired" scoped="" ref="0x110be5270"/>
        <function-ref name="disable" scoped="" ref="0x110be5400"/>
        <function-ref name="edge" scoped="" ref="0x110be5590"/>
        <function-ref name="enable" scoped="" ref="0x110be5720"/>
        <function-ref name="getValue" scoped="" ref="0x110be58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x110bdcbc0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x110bdcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bdb0a0"/>
        <function-ref name="fired" scoped="" ref="0x110bdb230"/>
        <function-ref name="disable" scoped="" ref="0x110bdb3c0"/>
        <function-ref name="edge" scoped="" ref="0x110bdb550"/>
        <function-ref name="enable" scoped="" ref="0x110bdb6e0"/>
        <function-ref name="getValue" scoped="" ref="0x110bdb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x110be3bc0" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x110be3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110be2020"/>
        <function-ref name="fired" scoped="" ref="0x110be21b0"/>
        <function-ref name="disable" scoped="" ref="0x110be2340"/>
        <function-ref name="edge" scoped="" ref="0x110be24d0"/>
        <function-ref name="enable" scoped="" ref="0x110be2660"/>
        <function-ref name="getValue" scoped="" ref="0x110be27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x110bd9bc0" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x110bd9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd8020"/>
        <function-ref name="fired" scoped="" ref="0x110bd81b0"/>
        <function-ref name="disable" scoped="" ref="0x110bd8340"/>
        <function-ref name="edge" scoped="" ref="0x110bd84d0"/>
        <function-ref name="enable" scoped="" ref="0x110bd8660"/>
        <function-ref name="getValue" scoped="" ref="0x110bd87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x110be7e70" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x110be7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110ba9220"/>
        <function-ref name="fired" scoped="" ref="0x110ba93b0"/>
        <function-ref name="disable" scoped="" ref="0x110ba9540"/>
        <function-ref name="edge" scoped="" ref="0x110ba96d0"/>
        <function-ref name="enable" scoped="" ref="0x110ba9860"/>
        <function-ref name="getValue" scoped="" ref="0x110ba99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x110bdebc0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x110bdebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bdd020"/>
        <function-ref name="fired" scoped="" ref="0x110bdd1b0"/>
        <function-ref name="disable" scoped="" ref="0x110bdd340"/>
        <function-ref name="edge" scoped="" ref="0x110bdd4d0"/>
        <function-ref name="enable" scoped="" ref="0x110bdd660"/>
        <function-ref name="getValue" scoped="" ref="0x110bdd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x110be5c80" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x110be5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110be40a0"/>
        <function-ref name="fired" scoped="" ref="0x110be4230"/>
        <function-ref name="disable" scoped="" ref="0x110be43c0"/>
        <function-ref name="edge" scoped="" ref="0x110be4550"/>
        <function-ref name="enable" scoped="" ref="0x110be46e0"/>
        <function-ref name="getValue" scoped="" ref="0x110be4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x110bdbc40" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x110bdbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bda020"/>
        <function-ref name="fired" scoped="" ref="0x110bda1b0"/>
        <function-ref name="disable" scoped="" ref="0x110bda340"/>
        <function-ref name="edge" scoped="" ref="0x110bda4d0"/>
        <function-ref name="enable" scoped="" ref="0x110bda660"/>
        <function-ref name="getValue" scoped="" ref="0x110bda7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x110be2bc0" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x110be2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110be1020"/>
        <function-ref name="fired" scoped="" ref="0x110be11b0"/>
        <function-ref name="disable" scoped="" ref="0x110be1340"/>
        <function-ref name="edge" scoped="" ref="0x110be14d0"/>
        <function-ref name="enable" scoped="" ref="0x110be1660"/>
        <function-ref name="getValue" scoped="" ref="0x110be17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x110be0bc0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x110be0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bdf020"/>
        <function-ref name="fired" scoped="" ref="0x110bdf1b0"/>
        <function-ref name="disable" scoped="" ref="0x110bdf340"/>
        <function-ref name="edge" scoped="" ref="0x110bdf4d0"/>
        <function-ref name="enable" scoped="" ref="0x110bdf660"/>
        <function-ref name="getValue" scoped="" ref="0x110bdf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x110ba9dc0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x110ba9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110ba8180"/>
        <function-ref name="fired" scoped="" ref="0x110ba8310"/>
        <function-ref name="disable" scoped="" ref="0x110ba84a0"/>
        <function-ref name="edge" scoped="" ref="0x110ba8630"/>
        <function-ref name="enable" scoped="" ref="0x110ba87c0"/>
        <function-ref name="getValue" scoped="" ref="0x110ba8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x110bddbc0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x110bddbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bdc020"/>
        <function-ref name="fired" scoped="" ref="0x110bdc1b0"/>
        <function-ref name="disable" scoped="" ref="0x110bdc340"/>
        <function-ref name="edge" scoped="" ref="0x110bdc4d0"/>
        <function-ref name="enable" scoped="" ref="0x110bdc660"/>
        <function-ref name="getValue" scoped="" ref="0x110bdc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x110bd1a30" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x110bd1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd1db0"/>
        <function-ref name="fired" scoped="" ref="0x110bd0020"/>
        <function-ref name="disable" scoped="" ref="0x110bd01b0"/>
        <function-ref name="edge" scoped="" ref="0x110bd0340"/>
        <function-ref name="enable" scoped="" ref="0x110bd04d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bd0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x110c09bc0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x110c09bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110c08020"/>
        <function-ref name="fired" scoped="" ref="0x110c081b0"/>
        <function-ref name="disable" scoped="" ref="0x110c08340"/>
        <function-ref name="edge" scoped="" ref="0x110c084d0"/>
        <function-ref name="enable" scoped="" ref="0x110c08660"/>
        <function-ref name="getValue" scoped="" ref="0x110c087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x110bcda30" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x110bcda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bcddb0"/>
        <function-ref name="fired" scoped="" ref="0x110bcc020"/>
        <function-ref name="disable" scoped="" ref="0x110bcc1b0"/>
        <function-ref name="edge" scoped="" ref="0x110bcc340"/>
        <function-ref name="enable" scoped="" ref="0x110bcc4d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bcc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x110bcba30" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x110bcba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bcbdb0"/>
        <function-ref name="fired" scoped="" ref="0x110bca020"/>
        <function-ref name="disable" scoped="" ref="0x110bca1b0"/>
        <function-ref name="edge" scoped="" ref="0x110bca340"/>
        <function-ref name="enable" scoped="" ref="0x110bca4d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x110bd3a30" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x110bd3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd3db0"/>
        <function-ref name="fired" scoped="" ref="0x110bd2020"/>
        <function-ref name="disable" scoped="" ref="0x110bd21b0"/>
        <function-ref name="edge" scoped="" ref="0x110bd2340"/>
        <function-ref name="enable" scoped="" ref="0x110bd24d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bd2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x110bc8a30" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x110bc8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bc7020"/>
        <function-ref name="fired" scoped="" ref="0x110bc71b0"/>
        <function-ref name="disable" scoped="" ref="0x110bc7340"/>
        <function-ref name="edge" scoped="" ref="0x110bc74d0"/>
        <function-ref name="enable" scoped="" ref="0x110bc7660"/>
        <function-ref name="getValue" scoped="" ref="0x110bc77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x110bd0a30" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x110bd0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd0db0"/>
        <function-ref name="fired" scoped="" ref="0x110bcf020"/>
        <function-ref name="disable" scoped="" ref="0x110bcf1b0"/>
        <function-ref name="edge" scoped="" ref="0x110bcf340"/>
        <function-ref name="enable" scoped="" ref="0x110bcf4d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bcf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x110c08bc0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x110c08bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110c07020"/>
        <function-ref name="fired" scoped="" ref="0x110c071b0"/>
        <function-ref name="disable" scoped="" ref="0x110c07340"/>
        <function-ref name="edge" scoped="" ref="0x110c074d0"/>
        <function-ref name="enable" scoped="" ref="0x110c07660"/>
        <function-ref name="getValue" scoped="" ref="0x110c077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x110bd79c0" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x110bd79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd7d40"/>
        <function-ref name="fired" scoped="" ref="0x110bd4020"/>
        <function-ref name="disable" scoped="" ref="0x110bd41b0"/>
        <function-ref name="edge" scoped="" ref="0x110bd4340"/>
        <function-ref name="enable" scoped="" ref="0x110bd44d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bd4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x110bcaa30" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x110bcaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bcadb0"/>
        <function-ref name="fired" scoped="" ref="0x110bc9020"/>
        <function-ref name="disable" scoped="" ref="0x110bc91b0"/>
        <function-ref name="edge" scoped="" ref="0x110bc9340"/>
        <function-ref name="enable" scoped="" ref="0x110bc94d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bc9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x110bd2a30" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x110bd2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd2db0"/>
        <function-ref name="fired" scoped="" ref="0x110bd1020"/>
        <function-ref name="disable" scoped="" ref="0x110bd11b0"/>
        <function-ref name="edge" scoped="" ref="0x110bd1340"/>
        <function-ref name="enable" scoped="" ref="0x110bd14d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x110bc7bc0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x110bc7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110c09020"/>
        <function-ref name="fired" scoped="" ref="0x110c091b0"/>
        <function-ref name="disable" scoped="" ref="0x110c09340"/>
        <function-ref name="edge" scoped="" ref="0x110c094d0"/>
        <function-ref name="enable" scoped="" ref="0x110c09660"/>
        <function-ref name="getValue" scoped="" ref="0x110c097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x110bcfa30" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x110bcfa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bcfdb0"/>
        <function-ref name="fired" scoped="" ref="0x110bcd020"/>
        <function-ref name="disable" scoped="" ref="0x110bcd1b0"/>
        <function-ref name="edge" scoped="" ref="0x110bcd340"/>
        <function-ref name="enable" scoped="" ref="0x110bcd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bcd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x110bcca30" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x110bcca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bccdb0"/>
        <function-ref name="fired" scoped="" ref="0x110bcb020"/>
        <function-ref name="disable" scoped="" ref="0x110bcb1b0"/>
        <function-ref name="edge" scoped="" ref="0x110bcb340"/>
        <function-ref name="enable" scoped="" ref="0x110bcb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bcb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x110bd4a30" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x110bd4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bd4db0"/>
        <function-ref name="fired" scoped="" ref="0x110bd3020"/>
        <function-ref name="disable" scoped="" ref="0x110bd31b0"/>
        <function-ref name="edge" scoped="" ref="0x110bd3340"/>
        <function-ref name="enable" scoped="" ref="0x110bd34d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x110bc9a30" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x110bc9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110bc9db0"/>
        <function-ref name="fired" scoped="" ref="0x110bc8020"/>
        <function-ref name="disable" scoped="" ref="0x110bc81b0"/>
        <function-ref name="edge" scoped="" ref="0x110bc8340"/>
        <function-ref name="enable" scoped="" ref="0x110bc84d0"/>
        <function-ref name="getValue" scoped="" ref="0x110bc8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x110cc5610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x110cc5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110cc5990"/>
        <function-ref name="fired" scoped="" ref="0x110cc5b20"/>
        <function-ref name="disable" scoped="" ref="0x110cc5cb0"/>
        <function-ref name="edge" scoped="" ref="0x110cc5e40"/>
        <function-ref name="enable" scoped="" ref="0x110cc4020"/>
        <function-ref name="getValue" scoped="" ref="0x110cc41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x110cd3a30" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x110cd3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110cd3db0"/>
        <function-ref name="disable" scoped="" ref="0x110cc5020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x110cc51b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x110cc5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x110cc2610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x110cc2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110cc2990"/>
        <function-ref name="fired" scoped="" ref="0x110cc2b20"/>
        <function-ref name="disable" scoped="" ref="0x110cc2cb0"/>
        <function-ref name="edge" scoped="" ref="0x110cc2e40"/>
        <function-ref name="enable" scoped="" ref="0x110cc1020"/>
        <function-ref name="getValue" scoped="" ref="0x110cc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x110cc3a70" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x110cc3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110cc3df0"/>
        <function-ref name="disable" scoped="" ref="0x110cc2020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x110cc21b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x110cc2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111117e50" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111117e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111116410"/>
        <function-ref name="write" scoped="" ref="0x1111165a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111120160" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111120160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111204e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x11111ae50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x11111ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111119210"/>
        <function-ref name="write" scoped="" ref="0x1111193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111114880" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111114880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111114c00"/>
        <function-ref name="write" scoped="" ref="0x111114d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x11110c0a0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x11110c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110c420"/>
        <function-ref name="write" scoped="" ref="0x11110c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1111130a0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1111130a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111113420"/>
        <function-ref name="write" scoped="" ref="0x1111135b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x11115a500" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x11115a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115a880"/>
        <function-ref name="write" scoped="" ref="0x11115aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x111103500" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111103500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111103880"/>
        <function-ref name="write" scoped="" ref="0x111103a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x11111f490" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x11111f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111109880" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111109880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111109c00"/>
        <function-ref name="write" scoped="" ref="0x111109d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x111104500" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111104500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111104880"/>
        <function-ref name="write" scoped="" ref="0x111104a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111119e50" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111119e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111118210"/>
        <function-ref name="write" scoped="" ref="0x1111183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111118e50" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111118e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111117210"/>
        <function-ref name="write" scoped="" ref="0x1111173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x11110f880" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x11110f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110fc00"/>
        <function-ref name="write" scoped="" ref="0x11110fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x1111100a0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x1111100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111110420"/>
        <function-ref name="write" scoped="" ref="0x1111105b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111113880" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111113880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111113c00"/>
        <function-ref name="write" scoped="" ref="0x111113d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111123a90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111123a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111123e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x111122020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1111221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x11111ee00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x11111ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x11111d490" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x11111d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111108c80" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111108c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111060a0"/>
        <function-ref name="write" scoped="" ref="0x111106230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x11111dbe0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x11111dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111104ce0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111104ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111030a0"/>
        <function-ref name="write" scoped="" ref="0x111103230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x11111e160" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x11111e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x1111090a0" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x1111090a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111109420"/>
        <function-ref name="write" scoped="" ref="0x1111095b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x111118670" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x111118670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111189f0"/>
        <function-ref name="write" scoped="" ref="0x111118b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x111119670" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111119670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111199f0"/>
        <function-ref name="write" scoped="" ref="0x111119b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111122ad0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111122ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111122e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x11110a0a0" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x11110a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110a420"/>
        <function-ref name="write" scoped="" ref="0x11110a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x11110c880" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x11110c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110cc00"/>
        <function-ref name="write" scoped="" ref="0x11110cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x11110a880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x11110a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110ac00"/>
        <function-ref name="write" scoped="" ref="0x11110ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x11115cce0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x11115cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115a0a0"/>
        <function-ref name="write" scoped="" ref="0x11115a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111103ce0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111103ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115c0a0"/>
        <function-ref name="write" scoped="" ref="0x11115c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111110880" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111110880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111110c00"/>
        <function-ref name="write" scoped="" ref="0x111110d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x11110b0a0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x11110b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110b420"/>
        <function-ref name="write" scoped="" ref="0x11110b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111105ce0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111105ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111040a0"/>
        <function-ref name="write" scoped="" ref="0x111104230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111112880" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111112880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111112c00"/>
        <function-ref name="write" scoped="" ref="0x111112d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x11115ace0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x11115ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1111590a0"/>
        <function-ref name="writeDone" scoped="" ref="0x111159230"/>
        <function-ref name="write" scoped="" ref="0x1111593c0"/>
        <function-ref name="beginRead" scoped="" ref="0x111159550"/>
        <function-ref name="readDone" scoped="" ref="0x1111596e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111122480" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111122480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111122800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x11111a670" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x11111a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11111a9f0"/>
        <function-ref name="write" scoped="" ref="0x11111ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111117670" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111117670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111179f0"/>
        <function-ref name="write" scoped="" ref="0x111117b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x11110d0a0" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x11110d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110d420"/>
        <function-ref name="write" scoped="" ref="0x11110d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1111120a0" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1111120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111112420"/>
        <function-ref name="write" scoped="" ref="0x1111125b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x11110d880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x11110d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110dc00"/>
        <function-ref name="write" scoped="" ref="0x11110dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111116870" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111116870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111116bf0"/>
        <function-ref name="write" scoped="" ref="0x111116d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1111207b0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1111207b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111120b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1111140a0" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1111140a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111114420"/>
        <function-ref name="write" scoped="" ref="0x1111145b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111124e20" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111124e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1111231c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111123350"/>
        <function-ref name="request" scoped="" ref="0x1111234e0"/>
        <function-ref name="granted" scoped="" ref="0x111123670"/>
        <function-ref name="isOwner" scoped="" ref="0x111123800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x11111b2f0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x11111b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x11111a020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x11111a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x111105500" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x111105500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111105880"/>
        <function-ref name="write" scoped="" ref="0x111105a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111106ce0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111106ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111050a0"/>
        <function-ref name="write" scoped="" ref="0x111105230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x11111e7b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x11111e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x111106500" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111106500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111106880"/>
        <function-ref name="write" scoped="" ref="0x111106a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x11115c500" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x11115c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115c880"/>
        <function-ref name="write" scoped="" ref="0x11115ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x11110f0a0" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x11110f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110f420"/>
        <function-ref name="write" scoped="" ref="0x11110f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x11110b880" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x11110b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11110bc00"/>
        <function-ref name="write" scoped="" ref="0x11110bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111120e00" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111120e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x11111fae0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x11111fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1111110a0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1111110a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111111420"/>
        <function-ref name="write" scoped="" ref="0x1111115b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x11111b940" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x11111b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11111bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111111880" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111111880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111111c00"/>
        <function-ref name="write" scoped="" ref="0x111111d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x1111080a0" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x1111080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111108820"/>
        <function-ref name="write" scoped="" ref="0x1111089b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1111599b0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1111599b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111159d30"/>
        <function-ref name="writeDone" scoped="" ref="0x111158020"/>
        <function-ref name="write" scoped="" ref="0x1111581b0"/>
        <function-ref name="beginRead" scoped="" ref="0x111158340"/>
        <function-ref name="readDone" scoped="" ref="0x1111584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x110d0f630" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x110d0f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x110d0f9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x110d0fb40"/>
        <function-ref name="write" scoped="" ref="0x110d0fcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x110d0fe60"/>
        <function-ref name="readDone" scoped="" ref="0x110d0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x110d10670" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x110d10670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x110d109f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x110d10b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x110d10d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x110d0e8c0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x110d0e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110d0ec40"/>
        <function-ref name="write" scoped="" ref="0x110d0edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x110d0c6f0" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x110d0c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110d0ca70"/>
        <function-ref name="write" scoped="" ref="0x110d0cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110d13950" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110d13950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110d13cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110d13e60"/>
        <function-ref name="request" scoped="" ref="0x110d10020"/>
        <function-ref name="granted" scoped="" ref="0x110d101b0"/>
        <function-ref name="isOwner" scoped="" ref="0x110d10340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x110d0b510" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x110d0b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110d0b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x110d3d680" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x110d3d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110d3da00"/>
        <function-ref name="sendDone" scoped="" ref="0x110d3db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x110d06bb0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x110d06bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x110d04020"/>
        <function-ref name="writeDone" scoped="" ref="0x110d041b0"/>
        <function-ref name="write" scoped="" ref="0x110d04340"/>
        <function-ref name="beginRead" scoped="" ref="0x110d044d0"/>
        <function-ref name="readDone" scoped="" ref="0x110d04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x110d0a920" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x110d0a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x110d0aca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x110d0ae30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x110d07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x110cff080" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x110cff080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x110cff400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x110cfe020" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x110cfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110cfe3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x110cfe530"/>
        <function-ref name="isState" scoped="" ref="0x110cfe6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x110cfe850"/>
        <function-ref name="requestState" scoped="" ref="0x110cfe9e0"/>
        <function-ref name="forceState" scoped="" ref="0x110cfeb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x110d01400" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x110d01400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110d01780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110d01910"/>
        <function-ref name="request" scoped="" ref="0x110d01aa0"/>
        <function-ref name="granted" scoped="" ref="0x110d01c30"/>
        <function-ref name="isOwner" scoped="" ref="0x110d01dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x110d03020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x110d03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110d033a0"/>
        <function-ref name="write" scoped="" ref="0x110d03530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x110d03db0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x110d03db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110d02180"/>
        <function-ref name="write" scoped="" ref="0x110d02310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110cfedf0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110cfedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110cfc1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110cfc350"/>
        <function-ref name="led1On" scoped="" ref="0x110cfc4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110cfc670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110cfc800"/>
        <function-ref name="get" scoped="" ref="0x110cfc990"/>
        <function-ref name="led1Off" scoped="" ref="0x110cfcb20"/>
        <function-ref name="led2Off" scoped="" ref="0x110d3e1b0"/>
        <function-ref name="set" scoped="" ref="0x110cfccb0"/>
        <function-ref name="led0On" scoped="" ref="0x110cfce40"/>
        <function-ref name="led2On" scoped="" ref="0x110d3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110d07810" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110d07810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110d07b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110d07d20"/>
        <function-ref name="request" scoped="" ref="0x110d06020"/>
        <function-ref name="granted" scoped="" ref="0x110d061b0"/>
        <function-ref name="isOwner" scoped="" ref="0x110d06340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x110d38120" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x110d38120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110d384a0"/>
        <function-ref name="runTask" scoped="" ref="0x110d38630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x110d02ba0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x110d02ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110d01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x110d6f770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x110d6f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110d6faf0"/>
        <function-ref name="toIdle" scoped="" ref="0x110d6fc80"/>
        <function-ref name="isState" scoped="" ref="0x110d6fe10"/>
        <function-ref name="isIdle" scoped="" ref="0x110db0020"/>
        <function-ref name="requestState" scoped="" ref="0x110db01b0"/>
        <function-ref name="forceState" scoped="" ref="0x110db0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x110d6a280" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x110d6a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110d6a600"/>
        <function-ref name="toIdle" scoped="" ref="0x110d6a790"/>
        <function-ref name="isState" scoped="" ref="0x110d6a920"/>
        <function-ref name="isIdle" scoped="" ref="0x110d6aab0"/>
        <function-ref name="requestState" scoped="" ref="0x110d6ac40"/>
        <function-ref name="forceState" scoped="" ref="0x110d6add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110daf020" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110daf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110daf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x110dafb70" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x110dafb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110dae020"/>
        <function-ref name="toIdle" scoped="" ref="0x110dae1b0"/>
        <function-ref name="isState" scoped="" ref="0x110dae340"/>
        <function-ref name="isIdle" scoped="" ref="0x110dae4d0"/>
        <function-ref name="requestState" scoped="" ref="0x110dae660"/>
        <function-ref name="forceState" scoped="" ref="0x110dae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1110f3020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1110f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1110f33a0"/>
        <function-ref name="sendDone" scoped="" ref="0x1110f3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x110d958f0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x110d958f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x110d95c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110d96c40" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110d96c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110d95020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110d951b0"/>
        <function-ref name="request" scoped="" ref="0x110d95340"/>
        <function-ref name="granted" scoped="" ref="0x110d954d0"/>
        <function-ref name="isOwner" scoped="" ref="0x110d95660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1121878f0" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1121878f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112187c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112187e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1121852b0" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1121852b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112185630"/>
        <function-ref name="sendDone" scoped="" ref="0x1121857c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x112185a50" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x112185a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x112185dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1121860c0" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1121860c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x112186440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112189c30" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112189c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112187020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1121871b0"/>
        <function-ref name="request" scoped="" ref="0x112187340"/>
        <function-ref name="granted" scoped="" ref="0x1121874d0"/>
        <function-ref name="isOwner" scoped="" ref="0x112187660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1121866d0" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1121866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x112186a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x112186be0"/>
        <function-ref name="splitRead" scoped="" ref="0x112186d70"/>
        <function-ref name="write" scoped="" ref="0x112185020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x110e105e0" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x110e105e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x110e10960"/>
        <function-ref name="configure" scoped="" ref="0x110e10af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x110e0d510" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x110e0d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110e0d890"/>
        <function-ref name="sendDone" scoped="" ref="0x110e0da20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x110e0a600" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x110e0a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x110e0a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x110e10dd0" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x110e10dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x110e0f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x110e0c370" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x110e0c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110e0c6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110e0c880"/>
        <function-ref name="request" scoped="" ref="0x110e0ca10"/>
        <function-ref name="granted" scoped="" ref="0x110e0cba0"/>
        <function-ref name="isOwner" scoped="" ref="0x110e0cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110e16a20" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110e16a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110e16da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110e12020"/>
        <function-ref name="request" scoped="" ref="0x110e121b0"/>
        <function-ref name="granted" scoped="" ref="0x110e12340"/>
        <function-ref name="isOwner" scoped="" ref="0x110e124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x110e0f480" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x110e0f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x110e0f800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x110e0f990"/>
        <function-ref name="splitRead" scoped="" ref="0x110e0fb20"/>
        <function-ref name="write" scoped="" ref="0x110e0fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x110e066a0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x110e066a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110e06a20"/>
        <function-ref name="txDone" scoped="" ref="0x110e06bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x110e7ac40" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x110e7ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x110e79020"/>
        <function-ref name="configure" scoped="" ref="0x110e791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x110e78700" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x110e78700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110e78aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x110e78c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x110e77e00" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x110e77e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x110e761c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x110e79440" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x110e79440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x110e797c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x110e76490" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x110e76490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x110e76810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110e769a0"/>
        <function-ref name="setUctl" scoped="" ref="0x110e76b30"/>
        <function-ref name="enableUart" scoped="" ref="0x110e76cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x110e76e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x110e75020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x110e751b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x110e75340"/>
        <function-ref name="getUrctl" scoped="" ref="0x110e754d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x110e75660"/>
        <function-ref name="getUmctl" scoped="" ref="0x110e757f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x110e75980"/>
        <function-ref name="setUtctl" scoped="" ref="0x110e75b10"/>
        <function-ref name="getUbr" scoped="" ref="0x110e75da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x110e74020"/>
        <function-ref name="setUmctl" scoped="" ref="0x110e741b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x110e74340"/>
        <function-ref name="isUart" scoped="" ref="0x110e744d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x110e74660"/>
        <function-ref name="isSpi" scoped="" ref="0x110e747f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x110e74980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x110e74b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x110e74ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x110e74e30"/>
        <function-ref name="getMode" scoped="" ref="0x110e73020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x110e733b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x110e73540"/>
        <function-ref name="setUbr" scoped="" ref="0x110e736d0"/>
        <function-ref name="tx" scoped="" ref="0x110e73860"/>
        <function-ref name="getUctl" scoped="" ref="0x110e739f0"/>
        <function-ref name="disableUart" scoped="" ref="0x110e73b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x110e73d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x110e72020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x110e721b0"/>
        <function-ref name="rx" scoped="" ref="0x110e72340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x110e724d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x110e72660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x110e727f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x110e72980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x110e72b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110e715a0" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110e715a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110e71920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110e71ab0"/>
        <function-ref name="led1On" scoped="" ref="0x110e71c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110e71dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110e6f020"/>
        <function-ref name="get" scoped="" ref="0x110e6f1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x110e6f340"/>
        <function-ref name="led2On" scoped="" ref="0x110e6f980"/>
        <function-ref name="set" scoped="" ref="0x110e6f660"/>
        <function-ref name="led2Off" scoped="" ref="0x110e6f4d0"/>
        <function-ref name="led0On" scoped="" ref="0x110e6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x110e77060" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x110e77060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110e77400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110e77590"/>
        <function-ref name="request" scoped="" ref="0x110e77720"/>
        <function-ref name="granted" scoped="" ref="0x110e778b0"/>
        <function-ref name="isOwner" scoped="" ref="0x110e77a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110e7be80" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110e7be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110e7a240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110e7a3d0"/>
        <function-ref name="request" scoped="" ref="0x110e7a560"/>
        <function-ref name="granted" scoped="" ref="0x110e7a6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x110e7a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x110e79a50" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x110e79a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x110e79dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x110e78020"/>
        <function-ref name="splitRead" scoped="" ref="0x110e781b0"/>
        <function-ref name="write" scoped="" ref="0x110e78340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x110e72de0" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x110e72de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110e71180"/>
        <function-ref name="txDone" scoped="" ref="0x110e71310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x110e6fc50" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x110e6fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110e6e020"/>
        <function-ref name="runTask" scoped="" ref="0x110e6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x110ead8a0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x110ead8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110eadc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x110eb03b0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x110eb03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110eb0730"/>
        <function-ref name="txDone" scoped="" ref="0x110eb08c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x110eb7860" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x110eb7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x110eb7be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110eb7d70"/>
        <function-ref name="setUctl" scoped="" ref="0x110eb4020"/>
        <function-ref name="enableUart" scoped="" ref="0x110eb41b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x110eb4340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x110eb44d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x110eb4660"/>
        <function-ref name="getUtctl" scoped="" ref="0x110eb47f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x110eb4980"/>
        <function-ref name="resetUsart" scoped="" ref="0x110eb4b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x110eb4ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x110eb4e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x110eb3020"/>
        <function-ref name="getUbr" scoped="" ref="0x110eb32b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x110eb3440"/>
        <function-ref name="setUmctl" scoped="" ref="0x110eb35d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x110eb3760"/>
        <function-ref name="isUart" scoped="" ref="0x110eb38f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x110eb3a80"/>
        <function-ref name="isSpi" scoped="" ref="0x110eb3c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x110eb3da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x110eb2020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x110eb21b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x110eb2340"/>
        <function-ref name="getMode" scoped="" ref="0x110eb24d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x110eb2860"/>
        <function-ref name="clrIntr" scoped="" ref="0x110eb29f0"/>
        <function-ref name="setUbr" scoped="" ref="0x110eb2b80"/>
        <function-ref name="tx" scoped="" ref="0x110eb2d10"/>
        <function-ref name="getUctl" scoped="" ref="0x110eb1020"/>
        <function-ref name="disableUart" scoped="" ref="0x110eb11b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x110eb1340"/>
        <function-ref name="setModeUart" scoped="" ref="0x110eb14d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x110eb1660"/>
        <function-ref name="rx" scoped="" ref="0x110eb17f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x110eb1980"/>
        <function-ref name="isUartTx" scoped="" ref="0x110eb1b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x110eb1ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x110eb1e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x110eb0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x110ec2670" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x110ec2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ec29f0"/>
        <function-ref name="isInput" scoped="" ref="0x110ec2b80"/>
        <function-ref name="setResistor" scoped="" ref="0x110ec2d10"/>
        <function-ref name="toggle" scoped="" ref="0x110ec1020"/>
        <function-ref name="isOutput" scoped="" ref="0x110ec11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ec1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ec14d0"/>
        <function-ref name="get" scoped="" ref="0x110ec1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ec17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ec1980"/>
        <function-ref name="set" scoped="" ref="0x110ec1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ec1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ec1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ec0120"/>
        <function-ref name="clr" scoped="" ref="0x110ec02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x110ea7dc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x110ea7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110ea6180"/>
        <function-ref name="txDone" scoped="" ref="0x110ea6310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x110ec0670" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x110ec0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ec09f0"/>
        <function-ref name="isInput" scoped="" ref="0x110ec0b80"/>
        <function-ref name="setResistor" scoped="" ref="0x110ec0d10"/>
        <function-ref name="toggle" scoped="" ref="0x110ebf020"/>
        <function-ref name="isOutput" scoped="" ref="0x110ebf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ebf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ebf4d0"/>
        <function-ref name="get" scoped="" ref="0x110ebf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ebf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ebf980"/>
        <function-ref name="set" scoped="" ref="0x110ebfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ebfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ebfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ebe120"/>
        <function-ref name="clr" scoped="" ref="0x110ebe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x110ebe670" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x110ebe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ebe9f0"/>
        <function-ref name="isInput" scoped="" ref="0x110ebeb80"/>
        <function-ref name="setResistor" scoped="" ref="0x110ebed10"/>
        <function-ref name="toggle" scoped="" ref="0x110ebd020"/>
        <function-ref name="isOutput" scoped="" ref="0x110ebd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ebd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ebd4d0"/>
        <function-ref name="get" scoped="" ref="0x110ebd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ebd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ebd980"/>
        <function-ref name="set" scoped="" ref="0x110ebdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ebdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ebde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ebc120"/>
        <function-ref name="clr" scoped="" ref="0x110ebc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x110eab020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x110eab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x110eab3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110eab530"/>
        <function-ref name="setUctl" scoped="" ref="0x110eab6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x110eab850"/>
        <function-ref name="setUrctl" scoped="" ref="0x110eab9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x110eabb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x110eabd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x110eaa020"/>
        <function-ref name="getUrctl" scoped="" ref="0x110eaa1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x110eaa340"/>
        <function-ref name="getUmctl" scoped="" ref="0x110eaa4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x110eaa660"/>
        <function-ref name="setUtctl" scoped="" ref="0x110eaa7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x110eaaa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x110eaac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x110eaada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x110ea9020"/>
        <function-ref name="isUart" scoped="" ref="0x110ea91b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x110ea9340"/>
        <function-ref name="isSpi" scoped="" ref="0x110ea94d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x110ea9660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x110ea97f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x110ea9980"/>
        <function-ref name="enableIntr" scoped="" ref="0x110ea9b10"/>
        <function-ref name="getMode" scoped="" ref="0x110ea9ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x110ea8220"/>
        <function-ref name="clrIntr" scoped="" ref="0x110ea83b0"/>
        <function-ref name="setUbr" scoped="" ref="0x110ea8540"/>
        <function-ref name="tx" scoped="" ref="0x110ea86d0"/>
        <function-ref name="getUctl" scoped="" ref="0x110ea8860"/>
        <function-ref name="disableUart" scoped="" ref="0x110ea89f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x110ea8b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x110ea8d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x110ea7020"/>
        <function-ref name="rx" scoped="" ref="0x110ea71b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x110ea7340"/>
        <function-ref name="isUartTx" scoped="" ref="0x110ea74d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x110ea7660"/>
        <function-ref name="disableSpi" scoped="" ref="0x110ea77f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x110ea7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x110ecb5b0" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x110ecb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x110ecb930"/>
        <function-ref name="getStartByte" scoped="" ref="0x110ecbac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x110ecbc50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x110ecbde0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x110ea4020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x110ea41b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x110ea4340"/>
        <function-ref name="getStopBit" scoped="" ref="0x110ea44d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110ea4660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x110ea47f0"/>
        <function-ref name="getData" scoped="" ref="0x110ea4980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x110ea4b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x110ea4ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x110ea3020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x110ea31b0"/>
        <function-ref name="getIV" scoped="" ref="0x110ea3340"/>
        <function-ref name="enableI2C" scoped="" ref="0x110ea34d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x110ea3660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x110ea37f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x110ea3980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x110ea3b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x110ea3ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x110ea3e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x110eca020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x110eca1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x110eca540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x110eca6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x110eca860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x110eca9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x110ecab80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x110ecad10"/>
        <function-ref name="disableI2C" scoped="" ref="0x110ec9020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x110ec91b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x110ec9340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x110ec94d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x110ec9660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x110ec97f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x110ec9980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x110ec9b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x110ec9ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x110ec9e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x110ec8020"/>
        <function-ref name="setData" scoped="" ref="0x110ec81b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x110ec8340"/>
        <function-ref name="getClockSource" scoped="" ref="0x110ec84d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x110ec8660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x110ec87f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x110ec8980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x110ec8b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x110ec7420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x110ec75b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x110ec7740"/>
        <function-ref name="setStopBit" scoped="" ref="0x110ec78d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x110ec7a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x110ec7bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x110ec7d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x110ec6020"/>
        <function-ref name="setStartByte" scoped="" ref="0x110ec61b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x110ec6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x110ec4670" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x110ec4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ec49f0"/>
        <function-ref name="isInput" scoped="" ref="0x110ec4b80"/>
        <function-ref name="setResistor" scoped="" ref="0x110ec4d10"/>
        <function-ref name="toggle" scoped="" ref="0x110ec3020"/>
        <function-ref name="isOutput" scoped="" ref="0x110ec31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ec3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ec34d0"/>
        <function-ref name="get" scoped="" ref="0x110ec3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ec37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ec3980"/>
        <function-ref name="set" scoped="" ref="0x110ec3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ec3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ec3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ec2120"/>
        <function-ref name="clr" scoped="" ref="0x110ec22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x110ea6750" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x110ea6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110ea6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x110ec6700" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x110ec6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ec6a80"/>
        <function-ref name="isInput" scoped="" ref="0x110ec6c10"/>
        <function-ref name="setResistor" scoped="" ref="0x110ec6da0"/>
        <function-ref name="toggle" scoped="" ref="0x110ec5020"/>
        <function-ref name="isOutput" scoped="" ref="0x110ec51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ec5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ec54d0"/>
        <function-ref name="get" scoped="" ref="0x110ec5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ec57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ec5980"/>
        <function-ref name="set" scoped="" ref="0x110ec5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ec5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ec5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ec4120"/>
        <function-ref name="clr" scoped="" ref="0x110ec42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x11217d2c0" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x11217d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x11217d640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11217d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x112212440" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x112212440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1122127c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x11220b760" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x11220b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x11220bae0"/>
        <function-ref name="configure" scoped="" ref="0x11220bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x112212a50" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x112212a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x112212dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x112211020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1122111b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x112211340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1122114d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x112211660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1122117f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x112211980"/>
        <function-ref name="setClockSource" scoped="" ref="0x112211b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x112211ca0"/>
        <function-ref name="getData" scoped="" ref="0x112211e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x112210020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1122101b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x112210440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1122105d0"/>
        <function-ref name="getIV" scoped="" ref="0x112210760"/>
        <function-ref name="enableI2C" scoped="" ref="0x1122108f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x112210a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x112210c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x112210da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x11220f020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x11220f1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x11220f340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x11220f4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x11220f660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x11220f9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x11220fb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x11220fd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x11220e020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x11220e1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x11220e340"/>
        <function-ref name="disableI2C" scoped="" ref="0x11220e4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x11220e660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x11220e7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x11220e980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x11220eb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x11220eca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x11220ee30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x11220d020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x11220d1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x11220d340"/>
        <function-ref name="setWordMode" scoped="" ref="0x11220d4d0"/>
        <function-ref name="setData" scoped="" ref="0x11220d660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x11220d7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x11220d980"/>
        <function-ref name="getWordMode" scoped="" ref="0x11220db10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x11220dca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x11220de30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x11220c020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x11220c5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x11220c740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x11220c8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x11220ca60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x11220cbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x11220cd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x11220b020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x11220b1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x11220b340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x11220b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x112213c10" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112213c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x112212020"/>
        <function-ref name="txDone" scoped="" ref="0x1122121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11217e640" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11217e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11217e9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11217eb50"/>
        <function-ref name="request" scoped="" ref="0x11217ece0"/>
        <function-ref name="granted" scoped="" ref="0x11217ee70"/>
        <function-ref name="isOwner" scoped="" ref="0x11217d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x11217c2b0" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x11217c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11217c630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11217c7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x11217c950"/>
        <function-ref name="enableUart" scoped="" ref="0x11217cae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x11217cc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11217ce00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11217a020"/>
        <function-ref name="getUtctl" scoped="" ref="0x11217a1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x11217a340"/>
        <function-ref name="resetUsart" scoped="" ref="0x11217a4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x11217a660"/>
        <function-ref name="disableIntr" scoped="" ref="0x11217a7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x11217a980"/>
        <function-ref name="getUbr" scoped="" ref="0x11217ac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11217ada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x112179020"/>
        <function-ref name="isUartRx" scoped="" ref="0x1121791b0"/>
        <function-ref name="isUart" scoped="" ref="0x112179340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1121794d0"/>
        <function-ref name="isSpi" scoped="" ref="0x112179660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1121797f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x112179980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x112179b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x112179ca0"/>
        <function-ref name="getMode" scoped="" ref="0x112179e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x112214220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1122143b0"/>
        <function-ref name="setUbr" scoped="" ref="0x112214540"/>
        <function-ref name="tx" scoped="" ref="0x1122146d0"/>
        <function-ref name="getUctl" scoped="" ref="0x112214860"/>
        <function-ref name="disableUart" scoped="" ref="0x1122149f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x112214b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x112214d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x112213020"/>
        <function-ref name="rx" scoped="" ref="0x1122131b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x112213340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1122134d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x112213660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1122137f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x112213980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x11217da60" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x11217da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x11217dde0"/>
        <function-ref name="userId" scoped="" ref="0x11217c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x110f5b8a0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x110f5b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x110f5bc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x110f5bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x110fac020" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x110fac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x110fac3a0"/>
        <function-ref name="configure" scoped="" ref="0x110fac530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x110f61a80" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x110f61a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110f61e00"/>
        <function-ref name="txDone" scoped="" ref="0x110f5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110f5c5c0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110f5c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110f5c940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110f5cad0"/>
        <function-ref name="request" scoped="" ref="0x110f5cc60"/>
        <function-ref name="granted" scoped="" ref="0x110f5cdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x110f5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x110f5e9a0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x110f5e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f5ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x110fad130" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110fad130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110fad4b0"/>
        <function-ref name="userId" scoped="" ref="0x110fad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x110f964b0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110f964b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110f96830"/>
        <function-ref name="userId" scoped="" ref="0x110f969c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x110fa95c0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x110fa95c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110fa9960"/>
        <function-ref name="txDone" scoped="" ref="0x110fa9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x110f97e70" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x110f97e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f96220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x110f97020" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x110f97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f973c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x110f97690" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x110f97690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110f97a10"/>
        <function-ref name="txDone" scoped="" ref="0x110f97ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111014bf0" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111014bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111013020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1110131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111012930" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111012930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111012cd0"/>
        <function-ref name="configure" scoped="" ref="0x111012e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x111013400" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111013400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111013780"/>
        <function-ref name="requested" scoped="" ref="0x111013910"/>
        <function-ref name="granted" scoped="" ref="0x111013aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x111013c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111013dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111015e60" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111015e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111014230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1110143c0"/>
        <function-ref name="request" scoped="" ref="0x111014550"/>
        <function-ref name="granted" scoped="" ref="0x1110146e0"/>
        <function-ref name="isOwner" scoped="" ref="0x111014870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x111012060" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111012060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1110123e0"/>
        <function-ref name="userId" scoped="" ref="0x111012570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112246140" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112246140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1122464c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x112246750" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x112246750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x112246ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x112246c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x112246df0"/>
        <function-ref name="dequeue" scoped="" ref="0x112245020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112242850" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112242850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112242bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112242d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x112240590" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x112240590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x112240930"/>
        <function-ref name="configure" scoped="" ref="0x112240ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x112240d50" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x112240d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x11223f100"/>
        <function-ref name="isEmpty" scoped="" ref="0x11223f290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x11223f420"/>
        <function-ref name="dequeue" scoped="" ref="0x11223f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x112241020" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112241020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1122413a0"/>
        <function-ref name="requested" scoped="" ref="0x112241530"/>
        <function-ref name="granted" scoped="" ref="0x1122416c0"/>
        <function-ref name="isOwner" scoped="" ref="0x112241850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1122419e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x11223f800" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x11223f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x11223fb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x11223fd10"/>
        <function-ref name="led1On" scoped="" ref="0x11223e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x11223e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x11223e340"/>
        <function-ref name="get" scoped="" ref="0x11223e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x11223e660"/>
        <function-ref name="led0On" scoped="" ref="0x11223eca0"/>
        <function-ref name="set" scoped="" ref="0x11223e980"/>
        <function-ref name="led2On" scoped="" ref="0x11223e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x11223eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112243970" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112243970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112243d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112242020"/>
        <function-ref name="request" scoped="" ref="0x1122421b0"/>
        <function-ref name="granted" scoped="" ref="0x112242340"/>
        <function-ref name="isOwner" scoped="" ref="0x1122424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x112241c30" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112241c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x112240020"/>
        <function-ref name="userId" scoped="" ref="0x1122401b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x11223d020" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x11223d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11223d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x11223d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x11100a870" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x11100a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x11100abf0"/>
        <function-ref name="getStartByte" scoped="" ref="0x11100ad80"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x111007020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1110071b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x111007340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1110074d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x111007660"/>
        <function-ref name="getStopBit" scoped="" ref="0x1110077f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x111007980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111007b10"/>
        <function-ref name="getData" scoped="" ref="0x111007ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111007e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111006020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1110062b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x111006440"/>
        <function-ref name="getIV" scoped="" ref="0x1110065d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x111006760"/>
        <function-ref name="setStartBit" scoped="" ref="0x1110068f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111006a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x111006c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x111006da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111005020"/>
        <function-ref name="isI2C" scoped="" ref="0x1110051b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111005340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1110054d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x111005860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1110059f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x111005b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x111005d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x111004020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1110041b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x111004340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1110044d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x111004660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1110047f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x111004980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x111004b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x111004ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x111004e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x111003020"/>
        <function-ref name="getStartBit" scoped="" ref="0x1110031b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x111003340"/>
        <function-ref name="setData" scoped="" ref="0x1110034d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x111003660"/>
        <function-ref name="getClockSource" scoped="" ref="0x1110037f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x111003980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x111003b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x111003ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x111003e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x111002420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1110025b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x111002740"/>
        <function-ref name="setStopBit" scoped="" ref="0x1110028d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x111002a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x111002bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x111002d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x111001020"/>
        <function-ref name="setStartByte" scoped="" ref="0x1110011b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x111001340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x11104b250" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x11104b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11104b5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11104b760"/>
        <function-ref name="setUctl" scoped="" ref="0x11104b8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x11104ba80"/>
        <function-ref name="setUrctl" scoped="" ref="0x11104bc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11104bda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11104a020"/>
        <function-ref name="getUtctl" scoped="" ref="0x11104a1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x11104a340"/>
        <function-ref name="resetUsart" scoped="" ref="0x11104a4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x11104a660"/>
        <function-ref name="disableIntr" scoped="" ref="0x11104a7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x11104a980"/>
        <function-ref name="getUbr" scoped="" ref="0x11104ac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11104ada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x111049020"/>
        <function-ref name="isUartRx" scoped="" ref="0x1110491b0"/>
        <function-ref name="isUart" scoped="" ref="0x111049340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1110494d0"/>
        <function-ref name="isSpi" scoped="" ref="0x111049660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1110497f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111049980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x111049b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x111049ca0"/>
        <function-ref name="getMode" scoped="" ref="0x111049e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111048220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1110483b0"/>
        <function-ref name="setUbr" scoped="" ref="0x111048540"/>
        <function-ref name="tx" scoped="" ref="0x1110486d0"/>
        <function-ref name="getUctl" scoped="" ref="0x111048860"/>
        <function-ref name="disableUart" scoped="" ref="0x1110489f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x111048b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x111048d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111047020"/>
        <function-ref name="rx" scoped="" ref="0x1110471b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111047340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1110474d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111047660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1110477f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111047980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x111045cb0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x111045cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110440a0"/>
        <function-ref name="isInput" scoped="" ref="0x111044230"/>
        <function-ref name="setResistor" scoped="" ref="0x1110443c0"/>
        <function-ref name="toggle" scoped="" ref="0x111044550"/>
        <function-ref name="isOutput" scoped="" ref="0x1110446e0"/>
        <function-ref name="getResistor" scoped="" ref="0x111044870"/>
        <function-ref name="makeOutput" scoped="" ref="0x111044a00"/>
        <function-ref name="get" scoped="" ref="0x111044b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111044d20"/>
        <function-ref name="getRaw" scoped="" ref="0x111043020"/>
        <function-ref name="set" scoped="" ref="0x1110431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111043340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111043760"/>
        <function-ref name="clr" scoped="" ref="0x1110438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x111052430" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x111052430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1110527b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x111052940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x111052ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x111052c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x111052df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x111051020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1110511b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x111051340"/>
        <function-ref name="setClockSource" scoped="" ref="0x1110514d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111051660"/>
        <function-ref name="getData" scoped="" ref="0x1110517f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111051980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111051b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x111051da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x111050020"/>
        <function-ref name="getIV" scoped="" ref="0x1110501b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x111050340"/>
        <function-ref name="setStartBit" scoped="" ref="0x1110504d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111050660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1110507f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x111050980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111050b10"/>
        <function-ref name="isI2C" scoped="" ref="0x111050ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111050e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x11104f020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x11104f3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x11104f540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x11104f6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x11104f860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x11104f9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x11104fb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x11104fd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x11104e020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x11104e1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x11104e340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x11104e4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x11104e660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x11104e7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x11104e980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x11104eb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x11104eca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x11104ee30"/>
        <function-ref name="setData" scoped="" ref="0x11104d020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x11104d1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x11104d340"/>
        <function-ref name="getWordMode" scoped="" ref="0x11104d4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x11104d660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x11104d7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x11104d980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x11104c020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x11104c1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x11104c340"/>
        <function-ref name="setStopBit" scoped="" ref="0x11104c4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x11104c660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x11104c7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x11104c980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x11104cb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x11104cca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x11104ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x111047d40" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x111047d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110460e0"/>
        <function-ref name="isInput" scoped="" ref="0x111046270"/>
        <function-ref name="setResistor" scoped="" ref="0x111046400"/>
        <function-ref name="toggle" scoped="" ref="0x111046590"/>
        <function-ref name="isOutput" scoped="" ref="0x111046720"/>
        <function-ref name="getResistor" scoped="" ref="0x1110468b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111046a40"/>
        <function-ref name="get" scoped="" ref="0x111046bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111046d60"/>
        <function-ref name="getRaw" scoped="" ref="0x111045020"/>
        <function-ref name="set" scoped="" ref="0x1110451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111045340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111045760"/>
        <function-ref name="clr" scoped="" ref="0x1110458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111140c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111140c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113f210"/>
        <function-ref name="write" scoped="" ref="0x11113f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x11114bda0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x11114bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11114a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111144b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111144b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111143020"/>
        <function-ref name="write" scoped="" ref="0x1111431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x11113e670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11113e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113e9f0"/>
        <function-ref name="write" scoped="" ref="0x11113eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111137e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111137e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111136210"/>
        <function-ref name="write" scoped="" ref="0x1111363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x11113ee50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x11113ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113d210"/>
        <function-ref name="write" scoped="" ref="0x11113d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1111822f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1111822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111182670"/>
        <function-ref name="write" scoped="" ref="0x111182800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1111842f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1111842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111184670"/>
        <function-ref name="write" scoped="" ref="0x111184800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111149120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111149120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111494a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111132670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111132670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111329f0"/>
        <function-ref name="write" scoped="" ref="0x111132b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1111852f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1111852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111185670"/>
        <function-ref name="write" scoped="" ref="0x111185800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111143c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111143c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111141020"/>
        <function-ref name="write" scoped="" ref="0x1111411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111141c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111141c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111140020"/>
        <function-ref name="write" scoped="" ref="0x1111401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111138670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111138670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111389f0"/>
        <function-ref name="write" scoped="" ref="0x111138b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x11113ae50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x11113ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111139210"/>
        <function-ref name="write" scoped="" ref="0x1111393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x11113d670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11113d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113d9f0"/>
        <function-ref name="write" scoped="" ref="0x11113db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x11114c760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11114c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11114cae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x11114cc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x11114ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111147aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111147aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111147e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111146120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111146120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111465a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111131a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111131a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111131df0"/>
        <function-ref name="write" scoped="" ref="0x111188020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111146870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111146870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111146bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111185ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111185ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111185e50"/>
        <function-ref name="write" scoped="" ref="0x111184020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111149dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111149dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111147180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111133e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111133e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111132210"/>
        <function-ref name="write" scoped="" ref="0x1111323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x111141480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x111141480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111141800"/>
        <function-ref name="write" scoped="" ref="0x111141990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x111143480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111143480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111143800"/>
        <function-ref name="write" scoped="" ref="0x111143990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x11114b750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x11114b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11114bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111134e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111134e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111133210"/>
        <function-ref name="write" scoped="" ref="0x1111333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111136670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111136670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111369f0"/>
        <function-ref name="write" scoped="" ref="0x111136b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111133670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111133670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111339f0"/>
        <function-ref name="write" scoped="" ref="0x111133b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111183ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111183ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111183e50"/>
        <function-ref name="write" scoped="" ref="0x111182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111184ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111184ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111184e50"/>
        <function-ref name="write" scoped="" ref="0x111183020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111139670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111139670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111399f0"/>
        <function-ref name="write" scoped="" ref="0x111139b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111136e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111136e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111134210"/>
        <function-ref name="write" scoped="" ref="0x1111343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111187ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111187ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111187e50"/>
        <function-ref name="write" scoped="" ref="0x111185020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x11113b670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x11113b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113b9f0"/>
        <function-ref name="write" scoped="" ref="0x11113bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111182ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111182ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111182e50"/>
        <function-ref name="writeDone" scoped="" ref="0x111181020"/>
        <function-ref name="write" scoped="" ref="0x1111811b0"/>
        <function-ref name="beginRead" scoped="" ref="0x111181340"/>
        <function-ref name="readDone" scoped="" ref="0x1111814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x11114b100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x11114b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11114b480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x111144370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x111144370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111446f0"/>
        <function-ref name="write" scoped="" ref="0x111144880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111140480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111140480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111140800"/>
        <function-ref name="write" scoped="" ref="0x111140990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111138e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111138e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111137210"/>
        <function-ref name="write" scoped="" ref="0x1111373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x11113de50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11113de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113b210"/>
        <function-ref name="write" scoped="" ref="0x11113b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111137670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111137670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111379f0"/>
        <function-ref name="write" scoped="" ref="0x111137b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11113f670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11113f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113f9f0"/>
        <function-ref name="write" scoped="" ref="0x11113fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x11114a450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x11114a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11114a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11113fe50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11113fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113e210"/>
        <function-ref name="write" scoped="" ref="0x11113e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11114da80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11114da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11114de00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11114c020"/>
        <function-ref name="request" scoped="" ref="0x11114c1b0"/>
        <function-ref name="granted" scoped="" ref="0x11114c340"/>
        <function-ref name="isOwner" scoped="" ref="0x11114c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111145020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111145020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111145cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111145cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111440a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1111872f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1111872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111187670"/>
        <function-ref name="write" scoped="" ref="0x111187800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111188ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111188ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111188e50"/>
        <function-ref name="write" scoped="" ref="0x111187020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111147450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111147450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111477d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1111882f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1111882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111188670"/>
        <function-ref name="write" scoped="" ref="0x111188800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1111832f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1111832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111183670"/>
        <function-ref name="write" scoped="" ref="0x111183800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111139e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111139e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111138210"/>
        <function-ref name="write" scoped="" ref="0x1111383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111134670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111134670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111349f0"/>
        <function-ref name="write" scoped="" ref="0x111134b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x11114aaa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x11114aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11114ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111149770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111149770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111149af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x11113be50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x11113be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113a210"/>
        <function-ref name="write" scoped="" ref="0x11113a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111145670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111145670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111459f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x11113a670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x11113a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11113a9f0"/>
        <function-ref name="write" scoped="" ref="0x11113ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111132e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111132e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111131610"/>
        <function-ref name="write" scoped="" ref="0x1111317a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1111817a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1111817a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111181b20"/>
        <function-ref name="writeDone" scoped="" ref="0x111181cb0"/>
        <function-ref name="write" scoped="" ref="0x111181e40"/>
        <function-ref name="beginRead" scoped="" ref="0x111180020"/>
        <function-ref name="readDone" scoped="" ref="0x1111801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x11116cc60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x11116cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116a210"/>
        <function-ref name="write" scoped="" ref="0x11116a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111176da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111176da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111175180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x11116fb50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x11116fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116e020"/>
        <function-ref name="write" scoped="" ref="0x11116e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111169670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111169670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111699f0"/>
        <function-ref name="write" scoped="" ref="0x111169b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111162e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111162e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111161210"/>
        <function-ref name="write" scoped="" ref="0x1111613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111169e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111169e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111168210"/>
        <function-ref name="write" scoped="" ref="0x1111683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1111ae2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1111ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111ae670"/>
        <function-ref name="write" scoped="" ref="0x1111ae800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1111b12f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1111b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b1670"/>
        <function-ref name="write" scoped="" ref="0x1111b1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111174120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111174120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111744a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x11115e670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x11115e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115e9f0"/>
        <function-ref name="write" scoped="" ref="0x11115eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1111b22f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1111b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b2670"/>
        <function-ref name="write" scoped="" ref="0x1111b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x11116ec60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x11116ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116d020"/>
        <function-ref name="write" scoped="" ref="0x11116d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x11116dc60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11116dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116c020"/>
        <function-ref name="write" scoped="" ref="0x11116c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111163670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111163670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111639f0"/>
        <function-ref name="write" scoped="" ref="0x111163b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x111166e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x111166e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111165210"/>
        <function-ref name="write" scoped="" ref="0x1111653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111168670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111168670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111689f0"/>
        <function-ref name="write" scoped="" ref="0x111168b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111178760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111178760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111178ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111178c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111178e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111173aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111173aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111173e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111172120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111172120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111725a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x1111b5a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1111b5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b5df0"/>
        <function-ref name="write" scoped="" ref="0x1111b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111172870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111172870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111172bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x1111b2ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1111b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b2e50"/>
        <function-ref name="write" scoped="" ref="0x1111b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111174dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111174dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111173180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x11115fe50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x11115fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115e210"/>
        <function-ref name="write" scoped="" ref="0x11115e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11116d480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11116d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116d800"/>
        <function-ref name="write" scoped="" ref="0x11116d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x11116e480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11116e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116e800"/>
        <function-ref name="write" scoped="" ref="0x11116e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111176750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111176750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111176ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111160e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111160e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115f210"/>
        <function-ref name="write" scoped="" ref="0x11115f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111161670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111161670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111619f0"/>
        <function-ref name="write" scoped="" ref="0x111161b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x11115f670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x11115f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11115f9f0"/>
        <function-ref name="write" scoped="" ref="0x11115fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x1111b0ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1111b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b0e50"/>
        <function-ref name="write" scoped="" ref="0x1111ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x1111b1ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1111b1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b1e50"/>
        <function-ref name="write" scoped="" ref="0x1111b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111165670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111165670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111659f0"/>
        <function-ref name="write" scoped="" ref="0x111165b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111161e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111161e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111160210"/>
        <function-ref name="write" scoped="" ref="0x1111603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1111b3ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x1111b3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b3e50"/>
        <function-ref name="write" scoped="" ref="0x1111b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111167670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111167670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111679f0"/>
        <function-ref name="write" scoped="" ref="0x111167b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1111aead0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x1111aead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1111aee50"/>
        <function-ref name="writeDone" scoped="" ref="0x1111ad020"/>
        <function-ref name="write" scoped="" ref="0x1111ad1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x1111ad340"/>
        <function-ref name="readDone" scoped="" ref="0x1111ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111176100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111176100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111176480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x11116f370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x11116f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116f6f0"/>
        <function-ref name="write" scoped="" ref="0x11116f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x11116c480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x11116c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116c800"/>
        <function-ref name="write" scoped="" ref="0x11116c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111163e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111163e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111162210"/>
        <function-ref name="write" scoped="" ref="0x1111623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x111168e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x111168e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111167210"/>
        <function-ref name="write" scoped="" ref="0x1111673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111162670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111162670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111629f0"/>
        <function-ref name="write" scoped="" ref="0x111162b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11116a670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11116a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11116a9f0"/>
        <function-ref name="write" scoped="" ref="0x11116ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111175450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111175450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111757d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11116ae50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11116ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111169210"/>
        <function-ref name="write" scoped="" ref="0x1111693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1111799e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1111799e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111179d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111178020"/>
        <function-ref name="request" scoped="" ref="0x1111781b0"/>
        <function-ref name="granted" scoped="" ref="0x111178340"/>
        <function-ref name="isOwner" scoped="" ref="0x1111784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111170020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111170020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111170cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111170cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11116f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1111b32f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1111b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b3670"/>
        <function-ref name="write" scoped="" ref="0x1111b3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1111b4ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1111b4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b4e50"/>
        <function-ref name="write" scoped="" ref="0x1111b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111173450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111173450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111737d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1111b42f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1111b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b4670"/>
        <function-ref name="write" scoped="" ref="0x1111b4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1111b02f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1111b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b0670"/>
        <function-ref name="write" scoped="" ref="0x1111b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111165e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111165e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111163210"/>
        <function-ref name="write" scoped="" ref="0x1111633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111160670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111160670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111609f0"/>
        <function-ref name="write" scoped="" ref="0x111160b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111175aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111175aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111175e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111174770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111174770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111174af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x111167e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x111167e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111166210"/>
        <function-ref name="write" scoped="" ref="0x1111663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111170670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111170670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1111709f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111166670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111166670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111669f0"/>
        <function-ref name="write" scoped="" ref="0x111166b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x11115ee50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x11115ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b5610"/>
        <function-ref name="write" scoped="" ref="0x1111b57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1111ad7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1111ad7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1111adb20"/>
        <function-ref name="writeDone" scoped="" ref="0x1111adcb0"/>
        <function-ref name="write" scoped="" ref="0x1111ade40"/>
        <function-ref name="beginRead" scoped="" ref="0x1111ac020"/>
        <function-ref name="readDone" scoped="" ref="0x1111ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x1111a5b20" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1111a5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1111a2020"/>
        <function-ref name="changed" scoped="" ref="0x1111a21b0"/>
        <function-ref name="amGroup" scoped="" ref="0x1111a2340"/>
        <function-ref name="setAddress" scoped="" ref="0x1111a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x1111a4d20" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1111a4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x11118e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x11118a310" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x11118a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x11118a690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x1111e1880" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1111e1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111e1c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x1111d6020" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1111d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x1111ccbd0" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1111ccbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111cf020"/>
        <function-ref name="write" scoped="" ref="0x1111cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x1111cf530" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x1111cf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1111cf8b0"/>
        <function-ref name="stop" scoped="" ref="0x1111cfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x1111d0140" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1111d0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111d04c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x1111d5c50" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1111d5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111bc020"/>
        <function-ref name="write" scoped="" ref="0x1111bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x1111bc540" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x1111bc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111bc8c0"/>
        <function-ref name="isInput" scoped="" ref="0x1111bca50"/>
        <function-ref name="toggle" scoped="" ref="0x1111bcbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x1111bcd70"/>
        <function-ref name="get" scoped="" ref="0x1111bb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111bb1b0"/>
        <function-ref name="set" scoped="" ref="0x1111bb340"/>
        <function-ref name="clr" scoped="" ref="0x1111bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x11120d910" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x11120d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x111210780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x1111b8150" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1111b8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111b84d0"/>
        <function-ref name="write" scoped="" ref="0x1111b8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x1111b89f0" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x1111b89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111b8d70"/>
        <function-ref name="isInput" scoped="" ref="0x1111b7020"/>
        <function-ref name="toggle" scoped="" ref="0x1111b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1111b7340"/>
        <function-ref name="get" scoped="" ref="0x1111b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111b7660"/>
        <function-ref name="set" scoped="" ref="0x1111b77f0"/>
        <function-ref name="clr" scoped="" ref="0x1111b7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x1111bac90" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1111bac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1111edac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x1111eba90" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1111eba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1111ea8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x111236020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111236020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111236e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111235800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111235340"/>
        <function-ref name="overflow" scoped="" ref="0x111235cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x111231530" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111231530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1112303d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111230d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111230890"/>
        <function-ref name="overflow" scoped="" ref="0x11122e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x111229020" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x111229020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1112293a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x111229530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1112296c0"/>
        <function-ref name="get" scoped="" ref="0x111229850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1112299e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111229b70"/>
        <function-ref name="getMode" scoped="" ref="0x111229d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111228020"/>
        <function-ref name="overflow" scoped="" ref="0x1112281b0"/>
        <function-ref name="setMode" scoped="" ref="0x111228340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1112284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x11122de50" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11122de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297830"/>
            <typename><typedef-ref name="TMicro" ref="0x110297ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11122cca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11122b670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11122b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x11122bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x1111bd590" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x1111bd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111bd910"/>
        <function-ref name="isInput" scoped="" ref="0x1111bdaa0"/>
        <function-ref name="toggle" scoped="" ref="0x1111bdc30"/>
        <function-ref name="isOutput" scoped="" ref="0x1111bddc0"/>
        <function-ref name="get" scoped="" ref="0x111224020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112241b0"/>
        <function-ref name="set" scoped="" ref="0x111224340"/>
        <function-ref name="clr" scoped="" ref="0x1112244d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x111222c50" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x111222c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111221020"/>
        <function-ref name="isInput" scoped="" ref="0x1112211b0"/>
        <function-ref name="setResistor" scoped="" ref="0x111221340"/>
        <function-ref name="toggle" scoped="" ref="0x1112214d0"/>
        <function-ref name="isOutput" scoped="" ref="0x111221660"/>
        <function-ref name="getResistor" scoped="" ref="0x1112217f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111221980"/>
        <function-ref name="get" scoped="" ref="0x111221b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111221ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x111221e30"/>
        <function-ref name="set" scoped="" ref="0x111220020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1112201b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111220340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1112205d0"/>
        <function-ref name="clr" scoped="" ref="0x111220760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1112239e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1112239e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111223d60"/>
        <function-ref name="isInput" scoped="" ref="0x111222020"/>
        <function-ref name="toggle" scoped="" ref="0x1112221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x111222340"/>
        <function-ref name="get" scoped="" ref="0x1112224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111222660"/>
        <function-ref name="set" scoped="" ref="0x1112227f0"/>
        <function-ref name="clr" scoped="" ref="0x111222980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111225a10" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111225a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111225d90"/>
        <function-ref name="stop" scoped="" ref="0x11121b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x11126acb0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x11126acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1112690a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x111269230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1112693c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x111269550"/>
        <function-ref name="setCca" scoped="" ref="0x1112696e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x111269870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x111266990" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x111266990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111266d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x11126a020" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x11126a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11126a3a0"/>
        <function-ref name="cancel" scoped="" ref="0x11126a530"/>
        <function-ref name="modify" scoped="" ref="0x11126a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x11126a850"/>
        <function-ref name="resend" scoped="" ref="0x11126a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11126d6c0" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11126d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11126da40"/>
        <function-ref name="stop" scoped="" ref="0x11126dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x111268150" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x111268150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1112684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x11125b970" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x11125b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x11125bcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x11125be80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x11125a030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x11125a1c0"/>
        <function-ref name="setCca" scoped="" ref="0x11125a350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x11125a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x111253950" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x111253950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111250020"/>
        <function-ref name="clear" scoped="" ref="0x111250750"/>
        <function-ref name="isValid" scoped="" ref="0x111252780"/>
        <function-ref name="set" scoped="" ref="0x111250e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x111298020" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111298020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112983a0"/>
        <function-ref name="write" scoped="" ref="0x111298530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x111298890" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111298890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111298c10"/>
        <function-ref name="write" scoped="" ref="0x111298da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x11125a900" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x11125a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x11125ac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x11129c530" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x11129c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11129c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x11124e880" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x11124e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x11124ec00"/>
        <function-ref name="disable" scoped="" ref="0x11124ed90"/>
        <function-ref name="captured" scoped="" ref="0x11124d020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x11124d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x111259ae0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x111259ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111255390"/>
        <function-ref name="fired" scoped="" ref="0x111257360"/>
        <function-ref name="startAt" scoped="" ref="0x111257ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x111257820"/>
        <function-ref name="getAlarm" scoped="" ref="0x111255850"/>
        <function-ref name="start" scoped="" ref="0x111258970"/>
        <function-ref name="stop" scoped="" ref="0x111258e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x111255d00" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111255d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1112540a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x111254230"/>
        <function-ref name="getRssi" scoped="" ref="0x1112543c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x111254550"/>
        <function-ref name="getPower" scoped="" ref="0x1112546e0"/>
        <function-ref name="getLqi" scoped="" ref="0x111254870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x111241550" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111241550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112418d0"/>
        <function-ref name="write" scoped="" ref="0x111241a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x111241e00" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111241e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11129d1c0"/>
        <function-ref name="write" scoped="" ref="0x11129d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x111292d40" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x111292d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1112950e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x111295270"/>
        <function-ref name="sfd" scoped="" ref="0x111295400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11125cbc0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11125cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11125b020"/>
        <function-ref name="cancel" scoped="" ref="0x11125b1b0"/>
        <function-ref name="modify" scoped="" ref="0x11125b340"/>
        <function-ref name="sendDone" scoped="" ref="0x11125b4d0"/>
        <function-ref name="resend" scoped="" ref="0x11125b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x111243d10" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111243d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1112420e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111242270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111242400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x11129cc60" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x11129cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11129b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x111246820" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x111246820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111246ba0"/>
        <function-ref name="isInput" scoped="" ref="0x111246d30"/>
        <function-ref name="toggle" scoped="" ref="0x111245020"/>
        <function-ref name="isOutput" scoped="" ref="0x1112451b0"/>
        <function-ref name="get" scoped="" ref="0x111245340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112454d0"/>
        <function-ref name="set" scoped="" ref="0x111245660"/>
        <function-ref name="clr" scoped="" ref="0x1112457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11125dc60" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11125dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11125c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x111254bb0" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x111254bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x111253020"/>
        <function-ref name="getHeader" scoped="" ref="0x1112531b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x111253340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x111248be0" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111248be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11124e020"/>
        <function-ref name="isSet" scoped="" ref="0x11124e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x11124e340"/>
        <function-ref name="set" scoped="" ref="0x11124e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x11129b3e0" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11129b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11129b960"/>
        <function-ref name="write" scoped="" ref="0x11129baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x111243020" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x111243020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1112433a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111243530"/>
        <function-ref name="request" scoped="" ref="0x1112436c0"/>
        <function-ref name="granted" scoped="" ref="0x111243850"/>
        <function-ref name="isOwner" scoped="" ref="0x1112439e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x11124d500" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x11124d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11124d980"/>
        <function-ref name="isInput" scoped="" ref="0x11124db10"/>
        <function-ref name="toggle" scoped="" ref="0x11124dca0"/>
        <function-ref name="isOutput" scoped="" ref="0x11124de30"/>
        <function-ref name="get" scoped="" ref="0x111246020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112461b0"/>
        <function-ref name="set" scoped="" ref="0x111246340"/>
        <function-ref name="clr" scoped="" ref="0x1112464d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x111297130" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111297130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112974b0"/>
        <function-ref name="write" scoped="" ref="0x111297640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x1112979c0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1112979c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111297d40"/>
        <function-ref name="write" scoped="" ref="0x111296020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x11129d6d0" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x11129d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11129da50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x111245b40" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x111245b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111244020"/>
        <function-ref name="isInput" scoped="" ref="0x1112441b0"/>
        <function-ref name="toggle" scoped="" ref="0x111244340"/>
        <function-ref name="isOutput" scoped="" ref="0x1112444d0"/>
        <function-ref name="get" scoped="" ref="0x111244660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112447f0"/>
        <function-ref name="set" scoped="" ref="0x111244980"/>
        <function-ref name="clr" scoped="" ref="0x111244b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1112956c0" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1112956c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111295a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111295bd0"/>
        <function-ref name="led1On" scoped="" ref="0x111295d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111294020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1112941b0"/>
        <function-ref name="get" scoped="" ref="0x111294340"/>
        <function-ref name="led1Off" scoped="" ref="0x1112944d0"/>
        <function-ref name="led2Off" scoped="" ref="0x111294b10"/>
        <function-ref name="set" scoped="" ref="0x111294660"/>
        <function-ref name="led0On" scoped="" ref="0x1112947f0"/>
        <function-ref name="led2On" scoped="" ref="0x111294980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x1112995e0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1112995e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111299960"/>
        <function-ref name="write" scoped="" ref="0x111299af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11125c320" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11125c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11125c6a0"/>
        <function-ref name="stop" scoped="" ref="0x11125c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x111242780" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111242780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111242b00"/>
        <function-ref name="writeDone" scoped="" ref="0x111242c90"/>
        <function-ref name="write" scoped="" ref="0x111242e20"/>
        <function-ref name="beginRead" scoped="" ref="0x111241020"/>
        <function-ref name="readDone" scoped="" ref="0x1112411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x11129dde0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x11129dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11129c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x11129be80" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x11129be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111299220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x1112590f0" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x1112590f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111259470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111313c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111313c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111311210"/>
        <function-ref name="write" scoped="" ref="0x1113113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x11131c020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x11131c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111316c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111316c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111315020"/>
        <function-ref name="write" scoped="" ref="0x1113151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111310670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111310670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113109f0"/>
        <function-ref name="write" scoped="" ref="0x111310b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111309e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111309e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111308210"/>
        <function-ref name="write" scoped="" ref="0x1113083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111310e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111310e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130f210"/>
        <function-ref name="write" scoped="" ref="0x11130f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1112fc2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1112fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112fc670"/>
        <function-ref name="write" scoped="" ref="0x1112fc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1112ff2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1112ff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112ff670"/>
        <function-ref name="write" scoped="" ref="0x1112ff800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x11131b370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x11131b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111305670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111305670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113059f0"/>
        <function-ref name="write" scoped="" ref="0x111305b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1113002f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1113002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111300670"/>
        <function-ref name="write" scoped="" ref="0x111300800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111315c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111315c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111314020"/>
        <function-ref name="write" scoped="" ref="0x1113141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111314c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111314c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111313020"/>
        <function-ref name="write" scoped="" ref="0x1113131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x11130a670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x11130a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130a9f0"/>
        <function-ref name="write" scoped="" ref="0x11130ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x11130de50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x11130de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130c210"/>
        <function-ref name="write" scoped="" ref="0x11130c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x11130f670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11130f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130f9f0"/>
        <function-ref name="write" scoped="" ref="0x11130fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x11131f8f0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11131f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11131fc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x11131fe00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x11131d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x11131ad00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x11131ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1113190a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111319370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111319370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1113197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111303a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111303a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111303df0"/>
        <function-ref name="write" scoped="" ref="0x111302020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111319ac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111319ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111319e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111300ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111300ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111300e50"/>
        <function-ref name="write" scoped="" ref="0x1112ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x11131a060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x11131a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111306e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111306e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111305210"/>
        <function-ref name="write" scoped="" ref="0x1113053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x111314480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x111314480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111314800"/>
        <function-ref name="write" scoped="" ref="0x111314990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x111315480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111315480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111315800"/>
        <function-ref name="write" scoped="" ref="0x111315990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x11131d940" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x11131d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111307e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111307e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111306210"/>
        <function-ref name="write" scoped="" ref="0x1113063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111308670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111308670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113089f0"/>
        <function-ref name="write" scoped="" ref="0x111308b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111306670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111306670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113069f0"/>
        <function-ref name="write" scoped="" ref="0x111306b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x1112fead0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1112fead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112fee50"/>
        <function-ref name="write" scoped="" ref="0x1112fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x1112ffad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1112ffad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112ffe50"/>
        <function-ref name="write" scoped="" ref="0x1112fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x11130c670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x11130c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130c9f0"/>
        <function-ref name="write" scoped="" ref="0x11130cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111308e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111308e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111307210"/>
        <function-ref name="write" scoped="" ref="0x1113073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111301ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111301ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111301e50"/>
        <function-ref name="write" scoped="" ref="0x111300020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x11130e670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x11130e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130e9f0"/>
        <function-ref name="write" scoped="" ref="0x11130eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1112fcad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x1112fcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1112fce50"/>
        <function-ref name="writeDone" scoped="" ref="0x11135b020"/>
        <function-ref name="write" scoped="" ref="0x11135b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x11135b340"/>
        <function-ref name="readDone" scoped="" ref="0x11135b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x11131d2f0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x11131d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x111316490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x111316490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111316810"/>
        <function-ref name="write" scoped="" ref="0x1113169a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111313480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111313480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111313800"/>
        <function-ref name="write" scoped="" ref="0x111313990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x11130ae50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x11130ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111309210"/>
        <function-ref name="write" scoped="" ref="0x1113093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x11130fe50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11130fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130e210"/>
        <function-ref name="write" scoped="" ref="0x11130e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111309670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111309670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113099f0"/>
        <function-ref name="write" scoped="" ref="0x111309b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111311670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111311670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113119f0"/>
        <function-ref name="write" scoped="" ref="0x111311b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x11131c670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x11131c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x111311e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111311e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111310210"/>
        <function-ref name="write" scoped="" ref="0x1113103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111320c30" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111320c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11131f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11131f1b0"/>
        <function-ref name="request" scoped="" ref="0x11131f340"/>
        <function-ref name="granted" scoped="" ref="0x11131f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x11131f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111317160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111317160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1113174e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111317e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111317e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1113161c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1113012f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1113012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111301670"/>
        <function-ref name="write" scoped="" ref="0x111301800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111302ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111302ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111302e50"/>
        <function-ref name="write" scoped="" ref="0x111301020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x11131a6b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x11131a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1113022f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1113022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111302670"/>
        <function-ref name="write" scoped="" ref="0x111302800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1112fe2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1112fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1112fe670"/>
        <function-ref name="write" scoped="" ref="0x1112fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x11130ce50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x11130ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130a210"/>
        <function-ref name="write" scoped="" ref="0x11130a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111307670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111307670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113079f0"/>
        <function-ref name="write" scoped="" ref="0x111307b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x11131ccc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x11131ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x11131b9c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x11131b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11131bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x11130ee50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x11130ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130d210"/>
        <function-ref name="write" scoped="" ref="0x11130d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x1113177b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1113177b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111317b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x11130d670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x11130d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11130d9f0"/>
        <function-ref name="write" scoped="" ref="0x11130db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111305e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111305e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111303610"/>
        <function-ref name="write" scoped="" ref="0x1113037a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x11135b7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x11135b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11135bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x11135bcb0"/>
        <function-ref name="write" scoped="" ref="0x11135be40"/>
        <function-ref name="beginRead" scoped="" ref="0x11135a020"/>
        <function-ref name="readDone" scoped="" ref="0x11135a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x11134fdf0" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x11134fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11134c1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x11134c350"/>
        <function-ref name="sfd" scoped="" ref="0x11134c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11134c7c0" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11134c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11134cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x11134b020" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x11134b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x11134b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11134f5c0" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11134f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11134f940"/>
        <function-ref name="stop" scoped="" ref="0x11134fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x111344380" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x111344380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111344700"/>
        <function-ref name="isInput" scoped="" ref="0x111344890"/>
        <function-ref name="toggle" scoped="" ref="0x111344a20"/>
        <function-ref name="isOutput" scoped="" ref="0x111344bb0"/>
        <function-ref name="get" scoped="" ref="0x111344d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x111343020"/>
        <function-ref name="set" scoped="" ref="0x1113431b0"/>
        <function-ref name="clr" scoped="" ref="0x111343340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x11133cb90" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x11133cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x11133b020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x11133b1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x11133b340"/>
        <function-ref name="syncDone" scoped="" ref="0x11133b4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x11133b660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x11133b7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x11133b980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x11133bb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x11133bca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x11133be30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x11133a020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x11133a1b0"/>
        <function-ref name="sync" scoped="" ref="0x11133a340"/>
        <function-ref name="getChannel" scoped="" ref="0x11133a5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x11133a760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x1113859d0" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x1113859d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111385d50"/>
        <function-ref name="runTask" scoped="" ref="0x111384020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x11133ad70" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x11133ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111338330"/>
        <function-ref name="clear" scoped="" ref="0x111338a60"/>
        <function-ref name="isValid" scoped="" ref="0x111339ba0"/>
        <function-ref name="set" scoped="" ref="0x111336210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x1113436b0" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x1113436b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111343a30"/>
        <function-ref name="isInput" scoped="" ref="0x111343bc0"/>
        <function-ref name="toggle" scoped="" ref="0x111343d50"/>
        <function-ref name="isOutput" scoped="" ref="0x111342020"/>
        <function-ref name="get" scoped="" ref="0x1113421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111342340"/>
        <function-ref name="set" scoped="" ref="0x1113424d0"/>
        <function-ref name="clr" scoped="" ref="0x111342660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x111335cb0" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111335cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113340a0"/>
        <function-ref name="write" scoped="" ref="0x111334230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x111334590" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111334590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111334910"/>
        <function-ref name="write" scoped="" ref="0x111334aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x1113336d0" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1113336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111333a50"/>
        <function-ref name="write" scoped="" ref="0x111333be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x11133d330" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x11133d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x11133d6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x11133d840"/>
        <function-ref name="getRssi" scoped="" ref="0x11133d9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x11133db60"/>
        <function-ref name="getPower" scoped="" ref="0x11133dcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x11133de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x111347550" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x111347550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1113478d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x111347a60"/>
        <function-ref name="sfd" scoped="" ref="0x111347bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x11133e3a0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x11133e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11133e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x111345020" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x111345020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1113453a0"/>
        <function-ref name="isInput" scoped="" ref="0x111345530"/>
        <function-ref name="toggle" scoped="" ref="0x1113456c0"/>
        <function-ref name="isOutput" scoped="" ref="0x111345850"/>
        <function-ref name="get" scoped="" ref="0x1113459e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111345b70"/>
        <function-ref name="set" scoped="" ref="0x111345d00"/>
        <function-ref name="clr" scoped="" ref="0x111344020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x111332020" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113323a0"/>
        <function-ref name="write" scoped="" ref="0x111332530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111348620" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111348620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1113489a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x11133c1e0" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x11133c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x11133c560"/>
        <function-ref name="getHeader" scoped="" ref="0x11133c6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x11133c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x111346020" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x111346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1113463a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1113416e0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1113416e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111341a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111341bf0"/>
        <function-ref name="request" scoped="" ref="0x111341d80"/>
        <function-ref name="granted" scoped="" ref="0x11133f020"/>
        <function-ref name="isOwner" scoped="" ref="0x11133f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x111334e00" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111334e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1113331c0"/>
        <function-ref name="write" scoped="" ref="0x111333350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x11133f530" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x11133f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11133f8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x11133fa40"/>
        <function-ref name="write" scoped="" ref="0x11133fbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x11133fd60"/>
        <function-ref name="readDone" scoped="" ref="0x11133e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x1113328b0" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1113328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111332e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x1113467c0" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x1113467c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111346b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111331150" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111331150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1113314d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111331660"/>
        <function-ref name="led1On" scoped="" ref="0x1113317f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111331980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111331b10"/>
        <function-ref name="get" scoped="" ref="0x111331ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x111331e30"/>
        <function-ref name="led2Off" scoped="" ref="0x1113304d0"/>
        <function-ref name="set" scoped="" ref="0x111330020"/>
        <function-ref name="led0On" scoped="" ref="0x1113301b0"/>
        <function-ref name="led2On" scoped="" ref="0x111330340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x1113353e0" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1113353e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111335760"/>
        <function-ref name="write" scoped="" ref="0x1113358f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x111336b10" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111336b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111335020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x111342a50" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x111342a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111342dd0"/>
        <function-ref name="disable" scoped="" ref="0x111341020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1113411b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x111341340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x11133ead0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x11133ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11133d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111348ca0" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111348ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1113470a0"/>
        <function-ref name="stop" scoped="" ref="0x111347230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1113e7a70" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1113e7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1113e7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1113ec660" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1113ec660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1113ec9e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1113ecb70"/>
        <function-ref name="getRssi" scoped="" ref="0x1113ecd00"/>
        <function-ref name="getNetwork" scoped="" ref="0x1113e9020"/>
        <function-ref name="getPower" scoped="" ref="0x1113e91b0"/>
        <function-ref name="getLqi" scoped="" ref="0x1113e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x1113e6550" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1113e6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1113e5b00"/>
        <function-ref name="clear" scoped="" ref="0x1113e42a0"/>
        <function-ref name="isValid" scoped="" ref="0x1113e53d0"/>
        <function-ref name="set" scoped="" ref="0x1113e49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x1113e70c0" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113e70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1113e7440"/>
        <function-ref name="getHeader" scoped="" ref="0x1113e75d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x1113e7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x1113de480" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1113de480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113de800"/>
        <function-ref name="isSet" scoped="" ref="0x1113de990"/>
        <function-ref name="cancel" scoped="" ref="0x1113deb20"/>
        <function-ref name="set" scoped="" ref="0x1113decb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x1113e2660" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1113e2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1113e1ce0"/>
        <function-ref name="clear" scoped="" ref="0x1113e0460"/>
        <function-ref name="isValid" scoped="" ref="0x1113e15b0"/>
        <function-ref name="set" scoped="" ref="0x1113e0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1113e96e0" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1113e96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1113e9a60"/>
        <function-ref name="noAck" scoped="" ref="0x1113e9bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1113e9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1113d8020" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1113d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1113d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1113ddd10" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1113ddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1113da0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1113da270"/>
        <function-ref name="getRssi" scoped="" ref="0x1113da400"/>
        <function-ref name="getNetwork" scoped="" ref="0x1113da590"/>
        <function-ref name="getPower" scoped="" ref="0x1113da720"/>
        <function-ref name="getLqi" scoped="" ref="0x1113da8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1113cf4a0" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1113cf4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1113cf820"/>
        <function-ref name="payloadLength" scoped="" ref="0x1113cf9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x1113cfb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1113cfcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1113cfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x1113d8a80" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1113d8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1113d6020"/>
        <function-ref name="clear" scoped="" ref="0x1113d6750"/>
        <function-ref name="isValid" scoped="" ref="0x1113d78d0"/>
        <function-ref name="set" scoped="" ref="0x1113d6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x1113d9640" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1113d9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1113d99c0"/>
        <function-ref name="getHeader" scoped="" ref="0x1113d9b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x1113d9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x1113d08b0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1113d08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113d0c30"/>
        <function-ref name="isSet" scoped="" ref="0x1113d0dc0"/>
        <function-ref name="cancel" scoped="" ref="0x1113cf020"/>
        <function-ref name="set" scoped="" ref="0x1113cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x1113ce3b0" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x1113ce3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x1113cd6e0" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x1113cd6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113cc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x1113d4af0" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1113d4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1113d20d0"/>
        <function-ref name="clear" scoped="" ref="0x1113d2800"/>
        <function-ref name="isValid" scoped="" ref="0x1113d3970"/>
        <function-ref name="set" scoped="" ref="0x1113d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1113dac50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1113dac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1113d9020"/>
        <function-ref name="noAck" scoped="" ref="0x1113d91b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1113d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x111444cf0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x111444cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111443980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x111442020" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111442020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111442e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111441800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111441340"/>
        <function-ref name="overflow" scoped="" ref="0x111441cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x11143d0b0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11143d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111439630"/>
        <function-ref name="fired" scoped="" ref="0x11143cb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x11143b920"/>
        <function-ref name="isOneShot" scoped="" ref="0x11143b4a0"/>
        <function-ref name="getdt" scoped="" ref="0x111438020"/>
        <function-ref name="gett0" scoped="" ref="0x111439ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x11143b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x11143dca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111439020"/>
        <function-ref name="startOneShot" scoped="" ref="0x11143c1b0"/>
        <function-ref name="stop" scoped="" ref="0x11143c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111428620" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111428620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111428ba0"/>
        <function-ref name="write" scoped="" ref="0x111428d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111433940" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111433940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111433cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x11142b620" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x11142b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11142b9a0"/>
        <function-ref name="write" scoped="" ref="0x11142bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111426060" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111426060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114263e0"/>
        <function-ref name="write" scoped="" ref="0x111426570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111483840" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111483840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111483bc0"/>
        <function-ref name="write" scoped="" ref="0x111483d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111426840" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111426840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111426bc0"/>
        <function-ref name="write" scoped="" ref="0x111426d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x111477c60" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x111477c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111476020"/>
        <function-ref name="write" scoped="" ref="0x1114761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x111479c60" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111479c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111478020"/>
        <function-ref name="write" scoped="" ref="0x1114781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111432cc0" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111432cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114300a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x11147e060" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x11147e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147e3e0"/>
        <function-ref name="write" scoped="" ref="0x11147e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11147ac60" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11147ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111479020"/>
        <function-ref name="write" scoped="" ref="0x1114791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x11142a620" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x11142a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11142a9a0"/>
        <function-ref name="write" scoped="" ref="0x11142ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111429620" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111429620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114299a0"/>
        <function-ref name="write" scoped="" ref="0x111429b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111420060" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111420060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114203e0"/>
        <function-ref name="write" scoped="" ref="0x111420570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x111422840" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x111422840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111422bc0"/>
        <function-ref name="write" scoped="" ref="0x111422d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111424060" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111424060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114243e0"/>
        <function-ref name="write" scoped="" ref="0x111424570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x1114342b0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1114342b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111434630"/>
        <function-ref name="abortRelease" scoped="" ref="0x1114347c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111434950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x11142f6b0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x11142f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11142fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x11142fd00" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x11142fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11142e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x11147d480" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11147d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147d800"/>
        <function-ref name="write" scoped="" ref="0x11147d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x11142e490" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x11142e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11142e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111479480" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111479480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111479800"/>
        <function-ref name="write" scoped="" ref="0x111479990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1114309c0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1114309c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111430d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x11147f840" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x11147f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147fbc0"/>
        <function-ref name="write" scoped="" ref="0x11147fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11142ae00" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11142ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114291c0"/>
        <function-ref name="write" scoped="" ref="0x111429350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x11142be00" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11142be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11142a1c0"/>
        <function-ref name="write" scoped="" ref="0x11142a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1114332f0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1114332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111433670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111480840" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111480840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111480bc0"/>
        <function-ref name="write" scoped="" ref="0x111480d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111481060" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111481060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114813e0"/>
        <function-ref name="write" scoped="" ref="0x111481570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x11147f060" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x11147f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147f3e0"/>
        <function-ref name="write" scoped="" ref="0x11147f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111477480" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111477480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111477800"/>
        <function-ref name="write" scoped="" ref="0x111477990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111478480" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111478480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111478800"/>
        <function-ref name="write" scoped="" ref="0x111478990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111421060" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111421060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114213e0"/>
        <function-ref name="write" scoped="" ref="0x111421570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111481840" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111481840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111481bc0"/>
        <function-ref name="write" scoped="" ref="0x111481d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11147a480" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11147a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147a800"/>
        <function-ref name="write" scoped="" ref="0x11147a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111423060" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111423060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114233e0"/>
        <function-ref name="write" scoped="" ref="0x111423570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111476480" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111476480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111476800"/>
        <function-ref name="writeDone" scoped="" ref="0x111476990"/>
        <function-ref name="write" scoped="" ref="0x111476b20"/>
        <function-ref name="beginRead" scoped="" ref="0x111476cb0"/>
        <function-ref name="readDone" scoped="" ref="0x111476e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111434c20" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111434c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111433020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x11142de00" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x11142de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11142b1c0"/>
        <function-ref name="write" scoped="" ref="0x11142b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111429e00" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111429e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114281c0"/>
        <function-ref name="write" scoped="" ref="0x111428350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111420840" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111420840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111420bc0"/>
        <function-ref name="write" scoped="" ref="0x111420d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x111424840" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x111424840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111424bc0"/>
        <function-ref name="write" scoped="" ref="0x111424d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111483060" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111483060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114833e0"/>
        <function-ref name="write" scoped="" ref="0x111483570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111427060" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111427060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114273e0"/>
        <function-ref name="write" scoped="" ref="0x111427570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111432020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111432020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x111427840" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111427840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111427bc0"/>
        <function-ref name="write" scoped="" ref="0x111427d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111435520" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111435520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1114358a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111435a30"/>
        <function-ref name="request" scoped="" ref="0x111435bc0"/>
        <function-ref name="granted" scoped="" ref="0x111435d50"/>
        <function-ref name="isOwner" scoped="" ref="0x111434020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x11142eae0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x11142eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11142ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x11142d7b0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x11142d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11142db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11147cc60" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11147cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147a020"/>
        <function-ref name="write" scoped="" ref="0x11147a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11147c480" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11147c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147c800"/>
        <function-ref name="write" scoped="" ref="0x11147c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x11142f060" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x11142f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11142f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11147dc60" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11147dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147c020"/>
        <function-ref name="write" scoped="" ref="0x11147c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x111478c60" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x111478c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111477020"/>
        <function-ref name="write" scoped="" ref="0x1114771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111421840" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111421840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111421bc0"/>
        <function-ref name="write" scoped="" ref="0x111421d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111480060" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111480060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114803e0"/>
        <function-ref name="write" scoped="" ref="0x111480570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111432670" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111432670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114329f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111430370" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111430370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114306f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x111423840" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x111423840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111423bc0"/>
        <function-ref name="write" scoped="" ref="0x111423d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x11142d160" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x11142d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11142d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111422060" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111422060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114223e0"/>
        <function-ref name="write" scoped="" ref="0x111422570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x11147e840" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x11147e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147d020"/>
        <function-ref name="write" scoped="" ref="0x11147d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111475160" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111475160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1114754e0"/>
        <function-ref name="writeDone" scoped="" ref="0x111475670"/>
        <function-ref name="write" scoped="" ref="0x111475800"/>
        <function-ref name="beginRead" scoped="" ref="0x111475990"/>
        <function-ref name="readDone" scoped="" ref="0x111475b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1114b4a20" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1114b4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1114b4da0"/>
        <function-ref name="rand32" scoped="" ref="0x1114b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1114b2920" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1114b2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1114b4560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1114b8990" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1114b8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1114b8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1114ada20" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1114ada20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1114adda0"/>
        <function-ref name="rand32" scoped="" ref="0x1114ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1114ae940" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1114ae940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1114ad560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1114ae080" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1114ae080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1114ae400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1114b6aa0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1114b6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1114b6e20"/>
        <function-ref name="toIdle" scoped="" ref="0x1114af020"/>
        <function-ref name="isState" scoped="" ref="0x1114af1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x1114af340"/>
        <function-ref name="requestState" scoped="" ref="0x1114af4d0"/>
        <function-ref name="forceState" scoped="" ref="0x1114af660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x111496020" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x111496020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1114963a0"/>
        <function-ref name="getPayload" scoped="" ref="0x111496530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1114966c0"/>
        <function-ref name="cancel" scoped="" ref="0x111496850"/>
        <function-ref name="sendDone" scoped="" ref="0x1114969e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111497220" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111497220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1114975a0"/>
        <function-ref name="getPayload" scoped="" ref="0x111497730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1114978c0"/>
        <function-ref name="cancel" scoped="" ref="0x111497a50"/>
        <function-ref name="sendDone" scoped="" ref="0x111497be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x111492e60" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x111492e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111491210"/>
        <function-ref name="getPayload" scoped="" ref="0x1114913a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111491530"/>
        <function-ref name="cancel" scoped="" ref="0x1114916c0"/>
        <function-ref name="sendDone" scoped="" ref="0x111491850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111495a10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111495a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111495d90"/>
        <function-ref name="getPayload" scoped="" ref="0x111492020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1114921b0"/>
        <function-ref name="cancel" scoped="" ref="0x111492340"/>
        <function-ref name="sendDone" scoped="" ref="0x1114924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x1114908f0" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1114908f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x111490c70"/>
        <function-ref name="rand32" scoped="" ref="0x111490e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111492750" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111492750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111492ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x11148e170" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x11148e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x11148e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x11148e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x11148e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x111491ae0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x111491ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x111491e60"/>
        <function-ref name="toIdle" scoped="" ref="0x111490020"/>
        <function-ref name="isState" scoped="" ref="0x1114901b0"/>
        <function-ref name="isIdle" scoped="" ref="0x111490340"/>
        <function-ref name="requestState" scoped="" ref="0x1114904d0"/>
        <function-ref name="forceState" scoped="" ref="0x111490660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1114e4690" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1114e4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1114e4a10"/>
        <function-ref name="toIdle" scoped="" ref="0x1114e4ba0"/>
        <function-ref name="isState" scoped="" ref="0x1114e4d30"/>
        <function-ref name="isIdle" scoped="" ref="0x1114e3020"/>
        <function-ref name="requestState" scoped="" ref="0x1114e31b0"/>
        <function-ref name="forceState" scoped="" ref="0x1114e3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1114dd950" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1114dd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1114ddcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1114e0a90" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1114e0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1114e0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1114dd200" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1114dd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1114dd580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1114d83f0" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1114d83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1114d8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1114d9b50" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1114d9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1114d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1114dce20" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1114dce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1114d91c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1114d8a70" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1114d8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1114d8df0"/>
        <function-ref name="getHeader" scoped="" ref="0x1114d7020"/>
        <function-ref name="getMetadata" scoped="" ref="0x1114d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1114d9550" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1114d9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1114d98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x111510020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x111510020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1115103a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1115106b0" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1115106b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111510a30"/>
        <function-ref name="getPayload" scoped="" ref="0x111510bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111510d50"/>
        <function-ref name="cancel" scoped="" ref="0x11150f020"/>
        <function-ref name="sendDone" scoped="" ref="0x11150f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1115158e0" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1115158e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111515c60"/>
        <function-ref name="getPayload" scoped="" ref="0x111515df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111514020"/>
        <function-ref name="cancel" scoped="" ref="0x1115141b0"/>
        <function-ref name="sendDone" scoped="" ref="0x111514340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x111514c90" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x111514c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115130a0"/>
        <function-ref name="getPayload" scoped="" ref="0x111513230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115133c0"/>
        <function-ref name="cancel" scoped="" ref="0x111513550"/>
        <function-ref name="sendDone" scoped="" ref="0x1115136e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1115145e0" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1115145e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111514960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111516be0" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111516be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111515020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1115151b0"/>
        <function-ref name="request" scoped="" ref="0x111515340"/>
        <function-ref name="granted" scoped="" ref="0x1115154d0"/>
        <function-ref name="isOwner" scoped="" ref="0x111515660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x111513a50" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x111513a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111513dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x111511170" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x111511170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1115114f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x111511680"/>
        <function-ref name="getPayload" scoped="" ref="0x111511810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115119a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x111511b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x111507d70" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x111507d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111506180"/>
        <function-ref name="getPayload" scoped="" ref="0x111506310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115064a0"/>
        <function-ref name="cancel" scoped="" ref="0x111506630"/>
        <function-ref name="sendDone" scoped="" ref="0x1115067c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x111506b10" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x111506b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111505020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x11153fdb0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x11153fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11153e180"/>
        <function-ref name="runTask" scoped="" ref="0x11153e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x1115052f0" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1115052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111505670"/>
        <function-ref name="setNetwork" scoped="" ref="0x111505800"/>
        <function-ref name="getRssi" scoped="" ref="0x111505990"/>
        <function-ref name="getNetwork" scoped="" ref="0x111505b20"/>
        <function-ref name="getPower" scoped="" ref="0x111505cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x111505e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x111509a20" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x111509a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111509da0"/>
        <function-ref name="getPayload" scoped="" ref="0x111508020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115081b0"/>
        <function-ref name="cancel" scoped="" ref="0x111508340"/>
        <function-ref name="sendDone" scoped="" ref="0x1115084d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x111503b70" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x111503b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x111502020"/>
        <function-ref name="isEmpty" scoped="" ref="0x1115021b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x111502340"/>
        <function-ref name="dequeue" scoped="" ref="0x1115024d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x111503170" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x111503170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1115034f0"/>
        <function-ref name="getHeader" scoped="" ref="0x111503680"/>
        <function-ref name="getMetadata" scoped="" ref="0x111503810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x111509370" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x111509370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1115096f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11150b7b0" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11150b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11150bb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11150bcc0"/>
        <function-ref name="request" scoped="" ref="0x11150be50"/>
        <function-ref name="granted" scoped="" ref="0x11150a020"/>
        <function-ref name="isOwner" scoped="" ref="0x11150a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x11150a4d0" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x11150a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11150a850"/>
        <function-ref name="getPayload" scoped="" ref="0x11150a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11150ab70"/>
        <function-ref name="cancel" scoped="" ref="0x11150ad00"/>
        <function-ref name="sendDone" scoped="" ref="0x111509020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x111508840" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x111508840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111508bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x111507020" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x111507020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1115073a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x111507530"/>
        <function-ref name="getPayload" scoped="" ref="0x1115076c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111507850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1115079e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111587dd0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111587dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111586180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x111586410" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x111586410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x111586790"/>
        <function-ref name="isEmpty" scoped="" ref="0x111586920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x111586ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x111586c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x11157bb80" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x11157bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x11157a020"/>
        <function-ref name="stopDone" scoped="" ref="0x11157a1b0"/>
        <function-ref name="start" scoped="" ref="0x11157a340"/>
        <function-ref name="stop" scoped="" ref="0x11157a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x111579860" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x111579860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111579be0"/>
        <function-ref name="getPayload" scoped="" ref="0x111579d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111578020"/>
        <function-ref name="cancel" scoped="" ref="0x1115781b0"/>
        <function-ref name="sendDone" scoped="" ref="0x111578340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x111578690" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x111578690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111578a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11157fce0" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11157fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11157c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x11157c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11157c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x11157c550"/>
        <function-ref name="sendDone" scoped="" ref="0x11157c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x11157b080" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x11157b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x11157b400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x11157b590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x11157b720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x11157b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x11157a800" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x11157a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x11157ab80"/>
        <function-ref name="toIdle" scoped="" ref="0x11157ad10"/>
        <function-ref name="isState" scoped="" ref="0x111579020"/>
        <function-ref name="isIdle" scoped="" ref="0x1115791b0"/>
        <function-ref name="requestState" scoped="" ref="0x111579340"/>
        <function-ref name="forceState" scoped="" ref="0x1115794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x111578d90" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x111578d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x111576180"/>
        <function-ref name="stopDone" scoped="" ref="0x111576310"/>
        <function-ref name="start" scoped="" ref="0x1115764a0"/>
        <function-ref name="stop" scoped="" ref="0x111576630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11157c980" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11157c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11157cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x1115732d0" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x1115732d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x111573650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x1115737e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x111573970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x111573b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x111575580" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x111575580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x111575900"/>
        <function-ref name="toIdle" scoped="" ref="0x111575a90"/>
        <function-ref name="isState" scoped="" ref="0x111575c20"/>
        <function-ref name="isIdle" scoped="" ref="0x111575db0"/>
        <function-ref name="requestState" scoped="" ref="0x111574020"/>
        <function-ref name="forceState" scoped="" ref="0x1115741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x111566d70" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x111566d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111565180"/>
        <function-ref name="getPayload" scoped="" ref="0x111565310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115654a0"/>
        <function-ref name="cancel" scoped="" ref="0x111565630"/>
        <function-ref name="sendDone" scoped="" ref="0x1115657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111569340" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111569340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115696c0"/>
        <function-ref name="getPayload" scoped="" ref="0x111569850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115699e0"/>
        <function-ref name="cancel" scoped="" ref="0x111569b70"/>
        <function-ref name="sendDone" scoped="" ref="0x111569d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x111566020" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x111566020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x1115663a0"/>
        <function-ref name="setRetries" scoped="" ref="0x111566530"/>
        <function-ref name="getRetries" scoped="" ref="0x1115666c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x111566850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x1115669e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x1115611a0" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1115611a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111561520"/>
        <function-ref name="noAck" scoped="" ref="0x1115616b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x111561840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x111564400" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x111564400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x111564780"/>
        <function-ref name="setRetries" scoped="" ref="0x111564910"/>
        <function-ref name="getRetries" scoped="" ref="0x111564aa0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x111564c30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x111564dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1115a9690" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1115a9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1115a9a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1115ab860" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1115ab860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115abbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x1115abd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115a9020"/>
        <function-ref name="cancel" scoped="" ref="0x1115a91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1115a9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x1115a7610" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1115a7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x1115a7990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1115a7b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x1115a7cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x1115a7e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x1115a6020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1115a61b0"/>
        <function-ref name="setChannel" scoped="" ref="0x1115a6340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x1115a64d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1115a6660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x1115a67f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x1115a6980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1115a6b10"/>
        <function-ref name="sync" scoped="" ref="0x1115a6ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x1115a5020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1115a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1115ac8b0" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1115ac8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1115acc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1115acdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1115ab020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1115ab1b0"/>
        <function-ref name="setCca" scoped="" ref="0x1115ab340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1115ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1115adce0" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1115adce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x1115ac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x1115a41f0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x1115a41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1115a4570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1115a4700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1115a4890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1115a4a20"/>
        <function-ref name="setCca" scoped="" ref="0x1115a4bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1115a4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1115aea80" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1115aea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1115aee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x1115ad020"/>
        <function-ref name="getPayload" scoped="" ref="0x1115ad1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115ad340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1115ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1115b5e80" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1115b5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115b1220"/>
        <function-ref name="getPayload" scoped="" ref="0x1115b13b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1115b1540"/>
        <function-ref name="cancel" scoped="" ref="0x1115b16d0"/>
        <function-ref name="sendDone" scoped="" ref="0x1115b1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1115b0db0" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1115b0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1115af180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x1115a9ce0" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1115a9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1115a80a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1115a8230"/>
        <function-ref name="getRssi" scoped="" ref="0x1115a83c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x1115a8550"/>
        <function-ref name="getPower" scoped="" ref="0x1115a86e0"/>
        <function-ref name="getLqi" scoped="" ref="0x1115a8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x1115a54d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1115a54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1115a5950"/>
        <function-ref name="changed" scoped="" ref="0x1115a5ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x1115a5c70"/>
        <function-ref name="setAddress" scoped="" ref="0x1115a5e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1115a8b70" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1115a8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1115a7020"/>
        <function-ref name="getHeader" scoped="" ref="0x1115a71b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x1115a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1115b01d0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1115b01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1115b0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1115a3d30" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1115a3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1115a20e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1115a2270"/>
        <function-ref name="led1On" scoped="" ref="0x1115a2400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1115a2590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1115a2720"/>
        <function-ref name="get" scoped="" ref="0x1115a28b0"/>
        <function-ref name="led1Off" scoped="" ref="0x1115a2a40"/>
        <function-ref name="led2Off" scoped="" ref="0x1115a11b0"/>
        <function-ref name="set" scoped="" ref="0x1115a2bd0"/>
        <function-ref name="led0On" scoped="" ref="0x1115a2d60"/>
        <function-ref name="led2On" scoped="" ref="0x1115a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1115af430" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1115af430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1115af7b0"/>
        <function-ref name="source" scoped="" ref="0x1115af940"/>
        <function-ref name="address" scoped="" ref="0x1115afad0"/>
        <function-ref name="destination" scoped="" ref="0x1115afc60"/>
        <function-ref name="setSource" scoped="" ref="0x1115afdf0"/>
        <function-ref name="setDestination" scoped="" ref="0x1115ae020"/>
        <function-ref name="type" scoped="" ref="0x1115ae1b0"/>
        <function-ref name="setType" scoped="" ref="0x1115ae340"/>
        <function-ref name="isForMe" scoped="" ref="0x1115ae4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x1115ae660"/>
        <function-ref name="localGroup" scoped="" ref="0x1115ae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x1115a30f0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x1115a30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1115a3470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1115a3600"/>
        <function-ref name="request" scoped="" ref="0x1115a3790"/>
        <function-ref name="granted" scoped="" ref="0x1115a3920"/>
        <function-ref name="isOwner" scoped="" ref="0x1115a3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x11165a750" loc="42:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SenderAppC.LumSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x11165a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111a27390"/>
        <function-ref name="readDone" scoped="" ref="0x111a27810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x111a26020" loc="43:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SenderAppC.LumSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x111a26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x111a24ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x111a26c10"/>
        <function-ref name="read" scoped="" ref="0x111a245e0"/>
        <function-ref name="readDone" scoped="" ref="0x111a235a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x11165a020" loc="41:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SenderAppC.LumSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x11165a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x11165a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x112397760" loc="48:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x112397760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112396390"/>
        <function-ref name="readDone" scoped="" ref="0x112396810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x112394020" loc="49:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x112394020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x112394c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x111695960" loc="46:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x111695960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111695ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111695e70"/>
        <function-ref name="request" scoped="" ref="0x111694030"/>
        <function-ref name="granted" scoped="" ref="0x1116941c0"/>
        <function-ref name="isOwner" scoped="" ref="0x111694350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x11169f390" loc="38:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x11169f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11169e020"/>
        <function-ref name="readDone" scoped="" ref="0x11169e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x11169c530" loc="39:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x11169c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11169b1b0"/>
        <function-ref name="readDone" scoped="" ref="0x11169b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x1116972c0" loc="40:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x1116972c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111697640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1116977d0"/>
        <function-ref name="request" scoped="" ref="0x111697960"/>
        <function-ref name="granted" scoped="" ref="0x111697af0"/>
        <function-ref name="isOwner" scoped="" ref="0x111697c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x111692020" loc="48:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x111692020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x111692c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x111690450" loc="49:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x111690450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1116907d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x111690960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x111690af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x111690c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x111690e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x11168f020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x11168f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x111696640" loc="44:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x111696640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1116969c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111696b50"/>
        <function-ref name="request" scoped="" ref="0x111696ce0"/>
        <function-ref name="granted" scoped="" ref="0x111696e70"/>
        <function-ref name="isOwner" scoped="" ref="0x111695030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x1116d3e40" loc="136:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x1116d3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1116d21e0"/>
        <function-ref name="runTask" scoped="" ref="0x1116d2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x112387400" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x112387400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x112387780"/>
        <function-ref name="configure" scoped="" ref="0x112387910"/>
        <function-ref name="dataReady" scoped="" ref="0x112387aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x112388400" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112388400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x112388780"/>
        <function-ref name="configureSingle" scoped="" ref="0x112388910"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x112388aa0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x112388c30"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x112388dc0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x112387020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x1123871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x112387cf0" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x112387cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x1123860a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x112386230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x112386660" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x112386660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1123853d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11238a660" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11238a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11238a9e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11238ab70"/>
        <function-ref name="request" scoped="" ref="0x11238ad00"/>
        <function-ref name="granted" scoped="" ref="0x112388020"/>
        <function-ref name="isOwner" scoped="" ref="0x1123881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x111704960" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x111704960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x111704ce0"/>
        <function-ref name="configure" scoped="" ref="0x111704e70"/>
        <function-ref name="dataReady" scoped="" ref="0x111703030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x1117001d0" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x1117001d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111700550"/>
        <function-ref name="stop" scoped="" ref="0x1117006e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x111703920" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x111703920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x111703ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x111703e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x1117051d0" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x1117051d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x111705550"/>
        <function-ref name="configureSingle" scoped="" ref="0x1117056e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x111705870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x111705a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x111705b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x111705d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x111704020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1116a4cc0" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1116a4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1117060a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111706230"/>
        <function-ref name="request" scoped="" ref="0x1117063c0"/>
        <function-ref name="granted" scoped="" ref="0x111706550"/>
        <function-ref name="isOwner" scoped="" ref="0x1117066e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x1116faaf0" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x1116faaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1116fae70"/>
        <function-ref name="configure" scoped="" ref="0x1116f8030"/>
        <function-ref name="dataReady" scoped="" ref="0x1116f81c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x1116e70d0" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x1116e70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x1116e7450"/>
        <function-ref name="getMCtl" scoped="" ref="0x1116e75e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x1116e7770"/>
        <function-ref name="isBusy" scoped="" ref="0x1116e7900"/>
        <function-ref name="conversionDone" scoped="" ref="0x1116e7a90"/>
        <function-ref name="getCtl1" scoped="" ref="0x1116e7c20"/>
        <function-ref name="setMCtl" scoped="" ref="0x1116e7db0"/>
        <function-ref name="startConversion" scoped="" ref="0x1116f5020"/>
        <function-ref name="setCtl0" scoped="" ref="0x1116f51b0"/>
        <function-ref name="getMem" scoped="" ref="0x1116f5340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x1116f54d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x1116f5660"/>
        <function-ref name="stopConversion" scoped="" ref="0x1116f57f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x1116f5a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x1116f5c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x1116d9c80" loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x1116d9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1117490a0"/>
        <function-ref name="isInput" scoped="" ref="0x111749230"/>
        <function-ref name="setResistor" scoped="" ref="0x1117493c0"/>
        <function-ref name="toggle" scoped="" ref="0x111749550"/>
        <function-ref name="isOutput" scoped="" ref="0x1117496e0"/>
        <function-ref name="getResistor" scoped="" ref="0x111749870"/>
        <function-ref name="makeOutput" scoped="" ref="0x111749a00"/>
        <function-ref name="get" scoped="" ref="0x111749b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111749d20"/>
        <function-ref name="getRaw" scoped="" ref="0x111748020"/>
        <function-ref name="set" scoped="" ref="0x1117481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111748340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1117484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111748760"/>
        <function-ref name="clr" scoped="" ref="0x1117488f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x1116e2e60" loc="53:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x1116e2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1116e1210"/>
        <function-ref name="setEvent" scoped="" ref="0x1116e13a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1116e1530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1116e16c0"/>
        <function-ref name="fired" scoped="" ref="0x1116e1850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x1116e6880" loc="50:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x1116e6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1116e6c00"/>
        <function-ref name="getControl" scoped="" ref="0x1116e6d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x1116e5020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1116e51b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1116e5340"/>
        <function-ref name="disableEvents" scoped="" ref="0x1116e54d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1116e5660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1116e57f0"/>
        <function-ref name="setControl" scoped="" ref="0x1116e5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x1116f7910" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x1116f7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1116f7c90"/>
        <function-ref name="stop" scoped="" ref="0x1116f7e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x1116ddc80" loc="56:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x1116ddc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1116dc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x1116dc230"/>
        <function-ref name="setResistor" scoped="" ref="0x1116dc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x1116dc550"/>
        <function-ref name="isOutput" scoped="" ref="0x1116dc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1116dc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116dca00"/>
        <function-ref name="get" scoped="" ref="0x1116dcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116dcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x1116db020"/>
        <function-ref name="set" scoped="" ref="0x1116db1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1116db340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1116db4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1116db760"/>
        <function-ref name="clr" scoped="" ref="0x1116db8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x1116f8ab0" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x1116f8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x1116f8e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x1116f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x111744c80" loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x111744c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1117430a0"/>
        <function-ref name="isInput" scoped="" ref="0x111743230"/>
        <function-ref name="setResistor" scoped="" ref="0x1117433c0"/>
        <function-ref name="toggle" scoped="" ref="0x111743550"/>
        <function-ref name="isOutput" scoped="" ref="0x1117436e0"/>
        <function-ref name="getResistor" scoped="" ref="0x111743870"/>
        <function-ref name="makeOutput" scoped="" ref="0x111743a00"/>
        <function-ref name="get" scoped="" ref="0x111743b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111743d20"/>
        <function-ref name="getRaw" scoped="" ref="0x111742020"/>
        <function-ref name="set" scoped="" ref="0x1117421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111742340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1117424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111742760"/>
        <function-ref name="clr" scoped="" ref="0x1117428f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x1116e1be0" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x1116e1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1116e00a0"/>
        <function-ref name="isInput" scoped="" ref="0x1116e0230"/>
        <function-ref name="setResistor" scoped="" ref="0x1116e03c0"/>
        <function-ref name="toggle" scoped="" ref="0x1116e0550"/>
        <function-ref name="isOutput" scoped="" ref="0x1116e06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1116e0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116e0a00"/>
        <function-ref name="get" scoped="" ref="0x1116e0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116e0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x1116df020"/>
        <function-ref name="set" scoped="" ref="0x1116df1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1116df340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1116df4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1116df760"/>
        <function-ref name="clr" scoped="" ref="0x1116df8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1116fc660" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1116fc660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1116fc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x111748c80" loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x111748c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1117470a0"/>
        <function-ref name="isInput" scoped="" ref="0x111747230"/>
        <function-ref name="setResistor" scoped="" ref="0x1117473c0"/>
        <function-ref name="toggle" scoped="" ref="0x111747550"/>
        <function-ref name="isOutput" scoped="" ref="0x1117476e0"/>
        <function-ref name="getResistor" scoped="" ref="0x111747870"/>
        <function-ref name="makeOutput" scoped="" ref="0x111747a00"/>
        <function-ref name="get" scoped="" ref="0x111747b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111747d20"/>
        <function-ref name="getRaw" scoped="" ref="0x111746020"/>
        <function-ref name="set" scoped="" ref="0x1117461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111746340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1117464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111746760"/>
        <function-ref name="clr" scoped="" ref="0x1117468f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x1116f3020" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x1116f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1116f33a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1116f3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1116f36c0"/>
        <function-ref name="get" scoped="" ref="0x1116f3850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1116f39e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1116f3b70"/>
        <function-ref name="getMode" scoped="" ref="0x1116f3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1116e6020"/>
        <function-ref name="overflow" scoped="" ref="0x1116e61b0"/>
        <function-ref name="setMode" scoped="" ref="0x1116e6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1116e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x1116f6280" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x1116f6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1116f6600"/>
        <function-ref name="userId" scoped="" ref="0x1116f6790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x1116e5d30" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x1116e5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1116e30e0"/>
        <function-ref name="getControl" scoped="" ref="0x1116e3270"/>
        <function-ref name="enableEvents" scoped="" ref="0x1116e3400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1116e3590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1116e3720"/>
        <function-ref name="disableEvents" scoped="" ref="0x1116e38b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1116e3a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1116e3bd0"/>
        <function-ref name="setControl" scoped="" ref="0x1116e3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x1116fb370" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x1116fb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1116fb6f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x1116fb880"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x1116fba10"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x1116fbba0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x1116fbd30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x1116fa020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x1116fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x1116dbc80" loc="57:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x1116dbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1116da0a0"/>
        <function-ref name="isInput" scoped="" ref="0x1116da230"/>
        <function-ref name="setResistor" scoped="" ref="0x1116da3c0"/>
        <function-ref name="toggle" scoped="" ref="0x1116da550"/>
        <function-ref name="isOutput" scoped="" ref="0x1116da6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1116da870"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116daa00"/>
        <function-ref name="get" scoped="" ref="0x1116dab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116dad20"/>
        <function-ref name="getRaw" scoped="" ref="0x1116d9020"/>
        <function-ref name="set" scoped="" ref="0x1116d91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1116d9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1116d94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1116d9760"/>
        <function-ref name="clr" scoped="" ref="0x1116d98f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x1116e2120" loc="52:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x1116e2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1116e24a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1116e2630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1116e27c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1116e2950"/>
        <function-ref name="fired" scoped="" ref="0x1116e2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x1116dfc80" loc="55:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x1116dfc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1116de0a0"/>
        <function-ref name="isInput" scoped="" ref="0x1116de230"/>
        <function-ref name="setResistor" scoped="" ref="0x1116de3c0"/>
        <function-ref name="toggle" scoped="" ref="0x1116de550"/>
        <function-ref name="isOutput" scoped="" ref="0x1116de6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1116de870"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116dea00"/>
        <function-ref name="get" scoped="" ref="0x1116deb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116ded20"/>
        <function-ref name="getRaw" scoped="" ref="0x1116dd020"/>
        <function-ref name="set" scoped="" ref="0x1116dd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1116dd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1116dd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1116dd760"/>
        <function-ref name="clr" scoped="" ref="0x1116dd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x111746c80" loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x111746c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1117450a0"/>
        <function-ref name="isInput" scoped="" ref="0x111745230"/>
        <function-ref name="setResistor" scoped="" ref="0x1117453c0"/>
        <function-ref name="toggle" scoped="" ref="0x111745550"/>
        <function-ref name="isOutput" scoped="" ref="0x1117456e0"/>
        <function-ref name="getResistor" scoped="" ref="0x111745870"/>
        <function-ref name="makeOutput" scoped="" ref="0x111745a00"/>
        <function-ref name="get" scoped="" ref="0x111745b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111745d20"/>
        <function-ref name="getRaw" scoped="" ref="0x111744020"/>
        <function-ref name="set" scoped="" ref="0x1117441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111744340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1117444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111744760"/>
        <function-ref name="clr" scoped="" ref="0x1117448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x1117d8020" loc="46:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x1117d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x1117d83a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x1117d8530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x1117d86c0"/>
        <function-ref name="isBusy" scoped="" ref="0x1117d8850"/>
        <function-ref name="conversionDone" scoped="" ref="0x1117d89e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x1117d8b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x1117d8d00"/>
        <function-ref name="startConversion" scoped="" ref="0x1117d7020"/>
        <function-ref name="setCtl0" scoped="" ref="0x1117d71b0"/>
        <function-ref name="getMem" scoped="" ref="0x1117d7340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x1117d74d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x1117d7660"/>
        <function-ref name="stopConversion" scoped="" ref="0x1117d77f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x1117d7a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x1117d7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x11182f3a0" loc="86:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x11182f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x11182f740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11182f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1118a2570" loc="89:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1118a2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1118a2910"/>
        <function-ref name="configure" scoped="" ref="0x1118a2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111830520" loc="85:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111830520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1118308c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111830a50"/>
        <function-ref name="request" scoped="" ref="0x111830be0"/>
        <function-ref name="granted" scoped="" ref="0x111830d70"/>
        <function-ref name="isOwner" scoped="" ref="0x11182f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x11182fb20" loc="87:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x11182fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1118a2020"/>
        <function-ref name="userId" scoped="" ref="0x1118a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112406060" loc="44:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112406060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1124063e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x112406670" loc="45:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x112406670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1124069f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x112406b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x112406d10"/>
        <function-ref name="dequeue" scoped="" ref="0x112404020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112402530" loc="52:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112402530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1124028d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112402a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x112401610" loc="56:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x112401610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1124019b0"/>
        <function-ref name="configure" scoped="" ref="0x112401b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x112401dd0" loc="57:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x112401dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x112400180"/>
        <function-ref name="isEmpty" scoped="" ref="0x112400310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1124004a0"/>
        <function-ref name="dequeue" scoped="" ref="0x112400630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1124036c0" loc="51:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1124036c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112403a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112403bf0"/>
        <function-ref name="request" scoped="" ref="0x112403d80"/>
        <function-ref name="granted" scoped="" ref="0x112402020"/>
        <function-ref name="isOwner" scoped="" ref="0x1124021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x112402cb0" loc="53:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112402cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1124010a0"/>
        <function-ref name="userId" scoped="" ref="0x112401230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x112400900" loc="68:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x112400900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x112400c80"/>
        <function-ref name="runTask" scoped="" ref="0x112400e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x111886740" loc="55:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x111886740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1118853d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x1118871d0" loc="54:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x1118871d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111887550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1118876e0"/>
        <function-ref name="request" scoped="" ref="0x111887870"/>
        <function-ref name="granted" scoped="" ref="0x111887a00"/>
        <function-ref name="isOwner" scoped="" ref="0x111887b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x11188cd20" loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x11188cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1118880e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111888270"/>
        <function-ref name="request" scoped="" ref="0x111888400"/>
        <function-ref name="granted" scoped="" ref="0x111888590"/>
        <function-ref name="isOwner" scoped="" ref="0x111888720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x1118809a0" loc="43:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x1118809a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x111880d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x11187f020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x11187f1b0"/>
        <function-ref name="isBusy" scoped="" ref="0x11187f340"/>
        <function-ref name="conversionDone" scoped="" ref="0x11187f4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x11187f660"/>
        <function-ref name="setMCtl" scoped="" ref="0x11187f7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x11187f980"/>
        <function-ref name="setCtl0" scoped="" ref="0x11187fb10"/>
        <function-ref name="getMem" scoped="" ref="0x11187fca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x11187fe30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x11187e020"/>
        <function-ref name="stopConversion" scoped="" ref="0x11187e1b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x11187e440"/>
        <function-ref name="setCtl1" scoped="" ref="0x11187e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x111878020" loc="45:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x111878020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111875630"/>
        <function-ref name="fired" scoped="" ref="0x111877a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111876920"/>
        <function-ref name="isOneShot" scoped="" ref="0x1118764a0"/>
        <function-ref name="getdt" scoped="" ref="0x111873020"/>
        <function-ref name="gett0" scoped="" ref="0x111875ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x111876020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111878c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111875020"/>
        <function-ref name="startOneShot" scoped="" ref="0x111877110"/>
        <function-ref name="stop" scoped="" ref="0x1118775e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x111882e00" loc="39:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x111882e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1118801c0"/>
        <function-ref name="stopDone" scoped="" ref="0x111880350"/>
        <function-ref name="start" scoped="" ref="0x1118804e0"/>
        <function-ref name="stop" scoped="" ref="0x111880670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x1118736c0" loc="46:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x1118736c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111870c40"/>
        <function-ref name="fired" scoped="" ref="0x1118711e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111870020"/>
        <function-ref name="isOneShot" scoped="" ref="0x111871ae0"/>
        <function-ref name="getdt" scoped="" ref="0x11186e590"/>
        <function-ref name="gett0" scoped="" ref="0x11186e110"/>
        <function-ref name="isRunning" scoped="" ref="0x111871660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111872390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111870630"/>
        <function-ref name="startOneShot" scoped="" ref="0x111872860"/>
        <function-ref name="stop" scoped="" ref="0x111872d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x111882240" loc="38:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x111882240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1118825c0"/>
        <function-ref name="stopDone" scoped="" ref="0x111882750"/>
        <function-ref name="start" scoped="" ref="0x1118828e0"/>
        <function-ref name="stop" scoped="" ref="0x111882a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x11187ea90" loc="44:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x11187ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11187a020"/>
        <function-ref name="fired" scoped="" ref="0x11187c510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x11187b300"/>
        <function-ref name="isOneShot" scoped="" ref="0x11187ce10"/>
        <function-ref name="getdt" scoped="" ref="0x11187a920"/>
        <function-ref name="gett0" scoped="" ref="0x11187a4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x11187c990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x11187d6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x11187b910"/>
        <function-ref name="startOneShot" scoped="" ref="0x11187db80"/>
        <function-ref name="stop" scoped="" ref="0x11187c090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x111911020" loc="43:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x111911020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x111911c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x1119139c0" loc="42:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x1119139c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x111913d40"/>
        <function-ref name="stopDone" scoped="" ref="0x111912020"/>
        <function-ref name="start" scoped="" ref="0x1119121b0"/>
        <function-ref name="stop" scoped="" ref="0x111912340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x111914030" loc="40:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x111914030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1119143b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111914540"/>
        <function-ref name="request" scoped="" ref="0x1119146d0"/>
        <function-ref name="granted" scoped="" ref="0x111914860"/>
        <function-ref name="isOwner" scoped="" ref="0x1119149f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x111918ca0" loc="38:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x111918ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1119150a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111915230"/>
        <function-ref name="request" scoped="" ref="0x1119153c0"/>
        <function-ref name="granted" scoped="" ref="0x111915550"/>
        <function-ref name="isOwner" scoped="" ref="0x1119156e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x11190e7f0" loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x11190e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11190eb70"/>
        <function-ref name="runTask" scoped="" ref="0x11190ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x111914d80" loc="41:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x111914d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x111913180"/>
        <function-ref name="stopDone" scoped="" ref="0x111913310"/>
        <function-ref name="start" scoped="" ref="0x1119134a0"/>
        <function-ref name="stop" scoped="" ref="0x111913630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1119574e0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1119574e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111954a20"/>
        <function-ref name="fired" scoped="" ref="0x111955020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111955da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x111955920"/>
        <function-ref name="getdt" scoped="" ref="0x1119524a0"/>
        <function-ref name="gett0" scoped="" ref="0x111952020"/>
        <function-ref name="isRunning" scoped="" ref="0x1119554a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111956110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111954410"/>
        <function-ref name="startOneShot" scoped="" ref="0x1119565e0"/>
        <function-ref name="stop" scoped="" ref="0x111956ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x111950020" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x111950020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11194c630"/>
        <function-ref name="fired" scoped="" ref="0x11194fa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x11194e920"/>
        <function-ref name="isOneShot" scoped="" ref="0x11194e4a0"/>
        <function-ref name="getdt" scoped="" ref="0x11194b020"/>
        <function-ref name="gett0" scoped="" ref="0x11194cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x11194e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111950c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x11194c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x11194f110"/>
        <function-ref name="stop" scoped="" ref="0x11194f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x11194ab40" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11194ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111945110"/>
        <function-ref name="fired" scoped="" ref="0x1119485b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1119474a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x111947020"/>
        <function-ref name="getdt" scoped="" ref="0x111945a10"/>
        <function-ref name="gett0" scoped="" ref="0x111945590"/>
        <function-ref name="isRunning" scoped="" ref="0x111948a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111949750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111947ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x111949c20"/>
        <function-ref name="stop" scoped="" ref="0x111948130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x11241b020" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x11241b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x11241bc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x11241a2a0" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x11241a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x112419020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x11238e0e0" loc="49:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x11238e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x11238ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x112392380" loc="48:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x112392380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x112391e60"/>
        <function-ref name="postBuffer" scoped="" ref="0x112391020"/>
        <function-ref name="read" scoped="" ref="0x112391990"/>
        <function-ref name="readDone" scoped="" ref="0x112390940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x111986c90" loc="23:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x111986c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1119850a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x111985230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x1119853c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x111985550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x1119856e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x111985870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x111985a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x1119875e0" loc="22:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x1119875e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x111986240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x11198b1d0" loc="20:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x11198b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x11198ac40"/>
        <function-ref name="postBuffer" scoped="" ref="0x11198bdc0"/>
        <function-ref name="read" scoped="" ref="0x11198a770"/>
        <function-ref name="readDone" scoped="" ref="0x111989730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x111983280" loc="24:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111983280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111983600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111983790"/>
        <function-ref name="request" scoped="" ref="0x111983920"/>
        <function-ref name="granted" scoped="" ref="0x111983ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x111983c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x1119c6380" loc="156:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x1119c6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1119c6700"/>
        <function-ref name="runTask" scoped="" ref="0x1119c6890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x11195caa0" loc="119:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x11195caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11195ce20"/>
        <function-ref name="runTask" scoped="" ref="0x1119d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x1119ce100" loc="135:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x1119ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1119ce480"/>
        <function-ref name="runTask" scoped="" ref="0x1119ce610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x111976020" loc="54:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111974870"/>
        <function-ref name="fired" scoped="" ref="0x111975840"/>
        <function-ref name="startAt" scoped="" ref="0x111974220"/>
        <function-ref name="isRunning" scoped="" ref="0x111975d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x111974d30"/>
        <function-ref name="start" scoped="" ref="0x111976e30"/>
        <function-ref name="stop" scoped="" ref="0x111975380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11197f150" loc="48:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11197f150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x10fd91800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x10fd91800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11197f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x111979b10" loc="53:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x111979b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x111978790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x11197a1d0" loc="52:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x11197a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x11197a550"/>
        <function-ref name="configureSingle" scoped="" ref="0x11197a6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x11197a870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x11197aa00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x11197ab90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x11197ad20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x111979020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x11197fe70" loc="49:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x11197fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x11197d910"/>
        <function-ref name="postBuffer" scoped="" ref="0x11197ea90"/>
        <function-ref name="read" scoped="" ref="0x11197d440"/>
        <function-ref name="readDone" scoped="" ref="0x11197b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x111a04970" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111a04970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111a011b0"/>
        <function-ref name="fired" scoped="" ref="0x111a021b0"/>
        <function-ref name="startAt" scoped="" ref="0x111a02b30"/>
        <function-ref name="isRunning" scoped="" ref="0x111a02670"/>
        <function-ref name="getAlarm" scoped="" ref="0x111a01670"/>
        <function-ref name="start" scoped="" ref="0x111a037c0"/>
        <function-ref name="stop" scoped="" ref="0x111a03cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111a04120" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111a04120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111a044a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112463ca0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112463ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1124604e0"/>
        <function-ref name="fired" scoped="" ref="0x1124614e0"/>
        <function-ref name="startAt" scoped="" ref="0x112461e60"/>
        <function-ref name="isRunning" scoped="" ref="0x1124619a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1124609a0"/>
        <function-ref name="start" scoped="" ref="0x112462ae0"/>
        <function-ref name="stop" scoped="" ref="0x112461020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112463450" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112463450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1124637d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x11244a440" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x11244a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11244a7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x11244a950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11244aae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11244ac70"/>
        <function-ref name="fired" scoped="" ref="0x11244ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x11244d880" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11244d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11244dc00"/>
        <function-ref name="setClockSource" scoped="" ref="0x11244dd90"/>
        <function-ref name="enableEvents" scoped="" ref="0x11244c020"/>
        <function-ref name="get" scoped="" ref="0x11244c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x11244c340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11244c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x11244c660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11244c7f0"/>
        <function-ref name="overflow" scoped="" ref="0x11244c980"/>
        <function-ref name="setMode" scoped="" ref="0x11244cb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11244cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x11244b020" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x11244b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11244b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x11244b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x11244b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11244b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11244b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x11244bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11244bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11244a020"/>
        <function-ref name="setControl" scoped="" ref="0x11244a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x1124400c0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1124400c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112440440"/>
        <function-ref name="setEvent" scoped="" ref="0x1124405d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x112440760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1124408f0"/>
        <function-ref name="fired" scoped="" ref="0x112440a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x112443710" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112443710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112443a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x112443c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x112443db0"/>
        <function-ref name="get" scoped="" ref="0x112442020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1124421b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112442340"/>
        <function-ref name="getMode" scoped="" ref="0x1124424d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112442660"/>
        <function-ref name="overflow" scoped="" ref="0x1124427f0"/>
        <function-ref name="setMode" scoped="" ref="0x112442980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112442b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1124475b0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1124475b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112444df0"/>
        <function-ref name="fired" scoped="" ref="0x112446df0"/>
        <function-ref name="startAt" scoped="" ref="0x1124447a0"/>
        <function-ref name="isRunning" scoped="" ref="0x1124442e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1124432e0"/>
        <function-ref name="start" scoped="" ref="0x112446420"/>
        <function-ref name="stop" scoped="" ref="0x112446930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112448ca0" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112448ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1124470a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x112442da0" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112442da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112441180"/>
        <function-ref name="getControl" scoped="" ref="0x112441310"/>
        <function-ref name="enableEvents" scoped="" ref="0x1124414a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112441630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1124417c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112441950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112441ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112441c70"/>
        <function-ref name="setControl" scoped="" ref="0x112441e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x11245d020" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x11245d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11245a870"/>
        <function-ref name="fired" scoped="" ref="0x11245b840"/>
        <function-ref name="startAt" scoped="" ref="0x11245a220"/>
        <function-ref name="isRunning" scoped="" ref="0x11245bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x11245ad30"/>
        <function-ref name="start" scoped="" ref="0x11245de30"/>
        <function-ref name="stop" scoped="" ref="0x11245b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x112457780" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x112457780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110297080"/>
            <typename><typedef-ref name="T32khz" ref="0x1102973f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112453020"/>
        <function-ref name="fired" scoped="" ref="0x112454020"/>
        <function-ref name="startAt" scoped="" ref="0x1124549a0"/>
        <function-ref name="isRunning" scoped="" ref="0x1124544e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1124534e0"/>
        <function-ref name="start" scoped="" ref="0x1124555d0"/>
        <function-ref name="stop" scoped="" ref="0x112455ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1124593d0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1124593d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110298460"/>
            <typename><typedef-ref name="TMilli" ref="0x110298bd0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112458240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112458bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112458700"/>
        <function-ref name="overflow" scoped="" ref="0x1124570d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x111a4cbf0" loc="26:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x111a4cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x111a49710"/>
        <function-ref name="postBuffer" scoped="" ref="0x111a4b860"/>
        <function-ref name="read" scoped="" ref="0x111a49220"/>
        <function-ref name="readDone" scoped="" ref="0x111a48220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x1119fccb0" loc="24:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x1119fccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x111a4d850"/>
        <function-ref name="postBuffer" scoped="" ref="0x1119d4940"/>
        <function-ref name="read" scoped="" ref="0x111a4d360"/>
        <function-ref name="readDone" scoped="" ref="0x111a4c360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x111a488f0" loc="27:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111a488f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111a48c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111a48e20"/>
        <function-ref name="request" scoped="" ref="0x111a46020"/>
        <function-ref name="granted" scoped="" ref="0x111a461b0"/>
        <function-ref name="isOwner" scoped="" ref="0x111a46340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x112471020" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x112471020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1124713a0"/>
        <function-ref name="configure" scoped="" ref="0x112471530"/>
        <function-ref name="dataReady" scoped="" ref="0x1124716c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x112472020" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112472020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1124723a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x112472530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x1124726c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x112472850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x1124729e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x112472b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x112472d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x112471910" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x112471910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x112471c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x112471e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x112470280" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x112470280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x11246f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112473360" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112473360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1124736e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112473870"/>
        <function-ref name="request" scoped="" ref="0x112473a00"/>
        <function-ref name="granted" scoped="" ref="0x112473b90"/>
        <function-ref name="isOwner" scoped="" ref="0x112473d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x1124a5dc0" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x1124a5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1124a3ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x1124a2120" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.LumSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x1124a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1124a2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x111a2e300" loc="44:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x111a2e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x111a2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x111a318a0" loc="43:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x111a318a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x111a31c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x111a21cb0" loc="51:../../tos/platforms/telosb/DemoSensorC.nc">
      <component-ref qname="SenderAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x111a21cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111a54940"/>
        <function-ref name="readDone" scoped="" ref="0x111a54dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1124991e0" loc="44:../../tos/platforms/telosb/VoltageC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x1124991e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112499dd0"/>
        <function-ref name="readDone" scoped="" ref="0x1124982a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x112495180" loc="44:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x112495180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112495d70"/>
        <function-ref name="readDone" scoped="" ref="0x112494220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x11248f3d0" loc="48:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x11248f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11248e020"/>
        <function-ref name="readDone" scoped="" ref="0x11248e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x112494900" loc="45:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x112494900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x1124924f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x112493560"/>
        <function-ref name="read" scoped="" ref="0x112492020"/>
        <function-ref name="readDone" scoped="" ref="0x112491020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1124915e0" loc="47:../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1124915e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112491960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112491af0"/>
        <function-ref name="request" scoped="" ref="0x112491c80"/>
        <function-ref name="granted" scoped="" ref="0x112491e10"/>
        <function-ref name="isOwner" scoped="" ref="0x11248f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x11248bbd0" loc="48:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x11248bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11248a860"/>
        <function-ref name="readDone" scoped="" ref="0x11248ace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x1124894a0" loc="49:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x1124894a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x112487110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x11251a400" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x11251a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x11251a780"/>
        <function-ref name="configure" scoped="" ref="0x11251a910"/>
        <function-ref name="dataReady" scoped="" ref="0x11251aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x11251c400" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x11251c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x11251c780"/>
        <function-ref name="configureSingle" scoped="" ref="0x11251c910"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x11251caa0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x11251cc30"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x11251cdc0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x11251a020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x11251a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x11251acf0" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x11251acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x1125190a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x112519230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x112519660" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x112519660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1125183d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11251d7a0" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11251d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11251db20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11251dcb0"/>
        <function-ref name="request" scoped="" ref="0x11251de40"/>
        <function-ref name="granted" scoped="" ref="0x11251c020"/>
        <function-ref name="isOwner" scoped="" ref="0x11251c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x11250cb60" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x11250cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x11250b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x11250bde0" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x11250bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x11250aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x1124825c0" loc="49:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x1124825c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x112481240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x112486840" loc="48:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x112486840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x112484340"/>
        <function-ref name="postBuffer" scoped="" ref="0x112485480"/>
        <function-ref name="read" scoped="" ref="0x112485df0"/>
        <function-ref name="readDone" scoped="" ref="0x112484df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x1124ffd30" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x1124ffd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1124fe0e0"/>
        <function-ref name="configure" scoped="" ref="0x1124fe270"/>
        <function-ref name="dataReady" scoped="" ref="0x1124fe400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x112500d70" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x112500d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1124ff180"/>
        <function-ref name="configureSingle" scoped="" ref="0x1124ff310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x1124ff4a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x1124ff630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x1124ff7c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x1124ff950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x1124ffae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x1124fe650" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x1124fe650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x1124fe9d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x1124feb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x1124fd020" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x1124fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1124fdc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112500160" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112500160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1125004e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112500670"/>
        <function-ref name="request" scoped="" ref="0x112500800"/>
        <function-ref name="granted" scoped="" ref="0x112500990"/>
        <function-ref name="isOwner" scoped="" ref="0x112500b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x1124f0ba0" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x1124f0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1124ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x1124efe00" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x1124efe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1124edac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x111a7e670" loc="35:../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <component-ref qname="Msp430InternalVoltageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x111a7e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x111a7b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x11247fbd0" loc="50:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x11247fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11247e8a0"/>
        <function-ref name="readDone" scoped="" ref="0x11247ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x112523520" loc="52:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x112523520"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1125211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112480e80" loc="49:../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112480e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11247f220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11247f3b0"/>
        <function-ref name="request" scoped="" ref="0x11247f540"/>
        <function-ref name="granted" scoped="" ref="0x11247f6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x11247f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x1124e2d30" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x1124e2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1124e10e0"/>
        <function-ref name="configure" scoped="" ref="0x1124e1270"/>
        <function-ref name="dataReady" scoped="" ref="0x1124e1400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x1124e3de0" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x1124e3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1124e2180"/>
        <function-ref name="configureSingle" scoped="" ref="0x1124e2310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x1124e24a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x1124e2630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x1124e27c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x1124e2950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x1124e2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x1124e1650" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x1124e1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x1124e19d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x1124e1b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x1124e0020" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x1124e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1124e0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1124e31d0" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1124e31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1124e3550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1124e36e0"/>
        <function-ref name="request" scoped="" ref="0x1124e3870"/>
        <function-ref name="granted" scoped="" ref="0x1124e3a00"/>
        <function-ref name="isOwner" scoped="" ref="0x1124e3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x1124d2670" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x1124d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1124d13d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x1124d19e0" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenderAppC.TempSensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x1124d19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x1125766b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x111b45020" loc="49:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x111b45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111b453a0"/>
        <function-ref name="getPayload" scoped="" ref="0x111b45530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111b456c0"/>
        <function-ref name="cancel" scoped="" ref="0x111b45850"/>
        <function-ref name="sendDone" scoped="" ref="0x111b459e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x111b45c30" loc="50:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111b45c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111b44020"/>
        <function-ref name="payloadLength" scoped="" ref="0x111b441b0"/>
        <function-ref name="getPayload" scoped="" ref="0x111b44340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111b444d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x111b44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x111b448b0" loc="51:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x111b448b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x111b44c30"/>
        <function-ref name="source" scoped="" ref="0x111b44dc0"/>
        <function-ref name="address" scoped="" ref="0x111b43020"/>
        <function-ref name="destination" scoped="" ref="0x111b431b0"/>
        <function-ref name="setSource" scoped="" ref="0x111b43340"/>
        <function-ref name="setDestination" scoped="" ref="0x111b434d0"/>
        <function-ref name="type" scoped="" ref="0x111b43660"/>
        <function-ref name="setType" scoped="" ref="0x111b437f0"/>
        <function-ref name="isForMe" scoped="" ref="0x111b43980"/>
        <function-ref name="setGroup" scoped="" ref="0x111b43b10"/>
        <function-ref name="localGroup" scoped="" ref="0x111b43ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x111b42020" loc="52:../../tos/system/AMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x111b42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111b423a0"/>
        <function-ref name="noAck" scoped="" ref="0x111b42530"/>
        <function-ref name="wasAcked" scoped="" ref="0x111b426c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x112569020" loc="49:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x112569020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1125693a0"/>
        <function-ref name="getPayload" scoped="" ref="0x112569530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1125696c0"/>
        <function-ref name="cancel" scoped="" ref="0x112569850"/>
        <function-ref name="sendDone" scoped="" ref="0x1125699e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x112569c30" loc="50:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x112569c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112568020"/>
        <function-ref name="payloadLength" scoped="" ref="0x1125681b0"/>
        <function-ref name="getPayload" scoped="" ref="0x112568340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1125684d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x112568660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1125688b0" loc="51:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1125688b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x112568c30"/>
        <function-ref name="source" scoped="" ref="0x112568dc0"/>
        <function-ref name="address" scoped="" ref="0x112567020"/>
        <function-ref name="destination" scoped="" ref="0x1125671b0"/>
        <function-ref name="setSource" scoped="" ref="0x112567340"/>
        <function-ref name="setDestination" scoped="" ref="0x1125674d0"/>
        <function-ref name="type" scoped="" ref="0x112567660"/>
        <function-ref name="setType" scoped="" ref="0x1125677f0"/>
        <function-ref name="isForMe" scoped="" ref="0x112567980"/>
        <function-ref name="setGroup" scoped="" ref="0x112567b10"/>
        <function-ref name="localGroup" scoped="" ref="0x112567ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x112566020" loc="52:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SenderAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x112566020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1125663a0"/>
        <function-ref name="noAck" scoped="" ref="0x112566530"/>
        <function-ref name="wasAcked" scoped="" ref="0x1125666c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x11255d9e0" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenderAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x11255d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11255dd60"/>
        <function-ref name="getPayload" scoped="" ref="0x11255c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11255c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x11255c340"/>
        <function-ref name="sendDone" scoped="" ref="0x11255c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x11255c780" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenderAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11255c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11255cb00"/>
        <function-ref name="getPayload" scoped="" ref="0x11255cc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11255ce20"/>
        <function-ref name="cancel" scoped="" ref="0x11255b020"/>
        <function-ref name="sendDone" scoped="" ref="0x11255b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x11255b400" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenderAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x11255b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x11255b780"/>
        <function-ref name="source" scoped="" ref="0x11255b910"/>
        <function-ref name="address" scoped="" ref="0x11255baa0"/>
        <function-ref name="destination" scoped="" ref="0x11255bc30"/>
        <function-ref name="setSource" scoped="" ref="0x11255bdc0"/>
        <function-ref name="setDestination" scoped="" ref="0x11255a020"/>
        <function-ref name="type" scoped="" ref="0x11255a1b0"/>
        <function-ref name="setType" scoped="" ref="0x11255a340"/>
        <function-ref name="isForMe" scoped="" ref="0x11255a4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x11255a660"/>
        <function-ref name="localGroup" scoped="" ref="0x11255a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111aab930" loc="43:../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111aab930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111aabcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x111aabe40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111aa8020"/>
        <function-ref name="cancel" scoped="" ref="0x111aa81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x111aa8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x111adb400" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x111adb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111adb7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x111adb930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111adbac0"/>
        <function-ref name="cancel" scoped="" ref="0x111adbc50"/>
        <function-ref name="sendDone" scoped="" ref="0x111adbde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111adc4b0" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111adc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111adc850"/>
        <function-ref name="getPayload" scoped="" ref="0x111adc9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111adcb70"/>
        <function-ref name="cancel" scoped="" ref="0x111adcd00"/>
        <function-ref name="sendDone" scoped="" ref="0x111adb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x111ad8720" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111ad8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111ad8aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x111ad8c30"/>
        <function-ref name="getPayload" scoped="" ref="0x111ad8dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111ad7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x111ad71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x111ad7480" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x111ad7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111ad7800"/>
        <function-ref name="runTask" scoped="" ref="0x111ad7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x111ad7c60" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x111ad7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111ad6020"/>
        <function-ref name="runTask" scoped="" ref="0x111ad61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x111ada060" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x111ada060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x111ada3e0"/>
        <function-ref name="source" scoped="" ref="0x111ada570"/>
        <function-ref name="address" scoped="" ref="0x111ada700"/>
        <function-ref name="destination" scoped="" ref="0x111ada890"/>
        <function-ref name="setSource" scoped="" ref="0x111adaa20"/>
        <function-ref name="setDestination" scoped="" ref="0x111adabb0"/>
        <function-ref name="type" scoped="" ref="0x111adad40"/>
        <function-ref name="setType" scoped="" ref="0x111ad8020"/>
        <function-ref name="isForMe" scoped="" ref="0x111ad81b0"/>
        <function-ref name="setGroup" scoped="" ref="0x111ad8340"/>
        <function-ref name="localGroup" scoped="" ref="0x111ad84d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x1102d0920" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1102d0920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x1102c4270" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x1102c2020" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1102d0920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1102c49f0" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x1102c4d10" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1102d0920"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x1102b1a50" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x11032b490" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11032b210" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x11032a550" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11032a2d0" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x110327890" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110327290" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1103275c0" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x110326960" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x110329a00" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110329440" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110329770" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110331470" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x11032daf0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x11032de70" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1103311d0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x11034cbb0" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11034c5b0" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x11034c8e0" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x11034ed00" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1103307d0" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110330550" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x11034dcf0" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11034d710" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x11034da60" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x110347460" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1103471e0" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x110346ab0" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110346830" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1103487b0" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110347cb0" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1102b0bf0" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1102b0bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1102a7980" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1102ab1f0" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x1102a8020" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1102a99a0" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x1102a9ce0" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x1102a91f0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x1102a6a10" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x1102a6190" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1102ab9d0" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x1102ad790" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1102ad510" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x1102a7020" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1102a89c0" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x1102a8d00" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x1102ac2a0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1102ac020" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1102acaa0" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x1102cdb20" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x1102cc350" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x1102ccb30" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x1102cbb00" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x1102c82b0" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1102c8ac0" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x1102cb350" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1102c7670" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x1102c73f0" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x1102cd390" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x1102c9350" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x1102c9ae0" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1103374a0" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x11031e590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110337220" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x110320020" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110322ca0" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x110324390" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x110324e50" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110324bd0" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x11033e960" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x11033e380" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x11033e6d0" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x11033f410" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110320e10" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x11033f180" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x11033adc0" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x11033ab40" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1103382b0" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x11033cbe0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x110338020" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x11031e1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x11033bbc0" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x11033b940" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x110336960" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x11031e590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110336380" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1103366d0" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x11031e590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x1103337a0" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x11031e590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x11036aa10" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x1103a0b40" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x1103a2de0" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x1103a0420" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x1103a2700" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x1103a15a0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x110383810" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x1103a2020" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x1103a1cc0" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x110195070" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10fe47670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x1103f9500" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x1103f9280" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x1103e39c0" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1103975a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x110396020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x1103f9d70" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x1103f8c80" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x1103d7b00" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x1103f84f0" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x1103d9190" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x1103d9920" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x1103d7390" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1103975a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x110396020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1103d7110" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1103975a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x110396020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x1103eb520" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x1103e9bc0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x1103e9940" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x1103e8770" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1103e84f0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1103e9190" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1103ea940" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x1103ea020" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x1103ebc50" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x1103f4880" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x1103f12a0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1103f1020" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x1103f1c80" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x1103f1a00" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x1103f06a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x1103f0420" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1103f0d90" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1103de120" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x1103dda10" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x1103dd790" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x1103de850" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1103e2350" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x1103dd020" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1103e1270" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x1103e09e0" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1103e2ae0" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1103e1980" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x1103e02e0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1103e0060" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x1103dc450" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x1103dc1d0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x11042e1f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x11026c670" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x10fe9e910" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10fd8e020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10fd99020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10fd8e770" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10fda0020" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10fda0870" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x11054ce30" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x11054a5c0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x11054c020" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x110549480" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x11054c720" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x11054ace0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x11054d120" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x11054d7f0" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x110570020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x110570770" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x11056b2e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x11056b060" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x110573770" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x11056f780" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x11056bbd0" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x11056f020" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110571820" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x11056c020" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x110571020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1105768c0" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x11056e020" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x11056c7c0" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x11056e7b0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x110573020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1107b3350" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1107b3350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1107b3c70" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1107e2c70" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1107e2c70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1107df020" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1107dbc50" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1107deba0" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x1107db2b0" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1107dcbd0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
          </variable>
          <variable name="dt" ref="0x1107db020" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1107dc3b0" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x1107da480" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1107dfb80" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1107df900" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107df020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1107de3e0" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110841100" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110841100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x110841340" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110841340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x110841c60" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110841340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x110840d70" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x110840510" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x11083f500" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x110968d10" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
              <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109683b0" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x110968700" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110968a30" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x110961e30" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110961e30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1109930d0" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109930d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x1109910b0" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109930d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110992e00" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x11098f2a0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11098f020" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x110993c90" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110993a10" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x11098e610" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109930d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11098e020" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x11098e380" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109930d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x110982680" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110982060" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x1109823f0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x110981850" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109815d0" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x110983810" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x110986d60" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x110986ae0" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x11095f2a0" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11095f020" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x11095e490" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11095e210" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x1109965f0" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110996370" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x1109cd6e0" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109cd460" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x1109d0940" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109d06c0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x110997020" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x110999d40" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x1109994a0" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x110999220" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x110997a50" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x1109977d0" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x1109cf860" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109cf5e0" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x1109c1020" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x1109c28b0" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x1109c2c30" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x1109a22b0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1109a4c50" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x1109a2020" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x11099e980" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x11099e380" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x11099e6f0" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x1109a2d90" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10fb01110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1109a2b10" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x1109a0880" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1109a0600" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x1109a4450" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1109a41d0" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x1109a1990" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1109a1710" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x1109c6830" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109c65b0" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x1109ca8f0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109ca2d0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x1109ca660" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x1109c8810" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109c8590" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x1109c7d20" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109c7700" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x1109c7a90" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x1109c4810" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109c4590" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x11099b3d0" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11099b150" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1109bbe10" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109bb850" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1109bbb80" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1109ea620" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109ea020" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1109ea350" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1109e9660" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1109ed2a0" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109ed020" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1109eb750" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109eb170" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1109eb4c0" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x1109b9e10" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x1109bae20" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x1109ba4b0" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x1109b9640" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x1109b88b0" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110a043a0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110a08dc0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x110a04110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x110a026a0" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x110a00e70" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x110a00060" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x110a008a0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110a00bd0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x110a01840" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110a01260" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x110a015b0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x110a04e30" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x110a04bb0" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x1109fb0e0" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x110a05860" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x1109d3a40" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110a06270" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x1109f52e0" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109f5020" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x1109f7710" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x1102da980"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x1102d8390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109f7410" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x1109f4620" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x1102d8e90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x1102d57e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109f4320" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x1109d16e0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x110a09840" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x110a09070" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x1109d5e20" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x1109d2e80" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x110a0b020" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x110a0b840" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x1109d26c0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x1109efd00" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x1109f0350" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x1109ef530" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x1109ef2b0" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x1109f0ac0" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x1109f2020" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x1109f9c80" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x1109f2ad0" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x1109f2850" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x110a48870" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x110a48290" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x110a485e0" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x110a491f0" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x110a4a880" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x110a4a210" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x110a4a5f0" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x110a51c10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110a51990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x110a49a70" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x110a4d730" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x110a4d4b0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x110a4fd30" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x110a4fab0" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x110a84ae0" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x110a4c9c0" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x110a4c740" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x110a842b0" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x110a4e4d0" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x110985ab0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x11097c240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x110a4ecc0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x110a511f0" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x110a4f390" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x110a4c020" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x110a9a520" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1102dfb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110a9a2a0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x110a99030" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1102dfb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110a9ad80" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x110a75c50" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x110985ab0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x11097c240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x110aa20e0" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x110aa1070" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x110aa28c0" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x11031e590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x110aa3860" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x11031e590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x110aa3280" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x11031e590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x110aa35d0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11031e970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x110a93710" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1102dfb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x110a9f840" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1102dfb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x110a679a0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x110a9f250" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110a9f5a0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x110a9c020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1102dfb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x110a9d150" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x110a9d9c0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110a9dd10" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x110a687e0" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x110a68020" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x110a69720" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x110a6cdb0" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x110b85020" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x110b841f0" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x110b859c0" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x110b85740" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x110b87780" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x110ba6020" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x110be7ac0" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x110ba77c0" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x110be72a0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x110be7020" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x110ba7020" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x110ba6820" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x110cfb270" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x110cfbac0" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x110cfa350" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x110d1bb00" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110d1b520" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110d1b870" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x110d16dd0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110d16490" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110d167e0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x110d16b30" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x110d176b0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1102dfb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110d170d0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110d17420" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x110d1c6f0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1102dfb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110d1c110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110d1c460" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x110d182c0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110d198f0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110d19c40" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x110d18020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110d43cf0" loc="70:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x110d43380" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x110d43710" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d43a50" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x110d3f3c0" loc="82:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x110d406a0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x110d40a30" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d40d70" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x110d3f110" loc="83:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x110d00c80" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x110d00a00" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x110e1d6f0" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x110e1c070" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x110e15710" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x110dbb020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x110dbb440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x110e1a2a0" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110e1a020" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x110e18680" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110e18400" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x110e1ab10" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x110e172a0" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110e17020" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x110e0eca0" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x110e0e480" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x110e062a0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110e06020" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x110e07780" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x110e2faf0" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x110e3a790" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x110e47610" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110d8d080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x110d8d8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x110e47390" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110d8d080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x110d8d8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x110e3d870" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x110e44a90" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110dd2080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x110dd28c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x110e44810" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110dd2080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x110dd28c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x110e34e70" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x110e30480" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x110e44070" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110dd5020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x110dd57b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x110e432b0" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110dd2080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x110dd28c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x110e3f020" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x110e40d30" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x110e40610" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x110e34740" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x110e45840" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110dd5020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x110dd57b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x110e455c0" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110dd5020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x110dd57b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x110e42420" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x110e325d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x110e42e00" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x110e42b80" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x110e3e910" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x110e3d0e0" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x110e35840" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x110e37790" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x110e3b7e0" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x110e34020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x110e39020" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x110e32cf0" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x110e3f800" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x110d93dc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x110d8f680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x110e314c0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x110e2f350" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x110e43c50" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x110e439d0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x110e2d4d0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110e2d250" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x110e47df0" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110d8d080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x110d8d8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x110e3b020" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x110e39770" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x110e35020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x110df2e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x110df12b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x110e36cf0" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x110df2e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x110df12b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x110e362a0" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x110dbb020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x110dbb440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x110e36020" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x110dbb020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x110dbb440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x110e2dd90" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x110e31cb0" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x110e3e070" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x110e30be0" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x110e37020" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x110e3a020" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x110ead600" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x110ed4070" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x110e99b10" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x110edbd50" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x110edbad0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x110ea0270" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x110ed7350" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x110ee0cf0" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x110e9ac50" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x110e979c0" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x110e9bc00" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x110e9b980" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x110e9d120" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x110e95790" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x110edac80" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x110ed58f0" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x110edb390" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x110ed0b60" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x110ecb270" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x110e9f0e0" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x110e95020" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x110ee2910" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x110e9a500" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x110ea2020" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x110eddba0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x110edd920" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x110ea57d0" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x110ed9b80" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x110ed47d0" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x110ecd350" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x110ecca90" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x110ed6270" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x110ed2020" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x110eda520" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x110ed1bb0" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x110e9f800" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x110ede020" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x110ed1020" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x110ed5190" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x110ee0520" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x110ee02a0" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x110ecdaf0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x110edd1f0" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x110ed7ac0" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x110ea2aa0" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x110ddfb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x110ddd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x110ea2820" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x110ddfb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x110ddd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x110e96870" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x110e9e980" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x110e9e700" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x110ee2120" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110e95e70" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x110ed03b0" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x110e9b270" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x110e9e020" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x110ede9e0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x110ede760" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x110ea09a0" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x110ed2740" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x110ed69e0" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x110ed9420" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x110edf740" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x110edf4c0" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x110e96120" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x110e993b0" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x110ecc2b0" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x110e9daa0" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x110e9d820" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x110ecf350" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x110e97270" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x110ecfb10" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x110f6f780" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x110f6e020" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x110f8b900" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x110f8aa20" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x110f8b070" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x110f8a1f0" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x110f89390" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x110fd0b50" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110f87b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x110fd08d0" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110f87b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x110fd5b80" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x110fd26b0" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110f87b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x110fd2430" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110f87b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x110fd0020" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x110f87b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1111e15e0" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1111e1360" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1111cdb00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x1111cd1c0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x1111cd530" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1111cd860" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1111cc880" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1111cc2c0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1111cc5f0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x11120e4d0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x11120e4d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x11120e710" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11120e710"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x11120d2a0" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11120e710"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x11120d020" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11120e710"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x111266580" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1112929e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x111292020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x111292750" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x1112937f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x111293020" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x111296d30" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x11124a3d0" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11124a150" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x11124c3d0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11124c150" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x111248350" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1112480d0" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x111249390" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111249110" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11032f3c0"/>
                <typename><typedef-ref name="message_t" ref="0x11032ea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x1114b55f0" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1114b55f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1114b22a0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1114b55f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x1114b2020" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1114b55f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x111658cb0" loc="57:../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x111658cb0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x111650060" loc="89:../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x111658cb0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1116526b0" loc="89:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x111652a30" loc="90:../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x111658cb0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x111652d90" loc="90:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x111654c10" loc="68:../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x111658cb0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x111654620" loc="68:../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x111658cb0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x111654980" loc="68:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x111651e60" loc="78:../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x111651be0" loc="78:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x11164f660" loc="102:../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x11164f020" loc="102:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x11164f3d0" loc="102:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fb02920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x1116572b0" loc="41:../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x111630d20" loc="45:../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x111630d20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x11162c730" loc="58:../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x111630d20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x11169a390" loc="52:../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x11169a390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x11169ac90" loc="58:../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x111699a20" loc="66:../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x11169a390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x111699470" loc="66:../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x111699790" loc="66:../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x11169a390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x111685df0" loc="189:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x11168eaa0" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x11168e820" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x11168c020" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x11168d990" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x11168dd00" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x111687a70" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x1116887e0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x1116870d0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x111687450" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x1116877c0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x111682770" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x1116820d0" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x111682460" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x1116893c0" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x11168a150" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x11168a9f0" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x11168ad80" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x111689110" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x111684ad0" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111684850" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x11170fce0" loc="97:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x11170f020" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x111646110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x1116465e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x1116a3970" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x1116474e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x111649b50"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x1116a3d60" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x111646110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x1116465e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x1116a2110" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x1116a24b0" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x1116a2860" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x1116a2bd0" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x11170dd40" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x11170d720" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x11170dab0" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x11170b780" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x11170a020" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x111701da0" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1116fe6a0" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fd95980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x1116f1ac0" loc="63:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x111636ce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x1116357a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x1116eec30" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x111646110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x1116465e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x1116ee9b0" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x1116ea350" loc="106:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x1116e9550" loc="118:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fd92090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x1116ead50" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x1116eaad0" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x1116ef350" loc="68:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x111633e20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x111632770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x1116ee130" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x111646110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x1116465e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x1116efac0" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x1116efe80" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x111646110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x1116465e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x1116e8600" loc="128:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x1116f2760" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x111636ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x1116357a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x1116f24e0" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x111636ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x1116357a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x1116ed750" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x1116ed4d0" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fb02160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x1116ec2a0" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x1116ec020" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x1116ecb10" loc="101:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fb02520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x1116e9d10" loc="123:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x1116e8da0" loc="133:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x1116f12a0" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x111633e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x111632770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x1116f1020" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x111633e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x111632770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
